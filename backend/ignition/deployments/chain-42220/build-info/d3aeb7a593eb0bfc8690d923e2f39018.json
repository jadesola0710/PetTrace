{
  "id": "d3aeb7a593eb0bfc8690d923e2f39018",
  "_format": "hh-sol-build-info-1",
  "solcVersion": "0.8.28",
  "solcLongVersion": "0.8.28+commit.7893614a",
  "input": {
    "language": "Solidity",
    "sources": {
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (interfaces/draft-IERC6093.sol)\npragma solidity >=0.8.4;\n\n/**\n * @dev Standard ERC-20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC-721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC-1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"
      },
      "@openzeppelin/contracts/token/ERC20/ERC20.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC20Metadata} from \"./extensions/IERC20Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC20Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC-20\n * applications.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * Both values are immutable: they can only be set once during construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /// @inheritdoc IERC20\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /// @inheritdoc IERC20\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /// @inheritdoc IERC20\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Skips emitting an {Approval} event indicating an allowance update. This is not\n     * required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner`'s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     *\n     * ```solidity\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner`'s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance < type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity >=0.6.2;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC-20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC20/IERC20.sol)\n\npragma solidity >=0.4.16;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
      },
      "@openzeppelin/contracts/utils/Context.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
      },
      "contracts/ERC20Mock.sol": {
        "content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.20;\r\n\r\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\r\n\r\ncontract ERC20Mock is ERC20 {\r\n    constructor(\r\n        string memory name,\r\n        string memory symbol,\r\n        address initialAccount,\r\n        uint256 initialBalance\r\n    ) ERC20(name, symbol) {\r\n        _mint(initialAccount, initialBalance);\r\n    }\r\n}\r\n"
      },
      "contracts/PetTrace.sol": {
        "content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.20;\r\n\r\n/**\r\n * @title IERC20 Interface\r\n * @dev Standard ERC20 interface with required functions for token interactions\r\n */\r\ninterface IERC20 {\r\n    function transfer(address to, uint256 amount) external returns (bool);\r\n    function transferFrom(\r\n        address from,\r\n        address to,\r\n        uint256 amount\r\n    ) external returns (bool);\r\n    function balanceOf(address account) external view returns (uint256);\r\n    function allowance(\r\n        address owner,\r\n        address spender\r\n    ) external view returns (uint256);\r\n}\r\n\r\ninterface IERC677 is IERC20 {\r\n    function transferAndCall(\r\n        address to,\r\n        uint value,\r\n        bytes calldata data\r\n    ) external returns (bool);\r\n}\r\n\r\n/**\r\n * @title PetTrace\r\n * @dev A decentralized application for tracking lost pets and managing bounties on Celo network\r\n * @notice Allows owners to post lost pets with bounties (CELO/cUSD) and finders to claim rewards\r\n */\r\ncontract PetTrace {\r\n    // Security state variables\r\n    bool private _locked;\r\n    address public admin;\r\n\r\n    // Constants\r\n    address public constant CUSD_ADDRESS =\r\n        0x765DE816845861e75A25fCA122bb6898B8B1282a;\r\n    address public constant GDOLLAR_ADDRESS =\r\n        0x62B8B11039FcfE5aB0C56E502b1C372A3d2a9c7A;\r\n\r\n    uint256 public constant MAX_CELO_BOUNTY = 10 ether;\r\n    uint256 public constant MAX_CUSD_BOUNTY = 10000 * 1e18;\r\n    uint256 public constant BOUNTY_TIMEOUT = 90 days;\r\n\r\n    // Pet data storage\r\n    uint256 public nextPetId;\r\n    mapping(uint256 => Pet) public pets;\r\n    mapping(uint256 => uint256) public escrowedCUSD;\r\n    mapping(uint256 => uint256) public escrowedGDOLLAR;\r\n    mapping(uint256 => uint256) public postTime;\r\n\r\n    enum PetStatus {\r\n        Active, // Pet reported lost, bounty active\r\n        Found, // Pet found and confirmed\r\n        Cancelled // Pet report cancelled and bounty refunded\r\n    }\r\n\r\n    struct Pet {\r\n        uint256 id;\r\n        address payable owner;\r\n        string name;\r\n        string breed;\r\n        string gender;\r\n        uint128 sizeCm;\r\n        uint128 ageMonths;\r\n        string dateTimeLost;\r\n        string description;\r\n        string imageUrl;\r\n        string lastSeenLocation;\r\n        string contactName;\r\n        string contactPhone;\r\n        string contactEmail;\r\n        uint128 celoBounty;\r\n        uint128 cUSDBounty;\r\n        uint128 gDollarBounty;\r\n        PetStatus status;\r\n        bool ownerConfirmed;\r\n        bool finderConfirmed;\r\n        address finder;\r\n    }\r\n\r\n    // Modifiers\r\n    modifier nonReentrant() {\r\n        require(!_locked, \"ReentrancyGuard: reentrant call\");\r\n        _locked = true;\r\n        _;\r\n        _locked = false;\r\n    }\r\n\r\n    modifier onlyPetOwner(uint256 petId) {\r\n        require(msg.sender == pets[petId].owner, \"Not pet owner\");\r\n        _;\r\n    }\r\n\r\n    modifier petExists(uint256 petId) {\r\n        require(petId < nextPetId, \"Pet does not exist\");\r\n        _;\r\n    }\r\n\r\n    modifier onlyAdmin() {\r\n        require(msg.sender == admin, \"Not admin\");\r\n        _;\r\n    }\r\n\r\n    // Events\r\n    event PetPosted(uint256 indexed petId, address indexed owner);\r\n    event PetFound(uint256 indexed petId, address indexed finder);\r\n    event BountyClaimed(\r\n        uint256 indexed petId,\r\n        address indexed finder,\r\n        uint256 celoAmount,\r\n        uint256 cUSDAmount,\r\n        uint256 gDollarAmount\r\n    );\r\n    event ConfirmationAdded(\r\n        uint256 indexed petId,\r\n        address indexed confirmer,\r\n        bool isOwner\r\n    );\r\n    event BountyRefunded(\r\n        uint256 indexed petId,\r\n        address indexed owner,\r\n        uint256 celoAmount,\r\n        uint256 cUSDAmount,\r\n        uint256 gDollarAmount\r\n    );\r\n    event AdminChanged(address indexed newAdmin);\r\n\r\n    constructor() {\r\n        admin = msg.sender;\r\n    }\r\n\r\n    // ==================== CORE FUNCTIONS ====================\r\n\r\n    /**\r\n     * @notice Post a lost pet with optional bounty\r\n     * @dev Creates new pet record and escrows bounty\r\n     */\r\n    function postLostPet(\r\n        string calldata name,\r\n        string calldata breed,\r\n        string calldata gender,\r\n        uint128 sizeCm,\r\n        uint128 ageMonths,\r\n        string calldata dateTimeLost,\r\n        string calldata description,\r\n        string calldata imageUrl,\r\n        string calldata lastSeenLocation,\r\n        string calldata contactName,\r\n        string calldata contactPhone,\r\n        string calldata contactEmail,\r\n        uint128 cUSDBounty,\r\n        uint128 gDollarBounty\r\n    ) external payable nonReentrant {\r\n        // Input validation\r\n        require(msg.value <= MAX_CELO_BOUNTY, \"CELO bounty too large\");\r\n        require(cUSDBounty <= MAX_CUSD_BOUNTY, \"cUSD bounty too large\");\r\n        require(gDollarBounty <= MAX_CUSD_BOUNTY, \"G$ bounty too large\");\r\n        require(\r\n            msg.value > 0 || cUSDBounty > 0 || gDollarBounty > 0,\r\n            \"Bounty required\"\r\n        );\r\n\r\n        _validateString(name, 2, 50, \"Name\");\r\n        _validateString(breed, 2, 50, \"Breed\");\r\n        _validateString(gender, 1, 10, \"Gender\");\r\n        _validateString(description, 10, 500, \"Description\");\r\n        _validateString(imageUrl, 10, 200, \"Image URL\");\r\n        _validateString(lastSeenLocation, 5, 200, \"Location\");\r\n        _validateString(contactName, 2, 100, \"Contact name\");\r\n        _validateString(contactPhone, 5, 20, \"Contact phone\");\r\n\r\n        require(sizeCm >= 10 && sizeCm <= 200, \"Invalid size\");\r\n        require(ageMonths >= 1 && ageMonths <= 240, \"Invalid age\");\r\n        require(_isValidEmail(contactEmail), \"Invalid email\");\r\n\r\n        if (gDollarBounty > 0) {\r\n            require(\r\n                IERC20(GDOLLAR_ADDRESS).transferFrom(\r\n                    msg.sender,\r\n                    address(this),\r\n                    gDollarBounty\r\n                ),\r\n                \"G$ transfer failed\"\r\n            );\r\n            escrowedGDOLLAR[nextPetId] = gDollarBounty;\r\n        }\r\n        // Handle cUSD transfer\r\n        if (cUSDBounty > 0) {\r\n            require(\r\n                IERC20(CUSD_ADDRESS).transferFrom(\r\n                    msg.sender,\r\n                    address(this),\r\n                    cUSDBounty\r\n                ),\r\n                \"cUSD transfer failed\"\r\n            );\r\n            escrowedCUSD[nextPetId] = cUSDBounty;\r\n        }\r\n\r\n        // Create pet record\r\n        pets[nextPetId] = Pet({\r\n            id: nextPetId,\r\n            owner: payable(msg.sender),\r\n            name: name,\r\n            breed: breed,\r\n            gender: gender,\r\n            sizeCm: sizeCm,\r\n            ageMonths: ageMonths,\r\n            dateTimeLost: dateTimeLost,\r\n            description: description,\r\n            imageUrl: imageUrl,\r\n            lastSeenLocation: lastSeenLocation,\r\n            contactName: contactName,\r\n            contactPhone: contactPhone,\r\n            contactEmail: contactEmail,\r\n            celoBounty: uint128(msg.value),\r\n            cUSDBounty: cUSDBounty,\r\n            gDollarBounty: gDollarBounty,\r\n            status: PetStatus.Active,\r\n            ownerConfirmed: false,\r\n            finderConfirmed: false,\r\n            finder: address(0)\r\n        });\r\n\r\n        postTime[nextPetId] = block.timestamp;\r\n        emit PetPosted(nextPetId, msg.sender);\r\n        nextPetId++;\r\n    }\r\n\r\n    /**\r\n     * @notice Mark pet as found\r\n     * @dev Can be called by anyone except owner\r\n     */\r\n    function markAsFound(uint256 petId) external petExists(petId) nonReentrant {\r\n        Pet storage pet = pets[petId];\r\n        require(pet.status == PetStatus.Active, \"Pet not active\");\r\n\r\n        require(msg.sender != pet.owner, \"Owner cannot be finder\");\r\n\r\n        pet.finder = msg.sender;\r\n        pet.finderConfirmed = true;\r\n\r\n        if (pet.ownerConfirmed) {\r\n            pet.status = PetStatus.Found;\r\n            emit PetFound(petId, msg.sender);\r\n        }\r\n\r\n        emit ConfirmationAdded(petId, msg.sender, false);\r\n    }\r\n\r\n    /**\r\n     * @notice Confirm found pet by owner\r\n     * @dev Completes finding process if finder also confirmed\r\n     */\r\n    function confirmFoundByOwner(\r\n        uint256 petId\r\n    ) external onlyPetOwner(petId) nonReentrant {\r\n        Pet storage pet = pets[petId];\r\n        require(pet.status == PetStatus.Active, \"Pet not active\");\r\n        require(pet.finder != address(0), \"No finder assigned\");\r\n\r\n        pet.ownerConfirmed = true;\r\n\r\n        if (pet.finderConfirmed) {\r\n            pet.status = PetStatus.Found;\r\n\r\n            emit PetFound(petId, pet.finder);\r\n        }\r\n\r\n        emit ConfirmationAdded(petId, msg.sender, true);\r\n    }\r\n\r\n    /**\r\n     * @notice Claim bounty for found pet\r\n     * @dev Can only be called by finder after confirmation\r\n     */\r\n\r\n    function claimBounty(uint256 petId) external petExists(petId) nonReentrant {\r\n        Pet storage pet = pets[petId];\r\n        require(pet.status == PetStatus.Found, \"Pet not found yet\");\r\n        require(msg.sender == pet.finder, \"Not finder\");\r\n\r\n        require(\r\n            pet.celoBounty > 0 || pet.cUSDBounty > 0 || pet.gDollarBounty > 0,\r\n            \"No bounty\"\r\n        );\r\n\r\n        uint256 celoAmount = pet.celoBounty;\r\n        uint256 cUSDAmount = pet.cUSDBounty;\r\n        uint256 gDollarAmount = pet.gDollarBounty;\r\n\r\n        // Reset state before transfers\r\n        pet.celoBounty = 0;\r\n        pet.cUSDBounty = 0;\r\n        pet.gDollarBounty = 0;\r\n        escrowedCUSD[petId] = 0;\r\n        escrowedGDOLLAR[petId] = 0;\r\n\r\n        // Transfer funds\r\n        if (celoAmount > 0) {\r\n            payable(msg.sender).transfer(celoAmount);\r\n        }\r\n        if (cUSDAmount > 0) {\r\n            require(\r\n                IERC20(CUSD_ADDRESS).transfer(msg.sender, cUSDAmount),\r\n                \"cUSD transfer failed\"\r\n            );\r\n        }\r\n        // Transfer G$ (ERC-677) - Updated!\r\n        if (gDollarAmount > 0) {\r\n            require(\r\n                IERC677(GDOLLAR_ADDRESS).transferAndCall(\r\n                    msg.sender, // Recipient\r\n                    gDollarAmount, // Amount\r\n                    \"\" // Optional data (empty for simple transfers)\r\n                ),\r\n                \"G$ transfer failed\"\r\n            );\r\n        }\r\n\r\n        emit BountyClaimed(\r\n            petId,\r\n            msg.sender,\r\n            celoAmount,\r\n            cUSDAmount,\r\n            gDollarAmount\r\n        );\r\n    }\r\n\r\n    /**\r\n     * @notice Cancel lost pet report and refund bounties\r\n     * @dev Can only be called by owner before finder assigned\r\n     */\r\n    function cancelAndRefund(\r\n        uint256 petId\r\n    ) external onlyPetOwner(petId) nonReentrant {\r\n        Pet storage pet = pets[petId];\r\n        require(pet.status == PetStatus.Active, \"Pet not active\");\r\n        require(pet.finder == address(0), \"Finder already assigned\");\r\n\r\n        uint256 celoAmount = pet.celoBounty;\r\n        uint256 cUSDAmount = pet.cUSDBounty;\r\n        uint256 gDollarAmount = pet.gDollarBounty;\r\n\r\n        // Reset state\r\n        pet.celoBounty = 0;\r\n        pet.cUSDBounty = 0;\r\n        pet.gDollarBounty = 0; // Add this\r\n\r\n        escrowedCUSD[petId] = 0;\r\n        escrowedGDOLLAR[petId] = 0; // Add this\r\n\r\n        // Refund funds\r\n        if (celoAmount > 0) {\r\n            payable(msg.sender).transfer(celoAmount);\r\n        }\r\n        if (cUSDAmount > 0) {\r\n            require(\r\n                IERC20(CUSD_ADDRESS).transfer(msg.sender, cUSDAmount),\r\n                \"cUSD refund failed\"\r\n            );\r\n        }\r\n        if (gDollarAmount > 0) {\r\n            require(\r\n                IERC20(GDOLLAR_ADDRESS).transfer(msg.sender, gDollarAmount),\r\n                \"G$ refund failed\"\r\n            );\r\n        }\r\n\r\n        pet.status = PetStatus.Cancelled;\r\n\r\n        emit BountyRefunded(\r\n            petId,\r\n            msg.sender,\r\n            celoAmount,\r\n            cUSDAmount,\r\n            gDollarAmount\r\n        );\r\n    }\r\n\r\n    // ==================== ADMIN FUNCTIONS ====================\r\n\r\n    /**\r\n     * @notice Transfer admin rights\r\n     * @param newAdmin Address of new admin\r\n     */\r\n    function transferAdmin(address newAdmin) external onlyAdmin {\r\n        require(newAdmin != address(0), \"Invalid address\");\r\n        admin = newAdmin;\r\n        emit AdminChanged(newAdmin);\r\n    }\r\n\r\n    /**\r\n     * @notice Emergency withdraw cUSD (admin only)\r\n     * @param to Address to send funds to\r\n     */\r\n    function emergencyWithdrawCUSD(address to) external onlyAdmin {\r\n        uint256 balance = IERC20(CUSD_ADDRESS).balanceOf(address(this));\r\n        require(IERC20(CUSD_ADDRESS).transfer(to, balance), \"Transfer failed\");\r\n    }\r\n\r\n    // ==================== VIEW FUNCTIONS ====================\r\n\r\n    /**\r\n     * @notice Get paginated list of lost pet IDs\r\n     * @param startIndex Starting index (0-based)\r\n     * @param maxCount Maximum number of IDs to return\r\n     * @return ids Array of pet IDs\r\n     * @return hasMore Whether more results exist\r\n     */\r\n    function getLostPetIds(\r\n        uint256 startIndex,\r\n        uint256 maxCount\r\n    ) public view returns (uint256[] memory ids, bool hasMore) {\r\n        uint256 totalLost = 0;\r\n        uint256 endIndex = startIndex + maxCount;\r\n        if (endIndex > nextPetId) endIndex = nextPetId;\r\n\r\n        // Count lost pets in range\r\n        for (uint256 i = startIndex; i < endIndex; i++) {\r\n            // if (!pets[i].isFound) totalLost++;\r\n            if (pets[i].status == PetStatus.Active) totalLost++;\r\n        }\r\n\r\n        // Initialize and populate array\r\n        ids = new uint256[](totalLost);\r\n        uint256 currentIndex = 0;\r\n\r\n        for (uint256 i = startIndex; i < endIndex; i++) {\r\n            if (pets[i].status == PetStatus.Active) {\r\n                ids[currentIndex] = i;\r\n                currentIndex++;\r\n            }\r\n        }\r\n\r\n        hasMore = endIndex < nextPetId;\r\n        return (ids, hasMore);\r\n    }\r\n\r\n    /**\r\n     * @notice Get full pet details\r\n     * @param petId ID of pet to retrieve\r\n     * @return All pet details in a tuple\r\n     */\r\n    function getPetDetails(\r\n        uint256 petId\r\n    )\r\n        public\r\n        view\r\n        petExists(petId)\r\n        returns (\r\n            uint256,\r\n            address,\r\n            string memory,\r\n            string memory,\r\n            string memory,\r\n            uint128,\r\n            uint128,\r\n            string memory,\r\n            string memory,\r\n            string memory,\r\n            string memory,\r\n            string memory,\r\n            string memory,\r\n            string memory,\r\n            uint128,\r\n            uint128,\r\n            uint128,\r\n            PetStatus,\r\n            bool,\r\n            bool,\r\n            address\r\n        )\r\n    {\r\n        Pet storage pet = pets[petId];\r\n        return (\r\n            pet.id,\r\n            pet.owner,\r\n            pet.name,\r\n            pet.breed,\r\n            pet.gender,\r\n            pet.sizeCm,\r\n            pet.ageMonths,\r\n            pet.dateTimeLost,\r\n            pet.description,\r\n            pet.imageUrl,\r\n            pet.lastSeenLocation,\r\n            pet.contactName,\r\n            pet.contactPhone,\r\n            pet.contactEmail,\r\n            pet.celoBounty,\r\n            pet.cUSDBounty,\r\n            pet.gDollarBounty,\r\n            pet.status,\r\n            pet.ownerConfirmed,\r\n            pet.finderConfirmed,\r\n            pet.finder\r\n        );\r\n    }\r\n\r\n    /**\r\n     * @notice Get all lost pets (caution: may hit gas limits)\r\n     * @return Two arrays: pet IDs and Pet structs\r\n     */\r\n    function getAllLostPets()\r\n        public\r\n        view\r\n        returns (uint256[] memory, Pet[] memory)\r\n    {\r\n        uint256 count = 0;\r\n\r\n        // Count lost pets\r\n        for (uint256 i = 0; i < nextPetId; i++) {\r\n            // if (!pets[i].isFound) count++;\r\n            if (pets[i].status == PetStatus.Active) count++;\r\n        }\r\n\r\n        // Initialize arrays\r\n        uint256[] memory ids = new uint256[](count);\r\n        Pet[] memory lostPets = new Pet[](count);\r\n        uint256 index = 0;\r\n\r\n        // Populate arrays\r\n        for (uint256 i = 0; i < nextPetId; i++) {\r\n            if (pets[i].status == PetStatus.Active) {\r\n                ids[index] = i;\r\n                lostPets[index] = pets[i];\r\n                index++;\r\n            }\r\n        }\r\n\r\n        return (ids, lostPets);\r\n    }\r\n\r\n    function getAllPets() public view returns (Pet[] memory) {\r\n        Pet[] memory result = new Pet[](nextPetId);\r\n        for (uint256 i = 0; i < nextPetId; i++) {\r\n            result[i] = pets[i];\r\n        }\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * @notice Get count of lost pets\r\n     * @return Number of pets not found\r\n     */\r\n    function getLostPetsCount() public view returns (uint256) {\r\n        uint256 counter = 0;\r\n        for (uint256 i = 0; i < nextPetId; i++) {\r\n            if (pets[i].status == PetStatus.Active) counter++;\r\n        }\r\n        return counter;\r\n    }\r\n\r\n    // ==================== INTERNAL HELPERS ====================\r\n\r\n    function _validateString(\r\n        string calldata str,\r\n        uint min,\r\n        uint max,\r\n        string memory field\r\n    ) internal pure {\r\n        bytes memory b = bytes(str);\r\n        require(\r\n            b.length >= min && b.length <= max,\r\n            string(abi.encodePacked(field, \" length invalid\"))\r\n        );\r\n        require(\r\n            !_isBlank(b),\r\n            string(abi.encodePacked(field, \" cannot be blank\"))\r\n        );\r\n    }\r\n\r\n    function _isBlank(bytes memory b) internal pure returns (bool) {\r\n        for (uint i = 0; i < b.length; i++) {\r\n            if (b[i] != \" \") return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    function _isValidEmail(string memory email) internal pure returns (bool) {\r\n        bytes memory b = bytes(email);\r\n        if (b.length < 5) return false;\r\n\r\n        bool hasAt = false;\r\n        bool hasDotAfterAt = false;\r\n        for (uint i = 0; i < b.length; i++) {\r\n            if (b[i] == \"@\") {\r\n                if (hasAt) return false;\r\n                hasAt = true;\r\n            } else if (hasAt && b[i] == \".\") {\r\n                hasDotAfterAt = true;\r\n            }\r\n        }\r\n        return hasAt && hasDotAfterAt;\r\n    }\r\n}\r\n"
      }
    },
    "settings": {
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "viaIR": true,
      "evmVersion": "paris",
      "outputSelection": {
        "*": {
          "*": [
            "abi",
            "evm.bytecode",
            "evm.deployedBytecode",
            "evm.methodIdentifiers",
            "metadata"
          ],
          "": [
            "ast"
          ]
        }
      }
    }
  },
  "output": {
    "sources": {
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
          "exportedSymbols": {
            "IERC1155Errors": [
              136
            ],
            "IERC20Errors": [
              41
            ],
            "IERC721Errors": [
              89
            ]
          },
          "id": 137,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1,
              "literals": [
                "solidity",
                ">=",
                "0.8",
                ".4"
              ],
              "nodeType": "PragmaDirective",
              "src": "112:24:0"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "IERC20Errors",
              "contractDependencies": [],
              "contractKind": "interface",
              "documentation": {
                "id": 2,
                "nodeType": "StructuredDocumentation",
                "src": "138:141:0",
                "text": " @dev Standard ERC-20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens."
              },
              "fullyImplemented": true,
              "id": 41,
              "linearizedBaseContracts": [
                41
              ],
              "name": "IERC20Errors",
              "nameLocation": "290:12:0",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "documentation": {
                    "id": 3,
                    "nodeType": "StructuredDocumentation",
                    "src": "309:309:0",
                    "text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
                  },
                  "errorSelector": "e450d38c",
                  "id": 11,
                  "name": "ERC20InsufficientBalance",
                  "nameLocation": "629:24:0",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 10,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 5,
                        "mutability": "mutable",
                        "name": "sender",
                        "nameLocation": "662:6:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 11,
                        "src": "654:14:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 4,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "654:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 7,
                        "mutability": "mutable",
                        "name": "balance",
                        "nameLocation": "678:7:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 11,
                        "src": "670:15:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 6,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "670:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 9,
                        "mutability": "mutable",
                        "name": "needed",
                        "nameLocation": "695:6:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 11,
                        "src": "687:14:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 8,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "687:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "653:49:0"
                  },
                  "src": "623:80:0"
                },
                {
                  "documentation": {
                    "id": 12,
                    "nodeType": "StructuredDocumentation",
                    "src": "709:152:0",
                    "text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
                  },
                  "errorSelector": "96c6fd1e",
                  "id": 16,
                  "name": "ERC20InvalidSender",
                  "nameLocation": "872:18:0",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 15,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 14,
                        "mutability": "mutable",
                        "name": "sender",
                        "nameLocation": "899:6:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 16,
                        "src": "891:14:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 13,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "891:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "890:16:0"
                  },
                  "src": "866:41:0"
                },
                {
                  "documentation": {
                    "id": 17,
                    "nodeType": "StructuredDocumentation",
                    "src": "913:159:0",
                    "text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
                  },
                  "errorSelector": "ec442f05",
                  "id": 21,
                  "name": "ERC20InvalidReceiver",
                  "nameLocation": "1083:20:0",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 20,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 19,
                        "mutability": "mutable",
                        "name": "receiver",
                        "nameLocation": "1112:8:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 21,
                        "src": "1104:16:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 18,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1104:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1103:18:0"
                  },
                  "src": "1077:45:0"
                },
                {
                  "documentation": {
                    "id": 22,
                    "nodeType": "StructuredDocumentation",
                    "src": "1128:345:0",
                    "text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
                  },
                  "errorSelector": "fb8f41b2",
                  "id": 30,
                  "name": "ERC20InsufficientAllowance",
                  "nameLocation": "1484:26:0",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 29,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 24,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "1519:7:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 30,
                        "src": "1511:15:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 23,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1511:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 26,
                        "mutability": "mutable",
                        "name": "allowance",
                        "nameLocation": "1536:9:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 30,
                        "src": "1528:17:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 25,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1528:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 28,
                        "mutability": "mutable",
                        "name": "needed",
                        "nameLocation": "1555:6:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 30,
                        "src": "1547:14:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 27,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1547:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1510:52:0"
                  },
                  "src": "1478:85:0"
                },
                {
                  "documentation": {
                    "id": 31,
                    "nodeType": "StructuredDocumentation",
                    "src": "1569:174:0",
                    "text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
                  },
                  "errorSelector": "e602df05",
                  "id": 35,
                  "name": "ERC20InvalidApprover",
                  "nameLocation": "1754:20:0",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 34,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 33,
                        "mutability": "mutable",
                        "name": "approver",
                        "nameLocation": "1783:8:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 35,
                        "src": "1775:16:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 32,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1775:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1774:18:0"
                  },
                  "src": "1748:45:0"
                },
                {
                  "documentation": {
                    "id": 36,
                    "nodeType": "StructuredDocumentation",
                    "src": "1799:195:0",
                    "text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
                  },
                  "errorSelector": "94280d62",
                  "id": 40,
                  "name": "ERC20InvalidSpender",
                  "nameLocation": "2005:19:0",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 39,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 38,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "2033:7:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 40,
                        "src": "2025:15:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 37,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2025:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2024:17:0"
                  },
                  "src": "1999:43:0"
                }
              ],
              "scope": 137,
              "src": "280:1764:0",
              "usedErrors": [
                11,
                16,
                21,
                30,
                35,
                40
              ],
              "usedEvents": []
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "IERC721Errors",
              "contractDependencies": [],
              "contractKind": "interface",
              "documentation": {
                "id": 42,
                "nodeType": "StructuredDocumentation",
                "src": "2046:143:0",
                "text": " @dev Standard ERC-721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens."
              },
              "fullyImplemented": true,
              "id": 89,
              "linearizedBaseContracts": [
                89
              ],
              "name": "IERC721Errors",
              "nameLocation": "2200:13:0",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "documentation": {
                    "id": 43,
                    "nodeType": "StructuredDocumentation",
                    "src": "2220:219:0",
                    "text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
                  },
                  "errorSelector": "89c62b64",
                  "id": 47,
                  "name": "ERC721InvalidOwner",
                  "nameLocation": "2450:18:0",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 46,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 45,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "2477:5:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 47,
                        "src": "2469:13:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 44,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2469:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2468:15:0"
                  },
                  "src": "2444:40:0"
                },
                {
                  "documentation": {
                    "id": 48,
                    "nodeType": "StructuredDocumentation",
                    "src": "2490:132:0",
                    "text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
                  },
                  "errorSelector": "7e273289",
                  "id": 52,
                  "name": "ERC721NonexistentToken",
                  "nameLocation": "2633:22:0",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 51,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 50,
                        "mutability": "mutable",
                        "name": "tokenId",
                        "nameLocation": "2664:7:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 52,
                        "src": "2656:15:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 49,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2656:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2655:17:0"
                  },
                  "src": "2627:46:0"
                },
                {
                  "documentation": {
                    "id": 53,
                    "nodeType": "StructuredDocumentation",
                    "src": "2679:289:0",
                    "text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
                  },
                  "errorSelector": "64283d7b",
                  "id": 61,
                  "name": "ERC721IncorrectOwner",
                  "nameLocation": "2979:20:0",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 60,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 55,
                        "mutability": "mutable",
                        "name": "sender",
                        "nameLocation": "3008:6:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 61,
                        "src": "3000:14:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 54,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3000:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 57,
                        "mutability": "mutable",
                        "name": "tokenId",
                        "nameLocation": "3024:7:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 61,
                        "src": "3016:15:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 56,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3016:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 59,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "3041:5:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 61,
                        "src": "3033:13:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 58,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3033:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2999:48:0"
                  },
                  "src": "2973:75:0"
                },
                {
                  "documentation": {
                    "id": 62,
                    "nodeType": "StructuredDocumentation",
                    "src": "3054:152:0",
                    "text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
                  },
                  "errorSelector": "73c6ac6e",
                  "id": 66,
                  "name": "ERC721InvalidSender",
                  "nameLocation": "3217:19:0",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 65,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 64,
                        "mutability": "mutable",
                        "name": "sender",
                        "nameLocation": "3245:6:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 66,
                        "src": "3237:14:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 63,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3237:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3236:16:0"
                  },
                  "src": "3211:42:0"
                },
                {
                  "documentation": {
                    "id": 67,
                    "nodeType": "StructuredDocumentation",
                    "src": "3259:159:0",
                    "text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
                  },
                  "errorSelector": "64a0ae92",
                  "id": 71,
                  "name": "ERC721InvalidReceiver",
                  "nameLocation": "3429:21:0",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 70,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 69,
                        "mutability": "mutable",
                        "name": "receiver",
                        "nameLocation": "3459:8:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 71,
                        "src": "3451:16:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 68,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3451:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3450:18:0"
                  },
                  "src": "3423:46:0"
                },
                {
                  "documentation": {
                    "id": 72,
                    "nodeType": "StructuredDocumentation",
                    "src": "3475:247:0",
                    "text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
                  },
                  "errorSelector": "177e802f",
                  "id": 78,
                  "name": "ERC721InsufficientApproval",
                  "nameLocation": "3733:26:0",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 77,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 74,
                        "mutability": "mutable",
                        "name": "operator",
                        "nameLocation": "3768:8:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 78,
                        "src": "3760:16:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 73,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3760:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 76,
                        "mutability": "mutable",
                        "name": "tokenId",
                        "nameLocation": "3786:7:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 78,
                        "src": "3778:15:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 75,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3778:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3759:35:0"
                  },
                  "src": "3727:68:0"
                },
                {
                  "documentation": {
                    "id": 79,
                    "nodeType": "StructuredDocumentation",
                    "src": "3801:174:0",
                    "text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
                  },
                  "errorSelector": "a9fbf51f",
                  "id": 83,
                  "name": "ERC721InvalidApprover",
                  "nameLocation": "3986:21:0",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 82,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 81,
                        "mutability": "mutable",
                        "name": "approver",
                        "nameLocation": "4016:8:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 83,
                        "src": "4008:16:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 80,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4008:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4007:18:0"
                  },
                  "src": "3980:46:0"
                },
                {
                  "documentation": {
                    "id": 84,
                    "nodeType": "StructuredDocumentation",
                    "src": "4032:197:0",
                    "text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
                  },
                  "errorSelector": "5b08ba18",
                  "id": 88,
                  "name": "ERC721InvalidOperator",
                  "nameLocation": "4240:21:0",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 87,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 86,
                        "mutability": "mutable",
                        "name": "operator",
                        "nameLocation": "4270:8:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 88,
                        "src": "4262:16:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 85,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4262:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4261:18:0"
                  },
                  "src": "4234:46:0"
                }
              ],
              "scope": 137,
              "src": "2190:2092:0",
              "usedErrors": [
                47,
                52,
                61,
                66,
                71,
                78,
                83,
                88
              ],
              "usedEvents": []
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "IERC1155Errors",
              "contractDependencies": [],
              "contractKind": "interface",
              "documentation": {
                "id": 90,
                "nodeType": "StructuredDocumentation",
                "src": "4284:145:0",
                "text": " @dev Standard ERC-1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens."
              },
              "fullyImplemented": true,
              "id": 136,
              "linearizedBaseContracts": [
                136
              ],
              "name": "IERC1155Errors",
              "nameLocation": "4440:14:0",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "documentation": {
                    "id": 91,
                    "nodeType": "StructuredDocumentation",
                    "src": "4461:361:0",
                    "text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
                  },
                  "errorSelector": "03dee4c5",
                  "id": 101,
                  "name": "ERC1155InsufficientBalance",
                  "nameLocation": "4833:26:0",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 100,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 93,
                        "mutability": "mutable",
                        "name": "sender",
                        "nameLocation": "4868:6:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 101,
                        "src": "4860:14:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 92,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4860:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 95,
                        "mutability": "mutable",
                        "name": "balance",
                        "nameLocation": "4884:7:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 101,
                        "src": "4876:15:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 94,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4876:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 97,
                        "mutability": "mutable",
                        "name": "needed",
                        "nameLocation": "4901:6:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 101,
                        "src": "4893:14:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 96,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4893:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 99,
                        "mutability": "mutable",
                        "name": "tokenId",
                        "nameLocation": "4917:7:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 101,
                        "src": "4909:15:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 98,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4909:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4859:66:0"
                  },
                  "src": "4827:99:0"
                },
                {
                  "documentation": {
                    "id": 102,
                    "nodeType": "StructuredDocumentation",
                    "src": "4932:152:0",
                    "text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
                  },
                  "errorSelector": "01a83514",
                  "id": 106,
                  "name": "ERC1155InvalidSender",
                  "nameLocation": "5095:20:0",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 105,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 104,
                        "mutability": "mutable",
                        "name": "sender",
                        "nameLocation": "5124:6:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 106,
                        "src": "5116:14:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 103,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5116:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5115:16:0"
                  },
                  "src": "5089:43:0"
                },
                {
                  "documentation": {
                    "id": 107,
                    "nodeType": "StructuredDocumentation",
                    "src": "5138:159:0",
                    "text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
                  },
                  "errorSelector": "57f447ce",
                  "id": 111,
                  "name": "ERC1155InvalidReceiver",
                  "nameLocation": "5308:22:0",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 110,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 109,
                        "mutability": "mutable",
                        "name": "receiver",
                        "nameLocation": "5339:8:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 111,
                        "src": "5331:16:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 108,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5331:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5330:18:0"
                  },
                  "src": "5302:47:0"
                },
                {
                  "documentation": {
                    "id": 112,
                    "nodeType": "StructuredDocumentation",
                    "src": "5355:256:0",
                    "text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
                  },
                  "errorSelector": "e237d922",
                  "id": 118,
                  "name": "ERC1155MissingApprovalForAll",
                  "nameLocation": "5622:28:0",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 117,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 114,
                        "mutability": "mutable",
                        "name": "operator",
                        "nameLocation": "5659:8:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 118,
                        "src": "5651:16:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 113,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5651:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 116,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "5677:5:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 118,
                        "src": "5669:13:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 115,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5669:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5650:33:0"
                  },
                  "src": "5616:68:0"
                },
                {
                  "documentation": {
                    "id": 119,
                    "nodeType": "StructuredDocumentation",
                    "src": "5690:174:0",
                    "text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
                  },
                  "errorSelector": "3e31884e",
                  "id": 123,
                  "name": "ERC1155InvalidApprover",
                  "nameLocation": "5875:22:0",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 122,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 121,
                        "mutability": "mutable",
                        "name": "approver",
                        "nameLocation": "5906:8:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 123,
                        "src": "5898:16:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 120,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5898:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5897:18:0"
                  },
                  "src": "5869:47:0"
                },
                {
                  "documentation": {
                    "id": 124,
                    "nodeType": "StructuredDocumentation",
                    "src": "5922:197:0",
                    "text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
                  },
                  "errorSelector": "ced3e100",
                  "id": 128,
                  "name": "ERC1155InvalidOperator",
                  "nameLocation": "6130:22:0",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 127,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 126,
                        "mutability": "mutable",
                        "name": "operator",
                        "nameLocation": "6161:8:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 128,
                        "src": "6153:16:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 125,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "6153:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6152:18:0"
                  },
                  "src": "6124:47:0"
                },
                {
                  "documentation": {
                    "id": 129,
                    "nodeType": "StructuredDocumentation",
                    "src": "6177:280:0",
                    "text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
                  },
                  "errorSelector": "5b059991",
                  "id": 135,
                  "name": "ERC1155InvalidArrayLength",
                  "nameLocation": "6468:25:0",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 134,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 131,
                        "mutability": "mutable",
                        "name": "idsLength",
                        "nameLocation": "6502:9:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 135,
                        "src": "6494:17:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 130,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "6494:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 133,
                        "mutability": "mutable",
                        "name": "valuesLength",
                        "nameLocation": "6521:12:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 135,
                        "src": "6513:20:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 132,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "6513:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6493:41:0"
                  },
                  "src": "6462:73:0"
                }
              ],
              "scope": 137,
              "src": "4430:2107:0",
              "usedErrors": [
                101,
                106,
                111,
                118,
                123,
                128,
                135
              ],
              "usedEvents": []
            }
          ],
          "src": "112:6426:0"
        },
        "id": 0
      },
      "@openzeppelin/contracts/token/ERC20/ERC20.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
          "exportedSymbols": {
            "Context": [
              785
            ],
            "ERC20": [
              651
            ],
            "IERC20": [
              729
            ],
            "IERC20Errors": [
              41
            ],
            "IERC20Metadata": [
              755
            ]
          },
          "id": 652,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 138,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".20"
              ],
              "nodeType": "PragmaDirective",
              "src": "105:24:1"
            },
            {
              "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
              "file": "./IERC20.sol",
              "id": 140,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 652,
              "sourceUnit": 730,
              "src": "131:36:1",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 139,
                    "name": "IERC20",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 729,
                    "src": "139:6:1",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
              "file": "./extensions/IERC20Metadata.sol",
              "id": 142,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 652,
              "sourceUnit": 756,
              "src": "168:63:1",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 141,
                    "name": "IERC20Metadata",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 755,
                    "src": "176:14:1",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts/utils/Context.sol",
              "file": "../../utils/Context.sol",
              "id": 144,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 652,
              "sourceUnit": 786,
              "src": "232:48:1",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 143,
                    "name": "Context",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 785,
                    "src": "240:7:1",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
              "file": "../../interfaces/draft-IERC6093.sol",
              "id": 146,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 652,
              "sourceUnit": 137,
              "src": "281:65:1",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 145,
                    "name": "IERC20Errors",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 41,
                    "src": "289:12:1",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "abstract": true,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 148,
                    "name": "Context",
                    "nameLocations": [
                      "1133:7:1"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 785,
                    "src": "1133:7:1"
                  },
                  "id": 149,
                  "nodeType": "InheritanceSpecifier",
                  "src": "1133:7:1"
                },
                {
                  "baseName": {
                    "id": 150,
                    "name": "IERC20",
                    "nameLocations": [
                      "1142:6:1"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 729,
                    "src": "1142:6:1"
                  },
                  "id": 151,
                  "nodeType": "InheritanceSpecifier",
                  "src": "1142:6:1"
                },
                {
                  "baseName": {
                    "id": 152,
                    "name": "IERC20Metadata",
                    "nameLocations": [
                      "1150:14:1"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 755,
                    "src": "1150:14:1"
                  },
                  "id": 153,
                  "nodeType": "InheritanceSpecifier",
                  "src": "1150:14:1"
                },
                {
                  "baseName": {
                    "id": 154,
                    "name": "IERC20Errors",
                    "nameLocations": [
                      "1166:12:1"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 41,
                    "src": "1166:12:1"
                  },
                  "id": 155,
                  "nodeType": "InheritanceSpecifier",
                  "src": "1166:12:1"
                }
              ],
              "canonicalName": "ERC20",
              "contractDependencies": [],
              "contractKind": "contract",
              "documentation": {
                "id": 147,
                "nodeType": "StructuredDocumentation",
                "src": "348:757:1",
                "text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC-20\n applications."
              },
              "fullyImplemented": true,
              "id": 651,
              "linearizedBaseContracts": [
                651,
                41,
                755,
                729,
                785
              ],
              "name": "ERC20",
              "nameLocation": "1124:5:1",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "constant": false,
                  "id": 159,
                  "mutability": "mutable",
                  "name": "_balances",
                  "nameLocation": "1229:9:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 651,
                  "src": "1185:53:1",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                    "typeString": "mapping(address => uint256)"
                  },
                  "typeName": {
                    "id": 158,
                    "keyName": "account",
                    "keyNameLocation": "1201:7:1",
                    "keyType": {
                      "id": 156,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "1193:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "1185:35:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                      "typeString": "mapping(address => uint256)"
                    },
                    "valueName": "",
                    "valueNameLocation": "-1:-1:-1",
                    "valueType": {
                      "id": 157,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "1212:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    }
                  },
                  "visibility": "private"
                },
                {
                  "constant": false,
                  "id": 165,
                  "mutability": "mutable",
                  "name": "_allowances",
                  "nameLocation": "1317:11:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 651,
                  "src": "1245:83:1",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                    "typeString": "mapping(address => mapping(address => uint256))"
                  },
                  "typeName": {
                    "id": 164,
                    "keyName": "account",
                    "keyNameLocation": "1261:7:1",
                    "keyType": {
                      "id": 160,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "1253:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "1245:63:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                      "typeString": "mapping(address => mapping(address => uint256))"
                    },
                    "valueName": "",
                    "valueNameLocation": "-1:-1:-1",
                    "valueType": {
                      "id": 163,
                      "keyName": "spender",
                      "keyNameLocation": "1288:7:1",
                      "keyType": {
                        "id": 161,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1280:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "Mapping",
                      "src": "1272:35:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      },
                      "valueName": "",
                      "valueNameLocation": "-1:-1:-1",
                      "valueType": {
                        "id": 162,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1299:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    }
                  },
                  "visibility": "private"
                },
                {
                  "constant": false,
                  "id": 167,
                  "mutability": "mutable",
                  "name": "_totalSupply",
                  "nameLocation": "1351:12:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 651,
                  "src": "1335:28:1",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 166,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1335:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "private"
                },
                {
                  "constant": false,
                  "id": 169,
                  "mutability": "mutable",
                  "name": "_name",
                  "nameLocation": "1385:5:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 651,
                  "src": "1370:20:1",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 168,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1370:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "private"
                },
                {
                  "constant": false,
                  "id": 171,
                  "mutability": "mutable",
                  "name": "_symbol",
                  "nameLocation": "1411:7:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 651,
                  "src": "1396:22:1",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 170,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1396:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "private"
                },
                {
                  "body": {
                    "id": 187,
                    "nodeType": "Block",
                    "src": "1638:57:1",
                    "statements": [
                      {
                        "expression": {
                          "id": 181,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 179,
                            "name": "_name",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 169,
                            "src": "1648:5:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_storage",
                              "typeString": "string storage ref"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 180,
                            "name": "name_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 174,
                            "src": "1656:5:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          "src": "1648:13:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage",
                            "typeString": "string storage ref"
                          }
                        },
                        "id": 182,
                        "nodeType": "ExpressionStatement",
                        "src": "1648:13:1"
                      },
                      {
                        "expression": {
                          "id": 185,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 183,
                            "name": "_symbol",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 171,
                            "src": "1671:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_storage",
                              "typeString": "string storage ref"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 184,
                            "name": "symbol_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 176,
                            "src": "1681:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          "src": "1671:17:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage",
                            "typeString": "string storage ref"
                          }
                        },
                        "id": 186,
                        "nodeType": "ExpressionStatement",
                        "src": "1671:17:1"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 172,
                    "nodeType": "StructuredDocumentation",
                    "src": "1425:152:1",
                    "text": " @dev Sets the values for {name} and {symbol}.\n Both values are immutable: they can only be set once during construction."
                  },
                  "id": 188,
                  "implemented": true,
                  "kind": "constructor",
                  "modifiers": [],
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 177,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 174,
                        "mutability": "mutable",
                        "name": "name_",
                        "nameLocation": "1608:5:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 188,
                        "src": "1594:19:1",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 173,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "1594:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 176,
                        "mutability": "mutable",
                        "name": "symbol_",
                        "nameLocation": "1629:7:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 188,
                        "src": "1615:21:1",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 175,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "1615:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1593:44:1"
                  },
                  "returnParameters": {
                    "id": 178,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1638:0:1"
                  },
                  "scope": 651,
                  "src": "1582:113:1",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "baseFunctions": [
                    742
                  ],
                  "body": {
                    "id": 196,
                    "nodeType": "Block",
                    "src": "1820:29:1",
                    "statements": [
                      {
                        "expression": {
                          "id": 194,
                          "name": "_name",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 169,
                          "src": "1837:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage",
                            "typeString": "string storage ref"
                          }
                        },
                        "functionReturnParameters": 193,
                        "id": 195,
                        "nodeType": "Return",
                        "src": "1830:12:1"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 189,
                    "nodeType": "StructuredDocumentation",
                    "src": "1701:54:1",
                    "text": " @dev Returns the name of the token."
                  },
                  "functionSelector": "06fdde03",
                  "id": 197,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "name",
                  "nameLocation": "1769:4:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 190,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1773:2:1"
                  },
                  "returnParameters": {
                    "id": 193,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 192,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 197,
                        "src": "1805:13:1",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 191,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "1805:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1804:15:1"
                  },
                  "scope": 651,
                  "src": "1760:89:1",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    748
                  ],
                  "body": {
                    "id": 205,
                    "nodeType": "Block",
                    "src": "2024:31:1",
                    "statements": [
                      {
                        "expression": {
                          "id": 203,
                          "name": "_symbol",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 171,
                          "src": "2041:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage",
                            "typeString": "string storage ref"
                          }
                        },
                        "functionReturnParameters": 202,
                        "id": 204,
                        "nodeType": "Return",
                        "src": "2034:14:1"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 198,
                    "nodeType": "StructuredDocumentation",
                    "src": "1855:102:1",
                    "text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
                  },
                  "functionSelector": "95d89b41",
                  "id": 206,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "symbol",
                  "nameLocation": "1971:6:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 199,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1977:2:1"
                  },
                  "returnParameters": {
                    "id": 202,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 201,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 206,
                        "src": "2009:13:1",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 200,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "2009:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2008:15:1"
                  },
                  "scope": 651,
                  "src": "1962:93:1",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    754
                  ],
                  "body": {
                    "id": 214,
                    "nodeType": "Block",
                    "src": "2744:26:1",
                    "statements": [
                      {
                        "expression": {
                          "hexValue": "3138",
                          "id": 212,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2761:2:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_18_by_1",
                            "typeString": "int_const 18"
                          },
                          "value": "18"
                        },
                        "functionReturnParameters": 211,
                        "id": 213,
                        "nodeType": "Return",
                        "src": "2754:9:1"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 207,
                    "nodeType": "StructuredDocumentation",
                    "src": "2061:622:1",
                    "text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
                  },
                  "functionSelector": "313ce567",
                  "id": 215,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "decimals",
                  "nameLocation": "2697:8:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 208,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2705:2:1"
                  },
                  "returnParameters": {
                    "id": 211,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 210,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 215,
                        "src": "2737:5:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "typeName": {
                          "id": 209,
                          "name": "uint8",
                          "nodeType": "ElementaryTypeName",
                          "src": "2737:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2736:7:1"
                  },
                  "scope": 651,
                  "src": "2688:82:1",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    678
                  ],
                  "body": {
                    "id": 223,
                    "nodeType": "Block",
                    "src": "2864:36:1",
                    "statements": [
                      {
                        "expression": {
                          "id": 221,
                          "name": "_totalSupply",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 167,
                          "src": "2881:12:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 220,
                        "id": 222,
                        "nodeType": "Return",
                        "src": "2874:19:1"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 216,
                    "nodeType": "StructuredDocumentation",
                    "src": "2776:22:1",
                    "text": "@inheritdoc IERC20"
                  },
                  "functionSelector": "18160ddd",
                  "id": 224,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "totalSupply",
                  "nameLocation": "2812:11:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 217,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2823:2:1"
                  },
                  "returnParameters": {
                    "id": 220,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 219,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 224,
                        "src": "2855:7:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 218,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2855:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2854:9:1"
                  },
                  "scope": 651,
                  "src": "2803:97:1",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    686
                  ],
                  "body": {
                    "id": 236,
                    "nodeType": "Block",
                    "src": "3007:42:1",
                    "statements": [
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 232,
                            "name": "_balances",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 159,
                            "src": "3024:9:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 234,
                          "indexExpression": {
                            "id": 233,
                            "name": "account",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 227,
                            "src": "3034:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3024:18:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 231,
                        "id": 235,
                        "nodeType": "Return",
                        "src": "3017:25:1"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 225,
                    "nodeType": "StructuredDocumentation",
                    "src": "2906:22:1",
                    "text": "@inheritdoc IERC20"
                  },
                  "functionSelector": "70a08231",
                  "id": 237,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "balanceOf",
                  "nameLocation": "2942:9:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 228,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 227,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "2960:7:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 237,
                        "src": "2952:15:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 226,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2952:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2951:17:1"
                  },
                  "returnParameters": {
                    "id": 231,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 230,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 237,
                        "src": "2998:7:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 229,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2998:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2997:9:1"
                  },
                  "scope": 651,
                  "src": "2933:116:1",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    696
                  ],
                  "body": {
                    "id": 260,
                    "nodeType": "Block",
                    "src": "3319:103:1",
                    "statements": [
                      {
                        "assignments": [
                          248
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 248,
                            "mutability": "mutable",
                            "name": "owner",
                            "nameLocation": "3337:5:1",
                            "nodeType": "VariableDeclaration",
                            "scope": 260,
                            "src": "3329:13:1",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 247,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "3329:7:1",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 251,
                        "initialValue": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 249,
                            "name": "_msgSender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 767,
                            "src": "3345:10:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                              "typeString": "function () view returns (address)"
                            }
                          },
                          "id": 250,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3345:12:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "3329:28:1"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 253,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 248,
                              "src": "3377:5:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 254,
                              "name": "to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 240,
                              "src": "3384:2:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 255,
                              "name": "value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 242,
                              "src": "3388:5:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 252,
                            "name": "_transfer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 381,
                            "src": "3367:9:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 256,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3367:27:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 257,
                        "nodeType": "ExpressionStatement",
                        "src": "3367:27:1"
                      },
                      {
                        "expression": {
                          "hexValue": "74727565",
                          "id": 258,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3411:4:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "functionReturnParameters": 246,
                        "id": 259,
                        "nodeType": "Return",
                        "src": "3404:11:1"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 238,
                    "nodeType": "StructuredDocumentation",
                    "src": "3055:184:1",
                    "text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."
                  },
                  "functionSelector": "a9059cbb",
                  "id": 261,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "transfer",
                  "nameLocation": "3253:8:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 243,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 240,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "3270:2:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 261,
                        "src": "3262:10:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 239,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3262:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 242,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "3282:5:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 261,
                        "src": "3274:13:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 241,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3274:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3261:27:1"
                  },
                  "returnParameters": {
                    "id": 246,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 245,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 261,
                        "src": "3313:4:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 244,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "3313:4:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3312:6:1"
                  },
                  "scope": 651,
                  "src": "3244:178:1",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    706
                  ],
                  "body": {
                    "id": 277,
                    "nodeType": "Block",
                    "src": "3544:51:1",
                    "statements": [
                      {
                        "expression": {
                          "baseExpression": {
                            "baseExpression": {
                              "id": 271,
                              "name": "_allowances",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 165,
                              "src": "3561:11:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                                "typeString": "mapping(address => mapping(address => uint256))"
                              }
                            },
                            "id": 273,
                            "indexExpression": {
                              "id": 272,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 264,
                              "src": "3573:5:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "3561:18:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 275,
                          "indexExpression": {
                            "id": 274,
                            "name": "spender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 266,
                            "src": "3580:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3561:27:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 270,
                        "id": 276,
                        "nodeType": "Return",
                        "src": "3554:34:1"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 262,
                    "nodeType": "StructuredDocumentation",
                    "src": "3428:22:1",
                    "text": "@inheritdoc IERC20"
                  },
                  "functionSelector": "dd62ed3e",
                  "id": 278,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "allowance",
                  "nameLocation": "3464:9:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 267,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 264,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "3482:5:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 278,
                        "src": "3474:13:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 263,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3474:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 266,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "3497:7:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 278,
                        "src": "3489:15:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 265,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3489:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3473:32:1"
                  },
                  "returnParameters": {
                    "id": 270,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 269,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 278,
                        "src": "3535:7:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 268,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3535:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3534:9:1"
                  },
                  "scope": 651,
                  "src": "3455:140:1",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    716
                  ],
                  "body": {
                    "id": 301,
                    "nodeType": "Block",
                    "src": "3981:107:1",
                    "statements": [
                      {
                        "assignments": [
                          289
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 289,
                            "mutability": "mutable",
                            "name": "owner",
                            "nameLocation": "3999:5:1",
                            "nodeType": "VariableDeclaration",
                            "scope": 301,
                            "src": "3991:13:1",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 288,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "3991:7:1",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 292,
                        "initialValue": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 290,
                            "name": "_msgSender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 767,
                            "src": "4007:10:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                              "typeString": "function () view returns (address)"
                            }
                          },
                          "id": 291,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4007:12:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "3991:28:1"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 294,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 289,
                              "src": "4038:5:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 295,
                              "name": "spender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 281,
                              "src": "4045:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 296,
                              "name": "value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 283,
                              "src": "4054:5:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 293,
                            "name": "_approve",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              542,
                              602
                            ],
                            "referencedDeclaration": 542,
                            "src": "4029:8:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 297,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4029:31:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 298,
                        "nodeType": "ExpressionStatement",
                        "src": "4029:31:1"
                      },
                      {
                        "expression": {
                          "hexValue": "74727565",
                          "id": 299,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4077:4:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "functionReturnParameters": 287,
                        "id": 300,
                        "nodeType": "Return",
                        "src": "4070:11:1"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 279,
                    "nodeType": "StructuredDocumentation",
                    "src": "3601:296:1",
                    "text": " @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
                  },
                  "functionSelector": "095ea7b3",
                  "id": 302,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "approve",
                  "nameLocation": "3911:7:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 284,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 281,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "3927:7:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 302,
                        "src": "3919:15:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 280,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3919:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 283,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "3944:5:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 302,
                        "src": "3936:13:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 282,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3936:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3918:32:1"
                  },
                  "returnParameters": {
                    "id": 287,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 286,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 302,
                        "src": "3975:4:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 285,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "3975:4:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3974:6:1"
                  },
                  "scope": 651,
                  "src": "3902:186:1",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    728
                  ],
                  "body": {
                    "id": 333,
                    "nodeType": "Block",
                    "src": "4773:151:1",
                    "statements": [
                      {
                        "assignments": [
                          315
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 315,
                            "mutability": "mutable",
                            "name": "spender",
                            "nameLocation": "4791:7:1",
                            "nodeType": "VariableDeclaration",
                            "scope": 333,
                            "src": "4783:15:1",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 314,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "4783:7:1",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 318,
                        "initialValue": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 316,
                            "name": "_msgSender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 767,
                            "src": "4801:10:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                              "typeString": "function () view returns (address)"
                            }
                          },
                          "id": 317,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4801:12:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "4783:30:1"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 320,
                              "name": "from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 305,
                              "src": "4839:4:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 321,
                              "name": "spender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 315,
                              "src": "4845:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 322,
                              "name": "value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 309,
                              "src": "4854:5:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 319,
                            "name": "_spendAllowance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 650,
                            "src": "4823:15:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 323,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4823:37:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 324,
                        "nodeType": "ExpressionStatement",
                        "src": "4823:37:1"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 326,
                              "name": "from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 305,
                              "src": "4880:4:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 327,
                              "name": "to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 307,
                              "src": "4886:2:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 328,
                              "name": "value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 309,
                              "src": "4890:5:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 325,
                            "name": "_transfer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 381,
                            "src": "4870:9:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 329,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4870:26:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 330,
                        "nodeType": "ExpressionStatement",
                        "src": "4870:26:1"
                      },
                      {
                        "expression": {
                          "hexValue": "74727565",
                          "id": 331,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4913:4:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "functionReturnParameters": 313,
                        "id": 332,
                        "nodeType": "Return",
                        "src": "4906:11:1"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 303,
                    "nodeType": "StructuredDocumentation",
                    "src": "4094:581:1",
                    "text": " @dev See {IERC20-transferFrom}.\n Skips emitting an {Approval} event indicating an allowance update. This is not\n required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."
                  },
                  "functionSelector": "23b872dd",
                  "id": 334,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "transferFrom",
                  "nameLocation": "4689:12:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 310,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 305,
                        "mutability": "mutable",
                        "name": "from",
                        "nameLocation": "4710:4:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 334,
                        "src": "4702:12:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 304,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4702:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 307,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "4724:2:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 334,
                        "src": "4716:10:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 306,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4716:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 309,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "4736:5:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 334,
                        "src": "4728:13:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 308,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4728:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4701:41:1"
                  },
                  "returnParameters": {
                    "id": 313,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 312,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 334,
                        "src": "4767:4:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 311,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "4767:4:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4766:6:1"
                  },
                  "scope": 651,
                  "src": "4680:244:1",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 380,
                    "nodeType": "Block",
                    "src": "5366:231:1",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 349,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 344,
                            "name": "from",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 337,
                            "src": "5380:4:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 347,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "5396:1:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 346,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "5388:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 345,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "5388:7:1",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 348,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5388:10:1",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "5380:18:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 358,
                        "nodeType": "IfStatement",
                        "src": "5376:86:1",
                        "trueBody": {
                          "id": 357,
                          "nodeType": "Block",
                          "src": "5400:62:1",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "hexValue": "30",
                                        "id": 353,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "5448:1:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        }
                                      ],
                                      "id": 352,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "5440:7:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 351,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "5440:7:1",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 354,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "5440:10:1",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 350,
                                  "name": "ERC20InvalidSender",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 16,
                                  "src": "5421:18:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
                                    "typeString": "function (address) pure returns (error)"
                                  }
                                },
                                "id": 355,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5421:30:1",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_error",
                                  "typeString": "error"
                                }
                              },
                              "id": 356,
                              "nodeType": "RevertStatement",
                              "src": "5414:37:1"
                            }
                          ]
                        }
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 364,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 359,
                            "name": "to",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 339,
                            "src": "5475:2:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 362,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "5489:1:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 361,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "5481:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 360,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "5481:7:1",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 363,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5481:10:1",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "5475:16:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 373,
                        "nodeType": "IfStatement",
                        "src": "5471:86:1",
                        "trueBody": {
                          "id": 372,
                          "nodeType": "Block",
                          "src": "5493:64:1",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "hexValue": "30",
                                        "id": 368,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "5543:1:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        }
                                      ],
                                      "id": 367,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "5535:7:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 366,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "5535:7:1",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 369,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "5535:10:1",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 365,
                                  "name": "ERC20InvalidReceiver",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 21,
                                  "src": "5514:20:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
                                    "typeString": "function (address) pure returns (error)"
                                  }
                                },
                                "id": 370,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5514:32:1",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_error",
                                  "typeString": "error"
                                }
                              },
                              "id": 371,
                              "nodeType": "RevertStatement",
                              "src": "5507:39:1"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 375,
                              "name": "from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 337,
                              "src": "5574:4:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 376,
                              "name": "to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 339,
                              "src": "5580:2:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 377,
                              "name": "value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 341,
                              "src": "5584:5:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 374,
                            "name": "_update",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 458,
                            "src": "5566:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 378,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5566:24:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 379,
                        "nodeType": "ExpressionStatement",
                        "src": "5566:24:1"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 335,
                    "nodeType": "StructuredDocumentation",
                    "src": "4930:362:1",
                    "text": " @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."
                  },
                  "id": 381,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_transfer",
                  "nameLocation": "5306:9:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 342,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 337,
                        "mutability": "mutable",
                        "name": "from",
                        "nameLocation": "5324:4:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 381,
                        "src": "5316:12:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 336,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5316:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 339,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "5338:2:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 381,
                        "src": "5330:10:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 338,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5330:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 341,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "5350:5:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 381,
                        "src": "5342:13:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 340,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "5342:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5315:41:1"
                  },
                  "returnParameters": {
                    "id": 343,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "5366:0:1"
                  },
                  "scope": 651,
                  "src": "5297:300:1",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 457,
                    "nodeType": "Block",
                    "src": "5987:1032:1",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 396,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 391,
                            "name": "from",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 384,
                            "src": "6001:4:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 394,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "6017:1:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 393,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "6009:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 392,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "6009:7:1",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 395,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6009:10:1",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "6001:18:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 428,
                          "nodeType": "Block",
                          "src": "6175:362:1",
                          "statements": [
                            {
                              "assignments": [
                                403
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 403,
                                  "mutability": "mutable",
                                  "name": "fromBalance",
                                  "nameLocation": "6197:11:1",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 428,
                                  "src": "6189:19:1",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "typeName": {
                                    "id": 402,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "6189:7:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 407,
                              "initialValue": {
                                "baseExpression": {
                                  "id": 404,
                                  "name": "_balances",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 159,
                                  "src": "6211:9:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                    "typeString": "mapping(address => uint256)"
                                  }
                                },
                                "id": 406,
                                "indexExpression": {
                                  "id": 405,
                                  "name": "from",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 384,
                                  "src": "6221:4:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "6211:15:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "6189:37:1"
                            },
                            {
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 410,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 408,
                                  "name": "fromBalance",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 403,
                                  "src": "6244:11:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "<",
                                "rightExpression": {
                                  "id": 409,
                                  "name": "value",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 388,
                                  "src": "6258:5:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "6244:19:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 418,
                              "nodeType": "IfStatement",
                              "src": "6240:115:1",
                              "trueBody": {
                                "id": 417,
                                "nodeType": "Block",
                                "src": "6265:90:1",
                                "statements": [
                                  {
                                    "errorCall": {
                                      "arguments": [
                                        {
                                          "id": 412,
                                          "name": "from",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 384,
                                          "src": "6315:4:1",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        },
                                        {
                                          "id": 413,
                                          "name": "fromBalance",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 403,
                                          "src": "6321:11:1",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        {
                                          "id": 414,
                                          "name": "value",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 388,
                                          "src": "6334:5:1",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          },
                                          {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          },
                                          {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        ],
                                        "id": 411,
                                        "name": "ERC20InsufficientBalance",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 11,
                                        "src": "6290:24:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
                                          "typeString": "function (address,uint256,uint256) pure returns (error)"
                                        }
                                      },
                                      "id": 415,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "nameLocations": [],
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "6290:50:1",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_error",
                                        "typeString": "error"
                                      }
                                    },
                                    "id": 416,
                                    "nodeType": "RevertStatement",
                                    "src": "6283:57:1"
                                  }
                                ]
                              }
                            },
                            {
                              "id": 427,
                              "nodeType": "UncheckedBlock",
                              "src": "6368:159:1",
                              "statements": [
                                {
                                  "expression": {
                                    "id": 425,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftHandSide": {
                                      "baseExpression": {
                                        "id": 419,
                                        "name": "_balances",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 159,
                                        "src": "6475:9:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                          "typeString": "mapping(address => uint256)"
                                        }
                                      },
                                      "id": 421,
                                      "indexExpression": {
                                        "id": 420,
                                        "name": "from",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 384,
                                        "src": "6485:4:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": true,
                                      "nodeType": "IndexAccess",
                                      "src": "6475:15:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "Assignment",
                                    "operator": "=",
                                    "rightHandSide": {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 424,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "id": 422,
                                        "name": "fromBalance",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 403,
                                        "src": "6493:11:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "-",
                                      "rightExpression": {
                                        "id": 423,
                                        "name": "value",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 388,
                                        "src": "6507:5:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "6493:19:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "6475:37:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 426,
                                  "nodeType": "ExpressionStatement",
                                  "src": "6475:37:1"
                                }
                              ]
                            }
                          ]
                        },
                        "id": 429,
                        "nodeType": "IfStatement",
                        "src": "5997:540:1",
                        "trueBody": {
                          "id": 401,
                          "nodeType": "Block",
                          "src": "6021:148:1",
                          "statements": [
                            {
                              "expression": {
                                "id": 399,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 397,
                                  "name": "_totalSupply",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 167,
                                  "src": "6137:12:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "+=",
                                "rightHandSide": {
                                  "id": 398,
                                  "name": "value",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 388,
                                  "src": "6153:5:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "6137:21:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 400,
                              "nodeType": "ExpressionStatement",
                              "src": "6137:21:1"
                            }
                          ]
                        }
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 435,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 430,
                            "name": "to",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 386,
                            "src": "6551:2:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 433,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "6565:1:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 432,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "6557:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 431,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "6557:7:1",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 434,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6557:10:1",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "6551:16:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 449,
                          "nodeType": "Block",
                          "src": "6766:206:1",
                          "statements": [
                            {
                              "id": 448,
                              "nodeType": "UncheckedBlock",
                              "src": "6780:182:1",
                              "statements": [
                                {
                                  "expression": {
                                    "id": 446,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftHandSide": {
                                      "baseExpression": {
                                        "id": 442,
                                        "name": "_balances",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 159,
                                        "src": "6925:9:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                          "typeString": "mapping(address => uint256)"
                                        }
                                      },
                                      "id": 444,
                                      "indexExpression": {
                                        "id": 443,
                                        "name": "to",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 386,
                                        "src": "6935:2:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": true,
                                      "nodeType": "IndexAccess",
                                      "src": "6925:13:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "Assignment",
                                    "operator": "+=",
                                    "rightHandSide": {
                                      "id": 445,
                                      "name": "value",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 388,
                                      "src": "6942:5:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "6925:22:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 447,
                                  "nodeType": "ExpressionStatement",
                                  "src": "6925:22:1"
                                }
                              ]
                            }
                          ]
                        },
                        "id": 450,
                        "nodeType": "IfStatement",
                        "src": "6547:425:1",
                        "trueBody": {
                          "id": 441,
                          "nodeType": "Block",
                          "src": "6569:191:1",
                          "statements": [
                            {
                              "id": 440,
                              "nodeType": "UncheckedBlock",
                              "src": "6583:167:1",
                              "statements": [
                                {
                                  "expression": {
                                    "id": 438,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftHandSide": {
                                      "id": 436,
                                      "name": "_totalSupply",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 167,
                                      "src": "6714:12:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "Assignment",
                                    "operator": "-=",
                                    "rightHandSide": {
                                      "id": 437,
                                      "name": "value",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 388,
                                      "src": "6730:5:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "6714:21:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 439,
                                  "nodeType": "ExpressionStatement",
                                  "src": "6714:21:1"
                                }
                              ]
                            }
                          ]
                        }
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 452,
                              "name": "from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 384,
                              "src": "6996:4:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 453,
                              "name": "to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 386,
                              "src": "7002:2:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 454,
                              "name": "value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 388,
                              "src": "7006:5:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 451,
                            "name": "Transfer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 663,
                            "src": "6987:8:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 455,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6987:25:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 456,
                        "nodeType": "EmitStatement",
                        "src": "6982:30:1"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 382,
                    "nodeType": "StructuredDocumentation",
                    "src": "5603:304:1",
                    "text": " @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."
                  },
                  "id": 458,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_update",
                  "nameLocation": "5921:7:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 389,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 384,
                        "mutability": "mutable",
                        "name": "from",
                        "nameLocation": "5937:4:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 458,
                        "src": "5929:12:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 383,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5929:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 386,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "5951:2:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 458,
                        "src": "5943:10:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 385,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5943:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 388,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "5963:5:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 458,
                        "src": "5955:13:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 387,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "5955:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5928:41:1"
                  },
                  "returnParameters": {
                    "id": 390,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "5987:0:1"
                  },
                  "scope": 651,
                  "src": "5912:1107:1",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 490,
                    "nodeType": "Block",
                    "src": "7418:152:1",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 471,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 466,
                            "name": "account",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 461,
                            "src": "7432:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 469,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "7451:1:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 468,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "7443:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 467,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "7443:7:1",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 470,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7443:10:1",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "7432:21:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 480,
                        "nodeType": "IfStatement",
                        "src": "7428:91:1",
                        "trueBody": {
                          "id": 479,
                          "nodeType": "Block",
                          "src": "7455:64:1",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "hexValue": "30",
                                        "id": 475,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "7505:1:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        }
                                      ],
                                      "id": 474,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "7497:7:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 473,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "7497:7:1",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 476,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "7497:10:1",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 472,
                                  "name": "ERC20InvalidReceiver",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 21,
                                  "src": "7476:20:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
                                    "typeString": "function (address) pure returns (error)"
                                  }
                                },
                                "id": 477,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "7476:32:1",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_error",
                                  "typeString": "error"
                                }
                              },
                              "id": 478,
                              "nodeType": "RevertStatement",
                              "src": "7469:39:1"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "hexValue": "30",
                                  "id": 484,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "7544:1:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 483,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "7536:7:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 482,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "7536:7:1",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 485,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "7536:10:1",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 486,
                              "name": "account",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 461,
                              "src": "7548:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 487,
                              "name": "value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 463,
                              "src": "7557:5:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 481,
                            "name": "_update",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 458,
                            "src": "7528:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 488,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7528:35:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 489,
                        "nodeType": "ExpressionStatement",
                        "src": "7528:35:1"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 459,
                    "nodeType": "StructuredDocumentation",
                    "src": "7025:332:1",
                    "text": " @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."
                  },
                  "id": 491,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_mint",
                  "nameLocation": "7371:5:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 464,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 461,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "7385:7:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 491,
                        "src": "7377:15:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 460,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "7377:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 463,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "7402:5:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 491,
                        "src": "7394:13:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 462,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "7394:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "7376:32:1"
                  },
                  "returnParameters": {
                    "id": 465,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "7418:0:1"
                  },
                  "scope": 651,
                  "src": "7362:208:1",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 523,
                    "nodeType": "Block",
                    "src": "7944:150:1",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 504,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 499,
                            "name": "account",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 494,
                            "src": "7958:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 502,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "7977:1:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 501,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "7969:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 500,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "7969:7:1",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 503,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7969:10:1",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "7958:21:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 513,
                        "nodeType": "IfStatement",
                        "src": "7954:89:1",
                        "trueBody": {
                          "id": 512,
                          "nodeType": "Block",
                          "src": "7981:62:1",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "hexValue": "30",
                                        "id": 508,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "8029:1:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        }
                                      ],
                                      "id": 507,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "8021:7:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 506,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "8021:7:1",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 509,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "8021:10:1",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 505,
                                  "name": "ERC20InvalidSender",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 16,
                                  "src": "8002:18:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
                                    "typeString": "function (address) pure returns (error)"
                                  }
                                },
                                "id": 510,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "8002:30:1",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_error",
                                  "typeString": "error"
                                }
                              },
                              "id": 511,
                              "nodeType": "RevertStatement",
                              "src": "7995:37:1"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 515,
                              "name": "account",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 494,
                              "src": "8060:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "hexValue": "30",
                                  "id": 518,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "8077:1:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 517,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "8069:7:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 516,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "8069:7:1",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 519,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "8069:10:1",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 520,
                              "name": "value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 496,
                              "src": "8081:5:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 514,
                            "name": "_update",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 458,
                            "src": "8052:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 521,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8052:35:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 522,
                        "nodeType": "ExpressionStatement",
                        "src": "8052:35:1"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 492,
                    "nodeType": "StructuredDocumentation",
                    "src": "7576:307:1",
                    "text": " @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"
                  },
                  "id": 524,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_burn",
                  "nameLocation": "7897:5:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 497,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 494,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "7911:7:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 524,
                        "src": "7903:15:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 493,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "7903:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 496,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "7928:5:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 524,
                        "src": "7920:13:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 495,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "7920:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "7902:32:1"
                  },
                  "returnParameters": {
                    "id": 498,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "7944:0:1"
                  },
                  "scope": 651,
                  "src": "7888:206:1",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 541,
                    "nodeType": "Block",
                    "src": "8704:54:1",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 535,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 527,
                              "src": "8723:5:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 536,
                              "name": "spender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 529,
                              "src": "8730:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 537,
                              "name": "value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 531,
                              "src": "8739:5:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "hexValue": "74727565",
                              "id": 538,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "bool",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8746:4:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "value": "true"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 534,
                            "name": "_approve",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              542,
                              602
                            ],
                            "referencedDeclaration": 602,
                            "src": "8714:8:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
                              "typeString": "function (address,address,uint256,bool)"
                            }
                          },
                          "id": 539,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8714:37:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 540,
                        "nodeType": "ExpressionStatement",
                        "src": "8714:37:1"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 525,
                    "nodeType": "StructuredDocumentation",
                    "src": "8100:525:1",
                    "text": " @dev Sets `value` as the allowance of `spender` over the `owner`'s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
                  },
                  "id": 542,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_approve",
                  "nameLocation": "8639:8:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 532,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 527,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "8656:5:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 542,
                        "src": "8648:13:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 526,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "8648:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 529,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "8671:7:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 542,
                        "src": "8663:15:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 528,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "8663:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 531,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "8688:5:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 542,
                        "src": "8680:13:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 530,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "8680:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "8647:47:1"
                  },
                  "returnParameters": {
                    "id": 533,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "8704:0:1"
                  },
                  "scope": 651,
                  "src": "8630:128:1",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 601,
                    "nodeType": "Block",
                    "src": "9703:334:1",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 559,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 554,
                            "name": "owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 545,
                            "src": "9717:5:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 557,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "9734:1:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 556,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "9726:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 555,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "9726:7:1",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 558,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "9726:10:1",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "9717:19:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 568,
                        "nodeType": "IfStatement",
                        "src": "9713:89:1",
                        "trueBody": {
                          "id": 567,
                          "nodeType": "Block",
                          "src": "9738:64:1",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "hexValue": "30",
                                        "id": 563,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "9788:1:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        }
                                      ],
                                      "id": 562,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "9780:7:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 561,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "9780:7:1",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 564,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "9780:10:1",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 560,
                                  "name": "ERC20InvalidApprover",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 35,
                                  "src": "9759:20:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
                                    "typeString": "function (address) pure returns (error)"
                                  }
                                },
                                "id": 565,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "9759:32:1",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_error",
                                  "typeString": "error"
                                }
                              },
                              "id": 566,
                              "nodeType": "RevertStatement",
                              "src": "9752:39:1"
                            }
                          ]
                        }
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 574,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 569,
                            "name": "spender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 547,
                            "src": "9815:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 572,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "9834:1:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 571,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "9826:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 570,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "9826:7:1",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 573,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "9826:10:1",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "9815:21:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 583,
                        "nodeType": "IfStatement",
                        "src": "9811:90:1",
                        "trueBody": {
                          "id": 582,
                          "nodeType": "Block",
                          "src": "9838:63:1",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "hexValue": "30",
                                        "id": 578,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "9887:1:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        }
                                      ],
                                      "id": 577,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "9879:7:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 576,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "9879:7:1",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 579,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "9879:10:1",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 575,
                                  "name": "ERC20InvalidSpender",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 40,
                                  "src": "9859:19:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
                                    "typeString": "function (address) pure returns (error)"
                                  }
                                },
                                "id": 580,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "9859:31:1",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_error",
                                  "typeString": "error"
                                }
                              },
                              "id": 581,
                              "nodeType": "RevertStatement",
                              "src": "9852:38:1"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "id": 590,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "baseExpression": {
                                "id": 584,
                                "name": "_allowances",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 165,
                                "src": "9910:11:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                                  "typeString": "mapping(address => mapping(address => uint256))"
                                }
                              },
                              "id": 587,
                              "indexExpression": {
                                "id": 585,
                                "name": "owner",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 545,
                                "src": "9922:5:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "9910:18:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 588,
                            "indexExpression": {
                              "id": 586,
                              "name": "spender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 547,
                              "src": "9929:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "9910:27:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 589,
                            "name": "value",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 549,
                            "src": "9940:5:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "9910:35:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 591,
                        "nodeType": "ExpressionStatement",
                        "src": "9910:35:1"
                      },
                      {
                        "condition": {
                          "id": 592,
                          "name": "emitEvent",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 551,
                          "src": "9959:9:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 600,
                        "nodeType": "IfStatement",
                        "src": "9955:76:1",
                        "trueBody": {
                          "id": 599,
                          "nodeType": "Block",
                          "src": "9970:61:1",
                          "statements": [
                            {
                              "eventCall": {
                                "arguments": [
                                  {
                                    "id": 594,
                                    "name": "owner",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 545,
                                    "src": "9998:5:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "id": 595,
                                    "name": "spender",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 547,
                                    "src": "10005:7:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "id": 596,
                                    "name": "value",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 549,
                                    "src": "10014:5:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 593,
                                  "name": "Approval",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 672,
                                  "src": "9989:8:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                                    "typeString": "function (address,address,uint256)"
                                  }
                                },
                                "id": 597,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "9989:31:1",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 598,
                              "nodeType": "EmitStatement",
                              "src": "9984:36:1"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "documentation": {
                    "id": 543,
                    "nodeType": "StructuredDocumentation",
                    "src": "8764:836:1",
                    "text": " @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```solidity\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."
                  },
                  "id": 602,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_approve",
                  "nameLocation": "9614:8:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 552,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 545,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "9631:5:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 602,
                        "src": "9623:13:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 544,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "9623:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 547,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "9646:7:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 602,
                        "src": "9638:15:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 546,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "9638:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 549,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "9663:5:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 602,
                        "src": "9655:13:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 548,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "9655:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 551,
                        "mutability": "mutable",
                        "name": "emitEvent",
                        "nameLocation": "9675:9:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 602,
                        "src": "9670:14:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 550,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "9670:4:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "9622:63:1"
                  },
                  "returnParameters": {
                    "id": 553,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "9703:0:1"
                  },
                  "scope": 651,
                  "src": "9605:432:1",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 649,
                    "nodeType": "Block",
                    "src": "10408:387:1",
                    "statements": [
                      {
                        "assignments": [
                          613
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 613,
                            "mutability": "mutable",
                            "name": "currentAllowance",
                            "nameLocation": "10426:16:1",
                            "nodeType": "VariableDeclaration",
                            "scope": 649,
                            "src": "10418:24:1",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 612,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "10418:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 618,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 615,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 605,
                              "src": "10455:5:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 616,
                              "name": "spender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 607,
                              "src": "10462:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 614,
                            "name": "allowance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 278,
                            "src": "10445:9:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address,address) view returns (uint256)"
                            }
                          },
                          "id": 617,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10445:25:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "10418:52:1"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 625,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 619,
                            "name": "currentAllowance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 613,
                            "src": "10484:16:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "expression": {
                              "arguments": [
                                {
                                  "id": 622,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "10508:7:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_uint256_$",
                                    "typeString": "type(uint256)"
                                  },
                                  "typeName": {
                                    "id": 621,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "10508:7:1",
                                    "typeDescriptions": {}
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_type$_t_uint256_$",
                                    "typeString": "type(uint256)"
                                  }
                                ],
                                "id": 620,
                                "name": "type",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -27,
                                "src": "10503:4:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                                  "typeString": "function () pure"
                                }
                              },
                              "id": 623,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "10503:13:1",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_meta_type_t_uint256",
                                "typeString": "type(uint256)"
                              }
                            },
                            "id": 624,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "10517:3:1",
                            "memberName": "max",
                            "nodeType": "MemberAccess",
                            "src": "10503:17:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "10484:36:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 648,
                        "nodeType": "IfStatement",
                        "src": "10480:309:1",
                        "trueBody": {
                          "id": 647,
                          "nodeType": "Block",
                          "src": "10522:267:1",
                          "statements": [
                            {
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 628,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 626,
                                  "name": "currentAllowance",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 613,
                                  "src": "10540:16:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "<",
                                "rightExpression": {
                                  "id": 627,
                                  "name": "value",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 609,
                                  "src": "10559:5:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "10540:24:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 636,
                              "nodeType": "IfStatement",
                              "src": "10536:130:1",
                              "trueBody": {
                                "id": 635,
                                "nodeType": "Block",
                                "src": "10566:100:1",
                                "statements": [
                                  {
                                    "errorCall": {
                                      "arguments": [
                                        {
                                          "id": 630,
                                          "name": "spender",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 607,
                                          "src": "10618:7:1",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        },
                                        {
                                          "id": 631,
                                          "name": "currentAllowance",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 613,
                                          "src": "10627:16:1",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        {
                                          "id": 632,
                                          "name": "value",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 609,
                                          "src": "10645:5:1",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          },
                                          {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          },
                                          {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        ],
                                        "id": 629,
                                        "name": "ERC20InsufficientAllowance",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 30,
                                        "src": "10591:26:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
                                          "typeString": "function (address,uint256,uint256) pure returns (error)"
                                        }
                                      },
                                      "id": 633,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "nameLocations": [],
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "10591:60:1",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_error",
                                        "typeString": "error"
                                      }
                                    },
                                    "id": 634,
                                    "nodeType": "RevertStatement",
                                    "src": "10584:67:1"
                                  }
                                ]
                              }
                            },
                            {
                              "id": 646,
                              "nodeType": "UncheckedBlock",
                              "src": "10679:100:1",
                              "statements": [
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "id": 638,
                                        "name": "owner",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 605,
                                        "src": "10716:5:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      {
                                        "id": 639,
                                        "name": "spender",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 607,
                                        "src": "10723:7:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      {
                                        "commonType": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "id": 642,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "id": 640,
                                          "name": "currentAllowance",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 613,
                                          "src": "10732:16:1",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "-",
                                        "rightExpression": {
                                          "id": 641,
                                          "name": "value",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 609,
                                          "src": "10751:5:1",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "src": "10732:24:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      {
                                        "hexValue": "66616c7365",
                                        "id": 643,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "bool",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "10758:5:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        },
                                        "value": "false"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        },
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        },
                                        {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        }
                                      ],
                                      "id": 637,
                                      "name": "_approve",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [
                                        542,
                                        602
                                      ],
                                      "referencedDeclaration": 602,
                                      "src": "10707:8:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
                                        "typeString": "function (address,address,uint256,bool)"
                                      }
                                    },
                                    "id": 644,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "10707:57:1",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_tuple$__$",
                                      "typeString": "tuple()"
                                    }
                                  },
                                  "id": 645,
                                  "nodeType": "ExpressionStatement",
                                  "src": "10707:57:1"
                                }
                              ]
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "documentation": {
                    "id": 603,
                    "nodeType": "StructuredDocumentation",
                    "src": "10043:271:1",
                    "text": " @dev Updates `owner`'s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."
                  },
                  "id": 650,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_spendAllowance",
                  "nameLocation": "10328:15:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 610,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 605,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "10352:5:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 650,
                        "src": "10344:13:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 604,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "10344:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 607,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "10367:7:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 650,
                        "src": "10359:15:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 606,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "10359:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 609,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "10384:5:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 650,
                        "src": "10376:13:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 608,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "10376:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "10343:47:1"
                  },
                  "returnParameters": {
                    "id": 611,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "10408:0:1"
                  },
                  "scope": 651,
                  "src": "10319:476:1",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "internal"
                }
              ],
              "scope": 652,
              "src": "1106:9691:1",
              "usedErrors": [
                11,
                16,
                21,
                30,
                35,
                40
              ],
              "usedEvents": [
                663,
                672
              ]
            }
          ],
          "src": "105:10693:1"
        },
        "id": 1
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
          "exportedSymbols": {
            "IERC20": [
              729
            ]
          },
          "id": 730,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 653,
              "literals": [
                "solidity",
                ">=",
                "0.4",
                ".16"
              ],
              "nodeType": "PragmaDirective",
              "src": "106:25:2"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "IERC20",
              "contractDependencies": [],
              "contractKind": "interface",
              "documentation": {
                "id": 654,
                "nodeType": "StructuredDocumentation",
                "src": "133:71:2",
                "text": " @dev Interface of the ERC-20 standard as defined in the ERC."
              },
              "fullyImplemented": false,
              "id": 729,
              "linearizedBaseContracts": [
                729
              ],
              "name": "IERC20",
              "nameLocation": "215:6:2",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 655,
                    "nodeType": "StructuredDocumentation",
                    "src": "228:158:2",
                    "text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
                  },
                  "eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
                  "id": 663,
                  "name": "Transfer",
                  "nameLocation": "397:8:2",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 662,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 657,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "from",
                        "nameLocation": "422:4:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 663,
                        "src": "406:20:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 656,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "406:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 659,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "444:2:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 663,
                        "src": "428:18:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 658,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "428:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 661,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "456:5:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 663,
                        "src": "448:13:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 660,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "448:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "405:57:2"
                  },
                  "src": "391:72:2"
                },
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 664,
                    "nodeType": "StructuredDocumentation",
                    "src": "469:148:2",
                    "text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
                  },
                  "eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
                  "id": 672,
                  "name": "Approval",
                  "nameLocation": "628:8:2",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 671,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 666,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "653:5:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 672,
                        "src": "637:21:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 665,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "637:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 668,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "676:7:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 672,
                        "src": "660:23:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 667,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "660:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 670,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "693:5:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 672,
                        "src": "685:13:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 669,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "685:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "636:63:2"
                  },
                  "src": "622:78:2"
                },
                {
                  "documentation": {
                    "id": 673,
                    "nodeType": "StructuredDocumentation",
                    "src": "706:65:2",
                    "text": " @dev Returns the value of tokens in existence."
                  },
                  "functionSelector": "18160ddd",
                  "id": 678,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "totalSupply",
                  "nameLocation": "785:11:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 674,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "796:2:2"
                  },
                  "returnParameters": {
                    "id": 677,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 676,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 678,
                        "src": "822:7:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 675,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "822:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "821:9:2"
                  },
                  "scope": 729,
                  "src": "776:55:2",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 679,
                    "nodeType": "StructuredDocumentation",
                    "src": "837:71:2",
                    "text": " @dev Returns the value of tokens owned by `account`."
                  },
                  "functionSelector": "70a08231",
                  "id": 686,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "balanceOf",
                  "nameLocation": "922:9:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 682,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 681,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "940:7:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 686,
                        "src": "932:15:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 680,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "932:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "931:17:2"
                  },
                  "returnParameters": {
                    "id": 685,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 684,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 686,
                        "src": "972:7:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 683,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "972:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "971:9:2"
                  },
                  "scope": 729,
                  "src": "913:68:2",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 687,
                    "nodeType": "StructuredDocumentation",
                    "src": "987:213:2",
                    "text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
                  },
                  "functionSelector": "a9059cbb",
                  "id": 696,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "transfer",
                  "nameLocation": "1214:8:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 692,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 689,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "1231:2:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 696,
                        "src": "1223:10:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 688,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1223:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 691,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "1243:5:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 696,
                        "src": "1235:13:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 690,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1235:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1222:27:2"
                  },
                  "returnParameters": {
                    "id": 695,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 694,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 696,
                        "src": "1268:4:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 693,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "1268:4:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1267:6:2"
                  },
                  "scope": 729,
                  "src": "1205:69:2",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 697,
                    "nodeType": "StructuredDocumentation",
                    "src": "1280:264:2",
                    "text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
                  },
                  "functionSelector": "dd62ed3e",
                  "id": 706,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "allowance",
                  "nameLocation": "1558:9:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 702,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 699,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "1576:5:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 706,
                        "src": "1568:13:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 698,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1568:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 701,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "1591:7:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 706,
                        "src": "1583:15:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 700,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1583:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1567:32:2"
                  },
                  "returnParameters": {
                    "id": 705,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 704,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 706,
                        "src": "1623:7:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 703,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1623:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1622:9:2"
                  },
                  "scope": 729,
                  "src": "1549:83:2",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 707,
                    "nodeType": "StructuredDocumentation",
                    "src": "1638:667:2",
                    "text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
                  },
                  "functionSelector": "095ea7b3",
                  "id": 716,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "approve",
                  "nameLocation": "2319:7:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 712,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 709,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "2335:7:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 716,
                        "src": "2327:15:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 708,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2327:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 711,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "2352:5:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 716,
                        "src": "2344:13:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 710,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2344:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2326:32:2"
                  },
                  "returnParameters": {
                    "id": 715,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 714,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 716,
                        "src": "2377:4:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 713,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "2377:4:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2376:6:2"
                  },
                  "scope": 729,
                  "src": "2310:73:2",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 717,
                    "nodeType": "StructuredDocumentation",
                    "src": "2389:297:2",
                    "text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
                  },
                  "functionSelector": "23b872dd",
                  "id": 728,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "transferFrom",
                  "nameLocation": "2700:12:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 724,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 719,
                        "mutability": "mutable",
                        "name": "from",
                        "nameLocation": "2721:4:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 728,
                        "src": "2713:12:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 718,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2713:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 721,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "2735:2:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 728,
                        "src": "2727:10:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 720,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2727:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 723,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "2747:5:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 728,
                        "src": "2739:13:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 722,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2739:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2712:41:2"
                  },
                  "returnParameters": {
                    "id": 727,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 726,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 728,
                        "src": "2772:4:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 725,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "2772:4:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2771:6:2"
                  },
                  "scope": 729,
                  "src": "2691:87:2",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 730,
              "src": "205:2575:2",
              "usedErrors": [],
              "usedEvents": [
                663,
                672
              ]
            }
          ],
          "src": "106:2675:2"
        },
        "id": 2
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
          "exportedSymbols": {
            "IERC20": [
              729
            ],
            "IERC20Metadata": [
              755
            ]
          },
          "id": 756,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 731,
              "literals": [
                "solidity",
                ">=",
                "0.6",
                ".2"
              ],
              "nodeType": "PragmaDirective",
              "src": "125:24:3"
            },
            {
              "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
              "file": "../IERC20.sol",
              "id": 733,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 756,
              "sourceUnit": 730,
              "src": "151:37:3",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 732,
                    "name": "IERC20",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 729,
                    "src": "159:6:3",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 735,
                    "name": "IERC20",
                    "nameLocations": [
                      "306:6:3"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 729,
                    "src": "306:6:3"
                  },
                  "id": 736,
                  "nodeType": "InheritanceSpecifier",
                  "src": "306:6:3"
                }
              ],
              "canonicalName": "IERC20Metadata",
              "contractDependencies": [],
              "contractKind": "interface",
              "documentation": {
                "id": 734,
                "nodeType": "StructuredDocumentation",
                "src": "190:87:3",
                "text": " @dev Interface for the optional metadata functions from the ERC-20 standard."
              },
              "fullyImplemented": false,
              "id": 755,
              "linearizedBaseContracts": [
                755,
                729
              ],
              "name": "IERC20Metadata",
              "nameLocation": "288:14:3",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "documentation": {
                    "id": 737,
                    "nodeType": "StructuredDocumentation",
                    "src": "319:54:3",
                    "text": " @dev Returns the name of the token."
                  },
                  "functionSelector": "06fdde03",
                  "id": 742,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "name",
                  "nameLocation": "387:4:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 738,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "391:2:3"
                  },
                  "returnParameters": {
                    "id": 741,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 740,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 742,
                        "src": "417:13:3",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 739,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "417:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "416:15:3"
                  },
                  "scope": 755,
                  "src": "378:54:3",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 743,
                    "nodeType": "StructuredDocumentation",
                    "src": "438:56:3",
                    "text": " @dev Returns the symbol of the token."
                  },
                  "functionSelector": "95d89b41",
                  "id": 748,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "symbol",
                  "nameLocation": "508:6:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 744,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "514:2:3"
                  },
                  "returnParameters": {
                    "id": 747,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 746,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 748,
                        "src": "540:13:3",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 745,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "540:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "539:15:3"
                  },
                  "scope": 755,
                  "src": "499:56:3",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 749,
                    "nodeType": "StructuredDocumentation",
                    "src": "561:65:3",
                    "text": " @dev Returns the decimals places of the token."
                  },
                  "functionSelector": "313ce567",
                  "id": 754,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "decimals",
                  "nameLocation": "640:8:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 750,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "648:2:3"
                  },
                  "returnParameters": {
                    "id": 753,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 752,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 754,
                        "src": "674:5:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "typeName": {
                          "id": 751,
                          "name": "uint8",
                          "nodeType": "ElementaryTypeName",
                          "src": "674:5:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "673:7:3"
                  },
                  "scope": 755,
                  "src": "631:50:3",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 756,
              "src": "278:405:3",
              "usedErrors": [],
              "usedEvents": [
                663,
                672
              ]
            }
          ],
          "src": "125:559:3"
        },
        "id": 3
      },
      "@openzeppelin/contracts/utils/Context.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts/utils/Context.sol",
          "exportedSymbols": {
            "Context": [
              785
            ]
          },
          "id": 786,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 757,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".20"
              ],
              "nodeType": "PragmaDirective",
              "src": "101:24:4"
            },
            {
              "abstract": true,
              "baseContracts": [],
              "canonicalName": "Context",
              "contractDependencies": [],
              "contractKind": "contract",
              "documentation": {
                "id": 758,
                "nodeType": "StructuredDocumentation",
                "src": "127:496:4",
                "text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
              },
              "fullyImplemented": true,
              "id": 785,
              "linearizedBaseContracts": [
                785
              ],
              "name": "Context",
              "nameLocation": "642:7:4",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "body": {
                    "id": 766,
                    "nodeType": "Block",
                    "src": "718:34:4",
                    "statements": [
                      {
                        "expression": {
                          "expression": {
                            "id": 763,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "735:3:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 764,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "739:6:4",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "735:10:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "functionReturnParameters": 762,
                        "id": 765,
                        "nodeType": "Return",
                        "src": "728:17:4"
                      }
                    ]
                  },
                  "id": 767,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_msgSender",
                  "nameLocation": "665:10:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 759,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "675:2:4"
                  },
                  "returnParameters": {
                    "id": 762,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 761,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 767,
                        "src": "709:7:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 760,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "709:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "708:9:4"
                  },
                  "scope": 785,
                  "src": "656:96:4",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 775,
                    "nodeType": "Block",
                    "src": "825:32:4",
                    "statements": [
                      {
                        "expression": {
                          "expression": {
                            "id": 772,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "842:3:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 773,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "846:4:4",
                          "memberName": "data",
                          "nodeType": "MemberAccess",
                          "src": "842:8:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_calldata_ptr",
                            "typeString": "bytes calldata"
                          }
                        },
                        "functionReturnParameters": 771,
                        "id": 774,
                        "nodeType": "Return",
                        "src": "835:15:4"
                      }
                    ]
                  },
                  "id": 776,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_msgData",
                  "nameLocation": "767:8:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 768,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "775:2:4"
                  },
                  "returnParameters": {
                    "id": 771,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 770,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 776,
                        "src": "809:14:4",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 769,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "809:5:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "808:16:4"
                  },
                  "scope": 785,
                  "src": "758:99:4",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 783,
                    "nodeType": "Block",
                    "src": "935:25:4",
                    "statements": [
                      {
                        "expression": {
                          "hexValue": "30",
                          "id": 781,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "952:1:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "functionReturnParameters": 780,
                        "id": 782,
                        "nodeType": "Return",
                        "src": "945:8:4"
                      }
                    ]
                  },
                  "id": 784,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_contextSuffixLength",
                  "nameLocation": "872:20:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 777,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "892:2:4"
                  },
                  "returnParameters": {
                    "id": 780,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 779,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 784,
                        "src": "926:7:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 778,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "926:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "925:9:4"
                  },
                  "scope": 785,
                  "src": "863:97:4",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "internal"
                }
              ],
              "scope": 786,
              "src": "624:338:4",
              "usedErrors": [],
              "usedEvents": []
            }
          ],
          "src": "101:862:4"
        },
        "id": 4
      },
      "contracts/ERC20Mock.sol": {
        "ast": {
          "absolutePath": "contracts/ERC20Mock.sol",
          "exportedSymbols": {
            "Context": [
              785
            ],
            "ERC20": [
              651
            ],
            "ERC20Mock": [
              812
            ],
            "IERC20": [
              729
            ],
            "IERC20Errors": [
              41
            ],
            "IERC20Metadata": [
              755
            ]
          },
          "id": 813,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 787,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".20"
              ],
              "nodeType": "PragmaDirective",
              "src": "33:24:5"
            },
            {
              "absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
              "file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
              "id": 788,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 813,
              "sourceUnit": 652,
              "src": "61:55:5",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 789,
                    "name": "ERC20",
                    "nameLocations": [
                      "142:5:5"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 651,
                    "src": "142:5:5"
                  },
                  "id": 790,
                  "nodeType": "InheritanceSpecifier",
                  "src": "142:5:5"
                }
              ],
              "canonicalName": "ERC20Mock",
              "contractDependencies": [],
              "contractKind": "contract",
              "fullyImplemented": true,
              "id": 812,
              "linearizedBaseContracts": [
                812,
                651,
                41,
                755,
                729,
                785
              ],
              "name": "ERC20Mock",
              "nameLocation": "129:9:5",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "body": {
                    "id": 810,
                    "nodeType": "Block",
                    "src": "320:56:5",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 806,
                              "name": "initialAccount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 796,
                              "src": "337:14:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 807,
                              "name": "initialBalance",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 798,
                              "src": "353:14:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 805,
                            "name": "_mint",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 491,
                            "src": "331:5:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 808,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "331:37:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 809,
                        "nodeType": "ExpressionStatement",
                        "src": "331:37:5"
                      }
                    ]
                  },
                  "id": 811,
                  "implemented": true,
                  "kind": "constructor",
                  "modifiers": [
                    {
                      "arguments": [
                        {
                          "id": 801,
                          "name": "name",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 792,
                          "src": "306:4:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        {
                          "id": 802,
                          "name": "symbol",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 794,
                          "src": "312:6:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        }
                      ],
                      "id": 803,
                      "kind": "baseConstructorSpecifier",
                      "modifierName": {
                        "id": 800,
                        "name": "ERC20",
                        "nameLocations": [
                          "300:5:5"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 651,
                        "src": "300:5:5"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "300:19:5"
                    }
                  ],
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 799,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 792,
                        "mutability": "mutable",
                        "name": "name",
                        "nameLocation": "191:4:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 811,
                        "src": "177:18:5",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 791,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "177:6:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 794,
                        "mutability": "mutable",
                        "name": "symbol",
                        "nameLocation": "220:6:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 811,
                        "src": "206:20:5",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 793,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "206:6:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 796,
                        "mutability": "mutable",
                        "name": "initialAccount",
                        "nameLocation": "245:14:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 811,
                        "src": "237:22:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 795,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "237:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 798,
                        "mutability": "mutable",
                        "name": "initialBalance",
                        "nameLocation": "278:14:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 811,
                        "src": "270:22:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 797,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "270:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "166:133:5"
                  },
                  "returnParameters": {
                    "id": 804,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "320:0:5"
                  },
                  "scope": 812,
                  "src": "155:221:5",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                }
              ],
              "scope": 813,
              "src": "120:259:5",
              "usedErrors": [
                11,
                16,
                21,
                30,
                35,
                40
              ],
              "usedEvents": [
                663,
                672
              ]
            }
          ],
          "src": "33:348:5"
        },
        "id": 5
      },
      "contracts/PetTrace.sol": {
        "ast": {
          "absolutePath": "contracts/PetTrace.sol",
          "exportedSymbols": {
            "IERC20": [
              852
            ],
            "IERC677": [
              866
            ],
            "PetTrace": [
              2406
            ]
          },
          "id": 2407,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 814,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".20"
              ],
              "nodeType": "PragmaDirective",
              "src": "33:24:6"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "IERC20",
              "contractDependencies": [],
              "contractKind": "interface",
              "documentation": {
                "id": 815,
                "nodeType": "StructuredDocumentation",
                "src": "61:117:6",
                "text": " @title IERC20 Interface\n @dev Standard ERC20 interface with required functions for token interactions"
              },
              "fullyImplemented": false,
              "id": 852,
              "linearizedBaseContracts": [
                852
              ],
              "name": "IERC20",
              "nameLocation": "190:6:6",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "functionSelector": "a9059cbb",
                  "id": 824,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "transfer",
                  "nameLocation": "213:8:6",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 820,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 817,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "230:2:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 824,
                        "src": "222:10:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 816,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "222:7:6",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 819,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "242:6:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 824,
                        "src": "234:14:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 818,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "234:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "221:28:6"
                  },
                  "returnParameters": {
                    "id": 823,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 822,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 824,
                        "src": "268:4:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 821,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "268:4:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "267:6:6"
                  },
                  "scope": 852,
                  "src": "204:70:6",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "23b872dd",
                  "id": 835,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "transferFrom",
                  "nameLocation": "289:12:6",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 831,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 826,
                        "mutability": "mutable",
                        "name": "from",
                        "nameLocation": "320:4:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 835,
                        "src": "312:12:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 825,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "312:7:6",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 828,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "343:2:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 835,
                        "src": "335:10:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 827,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "335:7:6",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 830,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "364:6:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 835,
                        "src": "356:14:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 829,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "356:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "301:76:6"
                  },
                  "returnParameters": {
                    "id": 834,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 833,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 835,
                        "src": "396:4:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 832,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "396:4:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "395:6:6"
                  },
                  "scope": 852,
                  "src": "280:122:6",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "70a08231",
                  "id": 842,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "balanceOf",
                  "nameLocation": "417:9:6",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 838,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 837,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "435:7:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 842,
                        "src": "427:15:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 836,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "427:7:6",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "426:17:6"
                  },
                  "returnParameters": {
                    "id": 841,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 840,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 842,
                        "src": "467:7:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 839,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "467:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "466:9:6"
                  },
                  "scope": 852,
                  "src": "408:68:6",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "dd62ed3e",
                  "id": 851,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "allowance",
                  "nameLocation": "491:9:6",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 847,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 844,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "519:5:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 851,
                        "src": "511:13:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 843,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "511:7:6",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 846,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "543:7:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 851,
                        "src": "535:15:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 845,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "535:7:6",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "500:57:6"
                  },
                  "returnParameters": {
                    "id": 850,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 849,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 851,
                        "src": "581:7:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 848,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "581:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "580:9:6"
                  },
                  "scope": 852,
                  "src": "482:108:6",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 2407,
              "src": "180:413:6",
              "usedErrors": [],
              "usedEvents": []
            },
            {
              "abstract": false,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 853,
                    "name": "IERC20",
                    "nameLocations": [
                      "618:6:6"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 852,
                    "src": "618:6:6"
                  },
                  "id": 854,
                  "nodeType": "InheritanceSpecifier",
                  "src": "618:6:6"
                }
              ],
              "canonicalName": "IERC677",
              "contractDependencies": [],
              "contractKind": "interface",
              "fullyImplemented": false,
              "id": 866,
              "linearizedBaseContracts": [
                866,
                852
              ],
              "name": "IERC677",
              "nameLocation": "607:7:6",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "functionSelector": "4000aea0",
                  "id": 865,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "transferAndCall",
                  "nameLocation": "641:15:6",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 861,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 856,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "675:2:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 865,
                        "src": "667:10:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 855,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "667:7:6",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 858,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "693:5:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 865,
                        "src": "688:10:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 857,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "688:4:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 860,
                        "mutability": "mutable",
                        "name": "data",
                        "nameLocation": "724:4:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 865,
                        "src": "709:19:6",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 859,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "709:5:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "656:79:6"
                  },
                  "returnParameters": {
                    "id": 864,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 863,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 865,
                        "src": "754:4:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 862,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "754:4:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "753:6:6"
                  },
                  "scope": 866,
                  "src": "632:128:6",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 2407,
              "src": "597:166:6",
              "usedErrors": [],
              "usedEvents": []
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "PetTrace",
              "contractDependencies": [],
              "contractKind": "contract",
              "documentation": {
                "id": 867,
                "nodeType": "StructuredDocumentation",
                "src": "767:225:6",
                "text": " @title PetTrace\n @dev A decentralized application for tracking lost pets and managing bounties on Celo network\n @notice Allows owners to post lost pets with bounties (CELO/cUSD) and finders to claim rewards"
              },
              "fullyImplemented": true,
              "id": 2406,
              "linearizedBaseContracts": [
                2406
              ],
              "name": "PetTrace",
              "nameLocation": "1003:8:6",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "constant": false,
                  "id": 869,
                  "mutability": "mutable",
                  "name": "_locked",
                  "nameLocation": "1065:7:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 2406,
                  "src": "1052:20:6",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 868,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1052:4:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "private"
                },
                {
                  "constant": false,
                  "functionSelector": "f851a440",
                  "id": 871,
                  "mutability": "mutable",
                  "name": "admin",
                  "nameLocation": "1094:5:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 2406,
                  "src": "1079:20:6",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 870,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1079:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": true,
                  "functionSelector": "465c66e9",
                  "id": 874,
                  "mutability": "constant",
                  "name": "CUSD_ADDRESS",
                  "nameLocation": "1150:12:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 2406,
                  "src": "1126:90:6",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 872,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1126:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": {
                    "hexValue": "307837363544453831363834353836316537354132356643413132326262363839384238423132383261",
                    "id": 873,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1174:42:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "value": "0x765DE816845861e75A25fCA122bb6898B8B1282a"
                  },
                  "visibility": "public"
                },
                {
                  "constant": true,
                  "functionSelector": "ee7afb1c",
                  "id": 877,
                  "mutability": "constant",
                  "name": "GDOLLAR_ADDRESS",
                  "nameLocation": "1247:15:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 2406,
                  "src": "1223:93:6",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 875,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1223:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": {
                    "hexValue": "307836324238423131303339466366453561423043353645353032623143333732413364326139633741",
                    "id": 876,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1274:42:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "value": "0x62B8B11039FcfE5aB0C56E502b1C372A3d2a9c7A"
                  },
                  "visibility": "public"
                },
                {
                  "constant": true,
                  "functionSelector": "3fa8be32",
                  "id": 880,
                  "mutability": "constant",
                  "name": "MAX_CELO_BOUNTY",
                  "nameLocation": "1349:15:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 2406,
                  "src": "1325:50:6",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 878,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1325:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "hexValue": "3130",
                    "id": 879,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1367:8:6",
                    "subdenomination": "ether",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_10000000000000000000_by_1",
                      "typeString": "int_const 10000000000000000000"
                    },
                    "value": "10"
                  },
                  "visibility": "public"
                },
                {
                  "constant": true,
                  "functionSelector": "9dc5ac72",
                  "id": 885,
                  "mutability": "constant",
                  "name": "MAX_CUSD_BOUNTY",
                  "nameLocation": "1406:15:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 2406,
                  "src": "1382:54:6",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 881,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1382:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "commonType": {
                      "typeIdentifier": "t_rational_10000000000000000000000_by_1",
                      "typeString": "int_const 10000000000000000000000"
                    },
                    "id": 884,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "leftExpression": {
                      "hexValue": "3130303030",
                      "id": 882,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1424:5:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_10000_by_1",
                        "typeString": "int_const 10000"
                      },
                      "value": "10000"
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "*",
                    "rightExpression": {
                      "hexValue": "31653138",
                      "id": 883,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1432:4:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1000000000000000000_by_1",
                        "typeString": "int_const 1000000000000000000"
                      },
                      "value": "1e18"
                    },
                    "src": "1424:12:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_10000000000000000000000_by_1",
                      "typeString": "int_const 10000000000000000000000"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": true,
                  "functionSelector": "0b5d39fa",
                  "id": 888,
                  "mutability": "constant",
                  "name": "BOUNTY_TIMEOUT",
                  "nameLocation": "1467:14:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 2406,
                  "src": "1443:48:6",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 886,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1443:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "hexValue": "3930",
                    "id": 887,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1484:7:6",
                    "subdenomination": "days",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_7776000_by_1",
                      "typeString": "int_const 7776000"
                    },
                    "value": "90"
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "403f8cc7",
                  "id": 890,
                  "mutability": "mutable",
                  "name": "nextPetId",
                  "nameLocation": "1540:9:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 2406,
                  "src": "1525:24:6",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 889,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1525:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "cfb869bf",
                  "id": 895,
                  "mutability": "mutable",
                  "name": "pets",
                  "nameLocation": "1587:4:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 2406,
                  "src": "1556:35:6",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Pet_$955_storage_$",
                    "typeString": "mapping(uint256 => struct PetTrace.Pet)"
                  },
                  "typeName": {
                    "id": 894,
                    "keyName": "",
                    "keyNameLocation": "-1:-1:-1",
                    "keyType": {
                      "id": 891,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "1564:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "1556:23:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Pet_$955_storage_$",
                      "typeString": "mapping(uint256 => struct PetTrace.Pet)"
                    },
                    "valueName": "",
                    "valueNameLocation": "-1:-1:-1",
                    "valueType": {
                      "id": 893,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 892,
                        "name": "Pet",
                        "nameLocations": [
                          "1575:3:6"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 955,
                        "src": "1575:3:6"
                      },
                      "referencedDeclaration": 955,
                      "src": "1575:3:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Pet_$955_storage_ptr",
                        "typeString": "struct PetTrace.Pet"
                      }
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "1850e3a7",
                  "id": 899,
                  "mutability": "mutable",
                  "name": "escrowedCUSD",
                  "nameLocation": "1633:12:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 2406,
                  "src": "1598:47:6",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                    "typeString": "mapping(uint256 => uint256)"
                  },
                  "typeName": {
                    "id": 898,
                    "keyName": "",
                    "keyNameLocation": "-1:-1:-1",
                    "keyType": {
                      "id": 896,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "1606:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "1598:27:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                      "typeString": "mapping(uint256 => uint256)"
                    },
                    "valueName": "",
                    "valueNameLocation": "-1:-1:-1",
                    "valueType": {
                      "id": 897,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "1617:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "d25a6f05",
                  "id": 903,
                  "mutability": "mutable",
                  "name": "escrowedGDOLLAR",
                  "nameLocation": "1687:15:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 2406,
                  "src": "1652:50:6",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                    "typeString": "mapping(uint256 => uint256)"
                  },
                  "typeName": {
                    "id": 902,
                    "keyName": "",
                    "keyNameLocation": "-1:-1:-1",
                    "keyType": {
                      "id": 900,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "1660:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "1652:27:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                      "typeString": "mapping(uint256 => uint256)"
                    },
                    "valueName": "",
                    "valueNameLocation": "-1:-1:-1",
                    "valueType": {
                      "id": 901,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "1671:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "d74a48a4",
                  "id": 907,
                  "mutability": "mutable",
                  "name": "postTime",
                  "nameLocation": "1744:8:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 2406,
                  "src": "1709:43:6",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                    "typeString": "mapping(uint256 => uint256)"
                  },
                  "typeName": {
                    "id": 906,
                    "keyName": "",
                    "keyNameLocation": "-1:-1:-1",
                    "keyType": {
                      "id": 904,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "1717:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "1709:27:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                      "typeString": "mapping(uint256 => uint256)"
                    },
                    "valueName": "",
                    "valueNameLocation": "-1:-1:-1",
                    "valueType": {
                      "id": 905,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "1728:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    }
                  },
                  "visibility": "public"
                },
                {
                  "canonicalName": "PetTrace.PetStatus",
                  "id": 911,
                  "members": [
                    {
                      "id": 908,
                      "name": "Active",
                      "nameLocation": "1787:6:6",
                      "nodeType": "EnumValue",
                      "src": "1787:6:6"
                    },
                    {
                      "id": 909,
                      "name": "Found",
                      "nameLocation": "1840:5:6",
                      "nodeType": "EnumValue",
                      "src": "1840:5:6"
                    },
                    {
                      "id": 910,
                      "name": "Cancelled",
                      "nameLocation": "1883:9:6",
                      "nodeType": "EnumValue",
                      "src": "1883:9:6"
                    }
                  ],
                  "name": "PetStatus",
                  "nameLocation": "1766:9:6",
                  "nodeType": "EnumDefinition",
                  "src": "1761:182:6"
                },
                {
                  "canonicalName": "PetTrace.Pet",
                  "id": 955,
                  "members": [
                    {
                      "constant": false,
                      "id": 913,
                      "mutability": "mutable",
                      "name": "id",
                      "nameLocation": "1981:2:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 955,
                      "src": "1973:10:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 912,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1973:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 915,
                      "mutability": "mutable",
                      "name": "owner",
                      "nameLocation": "2010:5:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 955,
                      "src": "1994:21:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      },
                      "typeName": {
                        "id": 914,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1994:15:6",
                        "stateMutability": "payable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 917,
                      "mutability": "mutable",
                      "name": "name",
                      "nameLocation": "2033:4:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 955,
                      "src": "2026:11:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage_ptr",
                        "typeString": "string"
                      },
                      "typeName": {
                        "id": 916,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "2026:6:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage_ptr",
                          "typeString": "string"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 919,
                      "mutability": "mutable",
                      "name": "breed",
                      "nameLocation": "2055:5:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 955,
                      "src": "2048:12:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage_ptr",
                        "typeString": "string"
                      },
                      "typeName": {
                        "id": 918,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "2048:6:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage_ptr",
                          "typeString": "string"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 921,
                      "mutability": "mutable",
                      "name": "gender",
                      "nameLocation": "2078:6:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 955,
                      "src": "2071:13:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage_ptr",
                        "typeString": "string"
                      },
                      "typeName": {
                        "id": 920,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "2071:6:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage_ptr",
                          "typeString": "string"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 923,
                      "mutability": "mutable",
                      "name": "sizeCm",
                      "nameLocation": "2103:6:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 955,
                      "src": "2095:14:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      },
                      "typeName": {
                        "id": 922,
                        "name": "uint128",
                        "nodeType": "ElementaryTypeName",
                        "src": "2095:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 925,
                      "mutability": "mutable",
                      "name": "ageMonths",
                      "nameLocation": "2128:9:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 955,
                      "src": "2120:17:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      },
                      "typeName": {
                        "id": 924,
                        "name": "uint128",
                        "nodeType": "ElementaryTypeName",
                        "src": "2120:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 927,
                      "mutability": "mutable",
                      "name": "dateTimeLost",
                      "nameLocation": "2155:12:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 955,
                      "src": "2148:19:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage_ptr",
                        "typeString": "string"
                      },
                      "typeName": {
                        "id": 926,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "2148:6:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage_ptr",
                          "typeString": "string"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 929,
                      "mutability": "mutable",
                      "name": "description",
                      "nameLocation": "2185:11:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 955,
                      "src": "2178:18:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage_ptr",
                        "typeString": "string"
                      },
                      "typeName": {
                        "id": 928,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "2178:6:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage_ptr",
                          "typeString": "string"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 931,
                      "mutability": "mutable",
                      "name": "imageUrl",
                      "nameLocation": "2214:8:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 955,
                      "src": "2207:15:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage_ptr",
                        "typeString": "string"
                      },
                      "typeName": {
                        "id": 930,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "2207:6:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage_ptr",
                          "typeString": "string"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 933,
                      "mutability": "mutable",
                      "name": "lastSeenLocation",
                      "nameLocation": "2240:16:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 955,
                      "src": "2233:23:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage_ptr",
                        "typeString": "string"
                      },
                      "typeName": {
                        "id": 932,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "2233:6:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage_ptr",
                          "typeString": "string"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 935,
                      "mutability": "mutable",
                      "name": "contactName",
                      "nameLocation": "2274:11:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 955,
                      "src": "2267:18:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage_ptr",
                        "typeString": "string"
                      },
                      "typeName": {
                        "id": 934,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "2267:6:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage_ptr",
                          "typeString": "string"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 937,
                      "mutability": "mutable",
                      "name": "contactPhone",
                      "nameLocation": "2303:12:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 955,
                      "src": "2296:19:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage_ptr",
                        "typeString": "string"
                      },
                      "typeName": {
                        "id": 936,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "2296:6:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage_ptr",
                          "typeString": "string"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 939,
                      "mutability": "mutable",
                      "name": "contactEmail",
                      "nameLocation": "2333:12:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 955,
                      "src": "2326:19:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage_ptr",
                        "typeString": "string"
                      },
                      "typeName": {
                        "id": 938,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "2326:6:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage_ptr",
                          "typeString": "string"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 941,
                      "mutability": "mutable",
                      "name": "celoBounty",
                      "nameLocation": "2364:10:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 955,
                      "src": "2356:18:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      },
                      "typeName": {
                        "id": 940,
                        "name": "uint128",
                        "nodeType": "ElementaryTypeName",
                        "src": "2356:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 943,
                      "mutability": "mutable",
                      "name": "cUSDBounty",
                      "nameLocation": "2393:10:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 955,
                      "src": "2385:18:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      },
                      "typeName": {
                        "id": 942,
                        "name": "uint128",
                        "nodeType": "ElementaryTypeName",
                        "src": "2385:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 945,
                      "mutability": "mutable",
                      "name": "gDollarBounty",
                      "nameLocation": "2422:13:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 955,
                      "src": "2414:21:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      },
                      "typeName": {
                        "id": 944,
                        "name": "uint128",
                        "nodeType": "ElementaryTypeName",
                        "src": "2414:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 948,
                      "mutability": "mutable",
                      "name": "status",
                      "nameLocation": "2456:6:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 955,
                      "src": "2446:16:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_PetStatus_$911",
                        "typeString": "enum PetTrace.PetStatus"
                      },
                      "typeName": {
                        "id": 947,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 946,
                          "name": "PetStatus",
                          "nameLocations": [
                            "2446:9:6"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 911,
                          "src": "2446:9:6"
                        },
                        "referencedDeclaration": 911,
                        "src": "2446:9:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_PetStatus_$911",
                          "typeString": "enum PetTrace.PetStatus"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 950,
                      "mutability": "mutable",
                      "name": "ownerConfirmed",
                      "nameLocation": "2478:14:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 955,
                      "src": "2473:19:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 949,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "2473:4:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 952,
                      "mutability": "mutable",
                      "name": "finderConfirmed",
                      "nameLocation": "2508:15:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 955,
                      "src": "2503:20:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 951,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "2503:4:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 954,
                      "mutability": "mutable",
                      "name": "finder",
                      "nameLocation": "2542:6:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 955,
                      "src": "2534:14:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 953,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "2534:7:6",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "name": "Pet",
                  "nameLocation": "1958:3:6",
                  "nodeType": "StructDefinition",
                  "scope": 2406,
                  "src": "1951:605:6",
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 972,
                    "nodeType": "Block",
                    "src": "2606:134:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 959,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "UnaryOperation",
                              "operator": "!",
                              "prefix": true,
                              "src": "2625:8:6",
                              "subExpression": {
                                "id": 958,
                                "name": "_locked",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 869,
                                "src": "2626:7:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
                              "id": 960,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2635:33:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
                                "typeString": "literal_string \"ReentrancyGuard: reentrant call\""
                              },
                              "value": "ReentrancyGuard: reentrant call"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
                                "typeString": "literal_string \"ReentrancyGuard: reentrant call\""
                              }
                            ],
                            "id": 957,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "2617:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 961,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2617:52:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 962,
                        "nodeType": "ExpressionStatement",
                        "src": "2617:52:6"
                      },
                      {
                        "expression": {
                          "id": 965,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 963,
                            "name": "_locked",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 869,
                            "src": "2680:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "74727565",
                            "id": 964,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2690:4:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "2680:14:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 966,
                        "nodeType": "ExpressionStatement",
                        "src": "2680:14:6"
                      },
                      {
                        "id": 967,
                        "nodeType": "PlaceholderStatement",
                        "src": "2705:1:6"
                      },
                      {
                        "expression": {
                          "id": 970,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 968,
                            "name": "_locked",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 869,
                            "src": "2717:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "66616c7365",
                            "id": 969,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2727:5:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "false"
                          },
                          "src": "2717:15:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 971,
                        "nodeType": "ExpressionStatement",
                        "src": "2717:15:6"
                      }
                    ]
                  },
                  "id": 973,
                  "name": "nonReentrant",
                  "nameLocation": "2591:12:6",
                  "nodeType": "ModifierDefinition",
                  "parameters": {
                    "id": 956,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2603:2:6"
                  },
                  "src": "2582:158:6",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 989,
                    "nodeType": "Block",
                    "src": "2785:88:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 984,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 978,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "2804:3:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 979,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "2808:6:6",
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "2804:10:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "expression": {
                                  "baseExpression": {
                                    "id": 980,
                                    "name": "pets",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 895,
                                    "src": "2818:4:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Pet_$955_storage_$",
                                      "typeString": "mapping(uint256 => struct PetTrace.Pet storage ref)"
                                    }
                                  },
                                  "id": 982,
                                  "indexExpression": {
                                    "id": 981,
                                    "name": "petId",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 975,
                                    "src": "2823:5:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "2818:11:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Pet_$955_storage",
                                    "typeString": "struct PetTrace.Pet storage ref"
                                  }
                                },
                                "id": 983,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "2830:5:6",
                                "memberName": "owner",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 915,
                                "src": "2818:17:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              "src": "2804:31:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4e6f7420706574206f776e6572",
                              "id": 985,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2837:15:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_ddee410200bcfda873fa25b2001ae2b70aaf5ae1f26957c575c1d39eff9d2280",
                                "typeString": "literal_string \"Not pet owner\""
                              },
                              "value": "Not pet owner"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_ddee410200bcfda873fa25b2001ae2b70aaf5ae1f26957c575c1d39eff9d2280",
                                "typeString": "literal_string \"Not pet owner\""
                              }
                            ],
                            "id": 977,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "2796:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 986,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2796:57:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 987,
                        "nodeType": "ExpressionStatement",
                        "src": "2796:57:6"
                      },
                      {
                        "id": 988,
                        "nodeType": "PlaceholderStatement",
                        "src": "2864:1:6"
                      }
                    ]
                  },
                  "id": 990,
                  "name": "onlyPetOwner",
                  "nameLocation": "2757:12:6",
                  "nodeType": "ModifierDefinition",
                  "parameters": {
                    "id": 976,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 975,
                        "mutability": "mutable",
                        "name": "petId",
                        "nameLocation": "2778:5:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 990,
                        "src": "2770:13:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 974,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2770:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2769:15:6"
                  },
                  "src": "2748:125:6",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1002,
                    "nodeType": "Block",
                    "src": "2915:79:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 997,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 995,
                                "name": "petId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 992,
                                "src": "2934:5:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "<",
                              "rightExpression": {
                                "id": 996,
                                "name": "nextPetId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 890,
                                "src": "2942:9:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "2934:17:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "50657420646f6573206e6f74206578697374",
                              "id": 998,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2953:20:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_2fc3157cdbf762cc5fc1187cd7f3e010f8c930c2cd7181f6ff5401ab9f3bd524",
                                "typeString": "literal_string \"Pet does not exist\""
                              },
                              "value": "Pet does not exist"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_2fc3157cdbf762cc5fc1187cd7f3e010f8c930c2cd7181f6ff5401ab9f3bd524",
                                "typeString": "literal_string \"Pet does not exist\""
                              }
                            ],
                            "id": 994,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "2926:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 999,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2926:48:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1000,
                        "nodeType": "ExpressionStatement",
                        "src": "2926:48:6"
                      },
                      {
                        "id": 1001,
                        "nodeType": "PlaceholderStatement",
                        "src": "2985:1:6"
                      }
                    ]
                  },
                  "id": 1003,
                  "name": "petExists",
                  "nameLocation": "2890:9:6",
                  "nodeType": "ModifierDefinition",
                  "parameters": {
                    "id": 993,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 992,
                        "mutability": "mutable",
                        "name": "petId",
                        "nameLocation": "2908:5:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 1003,
                        "src": "2900:13:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 991,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2900:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2899:15:6"
                  },
                  "src": "2881:113:6",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1014,
                    "nodeType": "Block",
                    "src": "3023:72:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 1009,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 1006,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "3042:3:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 1007,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "3046:6:6",
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "3042:10:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "id": 1008,
                                "name": "admin",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 871,
                                "src": "3056:5:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "3042:19:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4e6f742061646d696e",
                              "id": 1010,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3063:11:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_fa7e120cf98867f00c0ac28b387a73caec64b93b1889065f7b4c5e5232c0bad6",
                                "typeString": "literal_string \"Not admin\""
                              },
                              "value": "Not admin"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_fa7e120cf98867f00c0ac28b387a73caec64b93b1889065f7b4c5e5232c0bad6",
                                "typeString": "literal_string \"Not admin\""
                              }
                            ],
                            "id": 1005,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "3034:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1011,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3034:41:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1012,
                        "nodeType": "ExpressionStatement",
                        "src": "3034:41:6"
                      },
                      {
                        "id": 1013,
                        "nodeType": "PlaceholderStatement",
                        "src": "3086:1:6"
                      }
                    ]
                  },
                  "id": 1015,
                  "name": "onlyAdmin",
                  "nameLocation": "3011:9:6",
                  "nodeType": "ModifierDefinition",
                  "parameters": {
                    "id": 1004,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3020:2:6"
                  },
                  "src": "3002:93:6",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "anonymous": false,
                  "eventSelector": "f6be169e9242db299e4065f846c02e09b60f1421201248fe94d6f552e8c8bd44",
                  "id": 1021,
                  "name": "PetPosted",
                  "nameLocation": "3124:9:6",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 1020,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1017,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "petId",
                        "nameLocation": "3150:5:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 1021,
                        "src": "3134:21:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1016,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3134:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1019,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "3173:5:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 1021,
                        "src": "3157:21:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1018,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3157:7:6",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3133:46:6"
                  },
                  "src": "3118:62:6"
                },
                {
                  "anonymous": false,
                  "eventSelector": "2c54217aed12a18c71e20e5a6a3f13f8cfddbb2c3a0a5f409861478c7fd39e81",
                  "id": 1027,
                  "name": "PetFound",
                  "nameLocation": "3192:8:6",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 1026,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1023,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "petId",
                        "nameLocation": "3217:5:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 1027,
                        "src": "3201:21:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1022,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3201:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1025,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "finder",
                        "nameLocation": "3240:6:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 1027,
                        "src": "3224:22:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1024,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3224:7:6",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3200:47:6"
                  },
                  "src": "3186:62:6"
                },
                {
                  "anonymous": false,
                  "eventSelector": "0af63efacf28433915ea2d25f6e48eb87264e585bebef968bcd127a52608adec",
                  "id": 1039,
                  "name": "BountyClaimed",
                  "nameLocation": "3260:13:6",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 1038,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1029,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "petId",
                        "nameLocation": "3300:5:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 1039,
                        "src": "3284:21:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1028,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3284:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1031,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "finder",
                        "nameLocation": "3332:6:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 1039,
                        "src": "3316:22:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1030,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3316:7:6",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1033,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "celoAmount",
                        "nameLocation": "3357:10:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 1039,
                        "src": "3349:18:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1032,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3349:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1035,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "cUSDAmount",
                        "nameLocation": "3386:10:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 1039,
                        "src": "3378:18:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1034,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3378:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1037,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "gDollarAmount",
                        "nameLocation": "3415:13:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 1039,
                        "src": "3407:21:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1036,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3407:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3273:162:6"
                  },
                  "src": "3254:182:6"
                },
                {
                  "anonymous": false,
                  "eventSelector": "c7db73a2d1dc7fd351b6549efad129bbf568e618dbbe683abfa0d1550a96e5ae",
                  "id": 1047,
                  "name": "ConfirmationAdded",
                  "nameLocation": "3448:17:6",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 1046,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1041,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "petId",
                        "nameLocation": "3492:5:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 1047,
                        "src": "3476:21:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1040,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3476:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1043,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "confirmer",
                        "nameLocation": "3524:9:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 1047,
                        "src": "3508:25:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1042,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3508:7:6",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1045,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "isOwner",
                        "nameLocation": "3549:7:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 1047,
                        "src": "3544:12:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 1044,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "3544:4:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3465:98:6"
                  },
                  "src": "3442:122:6"
                },
                {
                  "anonymous": false,
                  "eventSelector": "5a15fed544596f86ab10d13ce99dfeb4e13095d939b5749ae220fbc4f0584636",
                  "id": 1059,
                  "name": "BountyRefunded",
                  "nameLocation": "3576:14:6",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 1058,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1049,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "petId",
                        "nameLocation": "3617:5:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 1059,
                        "src": "3601:21:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1048,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3601:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1051,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "3649:5:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 1059,
                        "src": "3633:21:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1050,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3633:7:6",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1053,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "celoAmount",
                        "nameLocation": "3673:10:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 1059,
                        "src": "3665:18:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1052,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3665:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1055,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "cUSDAmount",
                        "nameLocation": "3702:10:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 1059,
                        "src": "3694:18:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1054,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3694:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1057,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "gDollarAmount",
                        "nameLocation": "3731:13:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 1059,
                        "src": "3723:21:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1056,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3723:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3590:161:6"
                  },
                  "src": "3570:182:6"
                },
                {
                  "anonymous": false,
                  "eventSelector": "7ce7ec0b50378fb6c0186ffb5f48325f6593fcb4ca4386f21861af3129188f5c",
                  "id": 1063,
                  "name": "AdminChanged",
                  "nameLocation": "3764:12:6",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 1062,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1061,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "newAdmin",
                        "nameLocation": "3793:8:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 1063,
                        "src": "3777:24:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1060,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3777:7:6",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3776:26:6"
                  },
                  "src": "3758:45:6"
                },
                {
                  "body": {
                    "id": 1071,
                    "nodeType": "Block",
                    "src": "3825:37:6",
                    "statements": [
                      {
                        "expression": {
                          "id": 1069,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1066,
                            "name": "admin",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 871,
                            "src": "3836:5:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "id": 1067,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "3844:3:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 1068,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "3848:6:6",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "3844:10:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "3836:18:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 1070,
                        "nodeType": "ExpressionStatement",
                        "src": "3836:18:6"
                      }
                    ]
                  },
                  "id": 1072,
                  "implemented": true,
                  "kind": "constructor",
                  "modifiers": [],
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1064,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3822:2:6"
                  },
                  "returnParameters": {
                    "id": 1065,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3825:0:6"
                  },
                  "scope": 2406,
                  "src": "3811:51:6",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 1339,
                    "nodeType": "Block",
                    "src": "4602:2748:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1110,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 1107,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "4650:3:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 1108,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "4654:5:6",
                                "memberName": "value",
                                "nodeType": "MemberAccess",
                                "src": "4650:9:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "<=",
                              "rightExpression": {
                                "id": 1109,
                                "name": "MAX_CELO_BOUNTY",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 880,
                                "src": "4663:15:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "4650:28:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "43454c4f20626f756e747920746f6f206c61726765",
                              "id": 1111,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4680:23:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_abbae6901d0315ecd413242ba32756ed5c2e0efce70e7ef65d7fbe69593475c2",
                                "typeString": "literal_string \"CELO bounty too large\""
                              },
                              "value": "CELO bounty too large"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_abbae6901d0315ecd413242ba32756ed5c2e0efce70e7ef65d7fbe69593475c2",
                                "typeString": "literal_string \"CELO bounty too large\""
                              }
                            ],
                            "id": 1106,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "4642:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1112,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4642:62:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1113,
                        "nodeType": "ExpressionStatement",
                        "src": "4642:62:6"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1117,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 1115,
                                "name": "cUSDBounty",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1099,
                                "src": "4723:10:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint128",
                                  "typeString": "uint128"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "<=",
                              "rightExpression": {
                                "id": 1116,
                                "name": "MAX_CUSD_BOUNTY",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 885,
                                "src": "4737:15:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "4723:29:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "6355534420626f756e747920746f6f206c61726765",
                              "id": 1118,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4754:23:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_fc93dfd1378cc171fea674cd1023e4b0dbc0fedff186c7c0764af7563ae1b03f",
                                "typeString": "literal_string \"cUSD bounty too large\""
                              },
                              "value": "cUSD bounty too large"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_fc93dfd1378cc171fea674cd1023e4b0dbc0fedff186c7c0764af7563ae1b03f",
                                "typeString": "literal_string \"cUSD bounty too large\""
                              }
                            ],
                            "id": 1114,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "4715:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1119,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4715:63:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1120,
                        "nodeType": "ExpressionStatement",
                        "src": "4715:63:6"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1124,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 1122,
                                "name": "gDollarBounty",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1101,
                                "src": "4797:13:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint128",
                                  "typeString": "uint128"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "<=",
                              "rightExpression": {
                                "id": 1123,
                                "name": "MAX_CUSD_BOUNTY",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 885,
                                "src": "4814:15:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "4797:32:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "472420626f756e747920746f6f206c61726765",
                              "id": 1125,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4831:21:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_978d274505c217ebe09c69512d38fd094472f9fe9d2de4e49896ff7bba8d778b",
                                "typeString": "literal_string \"G$ bounty too large\""
                              },
                              "value": "G$ bounty too large"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_978d274505c217ebe09c69512d38fd094472f9fe9d2de4e49896ff7bba8d778b",
                                "typeString": "literal_string \"G$ bounty too large\""
                              }
                            ],
                            "id": 1121,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "4789:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1126,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4789:64:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1127,
                        "nodeType": "ExpressionStatement",
                        "src": "4789:64:6"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 1140,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "id": 1136,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 1132,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "expression": {
                                      "id": 1129,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -15,
                                      "src": "4886:3:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 1130,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "4890:5:6",
                                    "memberName": "value",
                                    "nodeType": "MemberAccess",
                                    "src": "4886:9:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": ">",
                                  "rightExpression": {
                                    "hexValue": "30",
                                    "id": 1131,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "4898:1:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  },
                                  "src": "4886:13:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "||",
                                "rightExpression": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint128",
                                    "typeString": "uint128"
                                  },
                                  "id": 1135,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 1133,
                                    "name": "cUSDBounty",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1099,
                                    "src": "4903:10:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint128",
                                      "typeString": "uint128"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": ">",
                                  "rightExpression": {
                                    "hexValue": "30",
                                    "id": 1134,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "4916:1:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  },
                                  "src": "4903:14:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "src": "4886:31:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "||",
                              "rightExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint128",
                                  "typeString": "uint128"
                                },
                                "id": 1139,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 1137,
                                  "name": "gDollarBounty",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1101,
                                  "src": "4921:13:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint128",
                                    "typeString": "uint128"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": ">",
                                "rightExpression": {
                                  "hexValue": "30",
                                  "id": 1138,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "4937:1:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                },
                                "src": "4921:17:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "src": "4886:52:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "426f756e7479207265717569726564",
                              "id": 1141,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4953:17:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_4760a2dcdea46d623c2b3ac26d8fe398a85dc7d7ada5c43bc30c571cc34cf493",
                                "typeString": "literal_string \"Bounty required\""
                              },
                              "value": "Bounty required"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_4760a2dcdea46d623c2b3ac26d8fe398a85dc7d7ada5c43bc30c571cc34cf493",
                                "typeString": "literal_string \"Bounty required\""
                              }
                            ],
                            "id": 1128,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "4864:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1142,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4864:117:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1143,
                        "nodeType": "ExpressionStatement",
                        "src": "4864:117:6"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1145,
                              "name": "name",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1075,
                              "src": "5010:4:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_calldata_ptr",
                                "typeString": "string calldata"
                              }
                            },
                            {
                              "hexValue": "32",
                              "id": 1146,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5016:1:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_2_by_1",
                                "typeString": "int_const 2"
                              },
                              "value": "2"
                            },
                            {
                              "hexValue": "3530",
                              "id": 1147,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5019:2:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_50_by_1",
                                "typeString": "int_const 50"
                              },
                              "value": "50"
                            },
                            {
                              "hexValue": "4e616d65",
                              "id": 1148,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5023:6:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_55e49609591f684ecf6f2909c9e20c2439b990887b9c3fe108b154c9077d85cf",
                                "typeString": "literal_string \"Name\""
                              },
                              "value": "Name"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_string_calldata_ptr",
                                "typeString": "string calldata"
                              },
                              {
                                "typeIdentifier": "t_rational_2_by_1",
                                "typeString": "int_const 2"
                              },
                              {
                                "typeIdentifier": "t_rational_50_by_1",
                                "typeString": "int_const 50"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_55e49609591f684ecf6f2909c9e20c2439b990887b9c3fe108b154c9077d85cf",
                                "typeString": "literal_string \"Name\""
                              }
                            ],
                            "id": 1144,
                            "name": "_validateString",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2299,
                            "src": "4994:15:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_string_calldata_ptr_$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (string calldata,uint256,uint256,string memory) pure"
                            }
                          },
                          "id": 1149,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4994:36:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1150,
                        "nodeType": "ExpressionStatement",
                        "src": "4994:36:6"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1152,
                              "name": "breed",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1077,
                              "src": "5057:5:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_calldata_ptr",
                                "typeString": "string calldata"
                              }
                            },
                            {
                              "hexValue": "32",
                              "id": 1153,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5064:1:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_2_by_1",
                                "typeString": "int_const 2"
                              },
                              "value": "2"
                            },
                            {
                              "hexValue": "3530",
                              "id": 1154,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5067:2:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_50_by_1",
                                "typeString": "int_const 50"
                              },
                              "value": "50"
                            },
                            {
                              "hexValue": "4272656564",
                              "id": 1155,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5071:7:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_8985876c0049ecb4728a35bec44445890d111711db84adb4e8cb73b661a86b3a",
                                "typeString": "literal_string \"Breed\""
                              },
                              "value": "Breed"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_string_calldata_ptr",
                                "typeString": "string calldata"
                              },
                              {
                                "typeIdentifier": "t_rational_2_by_1",
                                "typeString": "int_const 2"
                              },
                              {
                                "typeIdentifier": "t_rational_50_by_1",
                                "typeString": "int_const 50"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_8985876c0049ecb4728a35bec44445890d111711db84adb4e8cb73b661a86b3a",
                                "typeString": "literal_string \"Breed\""
                              }
                            ],
                            "id": 1151,
                            "name": "_validateString",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2299,
                            "src": "5041:15:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_string_calldata_ptr_$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (string calldata,uint256,uint256,string memory) pure"
                            }
                          },
                          "id": 1156,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5041:38:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1157,
                        "nodeType": "ExpressionStatement",
                        "src": "5041:38:6"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1159,
                              "name": "gender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1079,
                              "src": "5106:6:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_calldata_ptr",
                                "typeString": "string calldata"
                              }
                            },
                            {
                              "hexValue": "31",
                              "id": 1160,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5114:1:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
                            {
                              "hexValue": "3130",
                              "id": 1161,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5117:2:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_10_by_1",
                                "typeString": "int_const 10"
                              },
                              "value": "10"
                            },
                            {
                              "hexValue": "47656e646572",
                              "id": 1162,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5121:8:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_313674fe02da6ba6141f0057468529291c27e37b2c04aab4f1964d3a33a0e331",
                                "typeString": "literal_string \"Gender\""
                              },
                              "value": "Gender"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_string_calldata_ptr",
                                "typeString": "string calldata"
                              },
                              {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              {
                                "typeIdentifier": "t_rational_10_by_1",
                                "typeString": "int_const 10"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_313674fe02da6ba6141f0057468529291c27e37b2c04aab4f1964d3a33a0e331",
                                "typeString": "literal_string \"Gender\""
                              }
                            ],
                            "id": 1158,
                            "name": "_validateString",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2299,
                            "src": "5090:15:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_string_calldata_ptr_$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (string calldata,uint256,uint256,string memory) pure"
                            }
                          },
                          "id": 1163,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5090:40:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1164,
                        "nodeType": "ExpressionStatement",
                        "src": "5090:40:6"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1166,
                              "name": "description",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1087,
                              "src": "5157:11:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_calldata_ptr",
                                "typeString": "string calldata"
                              }
                            },
                            {
                              "hexValue": "3130",
                              "id": 1167,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5170:2:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_10_by_1",
                                "typeString": "int_const 10"
                              },
                              "value": "10"
                            },
                            {
                              "hexValue": "353030",
                              "id": 1168,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5174:3:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_500_by_1",
                                "typeString": "int_const 500"
                              },
                              "value": "500"
                            },
                            {
                              "hexValue": "4465736372697074696f6e",
                              "id": 1169,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5179:13:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_95e794640ff3efd16bfe738f1a9bf2886d166af549121f57d6e14af6b513f45d",
                                "typeString": "literal_string \"Description\""
                              },
                              "value": "Description"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_string_calldata_ptr",
                                "typeString": "string calldata"
                              },
                              {
                                "typeIdentifier": "t_rational_10_by_1",
                                "typeString": "int_const 10"
                              },
                              {
                                "typeIdentifier": "t_rational_500_by_1",
                                "typeString": "int_const 500"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_95e794640ff3efd16bfe738f1a9bf2886d166af549121f57d6e14af6b513f45d",
                                "typeString": "literal_string \"Description\""
                              }
                            ],
                            "id": 1165,
                            "name": "_validateString",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2299,
                            "src": "5141:15:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_string_calldata_ptr_$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (string calldata,uint256,uint256,string memory) pure"
                            }
                          },
                          "id": 1170,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5141:52:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1171,
                        "nodeType": "ExpressionStatement",
                        "src": "5141:52:6"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1173,
                              "name": "imageUrl",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1089,
                              "src": "5220:8:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_calldata_ptr",
                                "typeString": "string calldata"
                              }
                            },
                            {
                              "hexValue": "3130",
                              "id": 1174,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5230:2:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_10_by_1",
                                "typeString": "int_const 10"
                              },
                              "value": "10"
                            },
                            {
                              "hexValue": "323030",
                              "id": 1175,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5234:3:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_200_by_1",
                                "typeString": "int_const 200"
                              },
                              "value": "200"
                            },
                            {
                              "hexValue": "496d6167652055524c",
                              "id": 1176,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5239:11:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_7ac2011a4b7f65f4e2bfca7d73eb47eba0b5e60f5cb1a2af0efa7c9dda9c781e",
                                "typeString": "literal_string \"Image URL\""
                              },
                              "value": "Image URL"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_string_calldata_ptr",
                                "typeString": "string calldata"
                              },
                              {
                                "typeIdentifier": "t_rational_10_by_1",
                                "typeString": "int_const 10"
                              },
                              {
                                "typeIdentifier": "t_rational_200_by_1",
                                "typeString": "int_const 200"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_7ac2011a4b7f65f4e2bfca7d73eb47eba0b5e60f5cb1a2af0efa7c9dda9c781e",
                                "typeString": "literal_string \"Image URL\""
                              }
                            ],
                            "id": 1172,
                            "name": "_validateString",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2299,
                            "src": "5204:15:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_string_calldata_ptr_$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (string calldata,uint256,uint256,string memory) pure"
                            }
                          },
                          "id": 1177,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5204:47:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1178,
                        "nodeType": "ExpressionStatement",
                        "src": "5204:47:6"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1180,
                              "name": "lastSeenLocation",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1091,
                              "src": "5278:16:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_calldata_ptr",
                                "typeString": "string calldata"
                              }
                            },
                            {
                              "hexValue": "35",
                              "id": 1181,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5296:1:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_5_by_1",
                                "typeString": "int_const 5"
                              },
                              "value": "5"
                            },
                            {
                              "hexValue": "323030",
                              "id": 1182,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5299:3:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_200_by_1",
                                "typeString": "int_const 200"
                              },
                              "value": "200"
                            },
                            {
                              "hexValue": "4c6f636174696f6e",
                              "id": 1183,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5304:10:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_b9088fdf6267db9fe5f171c8aed48ed55286d49df509672bfe1d13cd873bcd76",
                                "typeString": "literal_string \"Location\""
                              },
                              "value": "Location"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_string_calldata_ptr",
                                "typeString": "string calldata"
                              },
                              {
                                "typeIdentifier": "t_rational_5_by_1",
                                "typeString": "int_const 5"
                              },
                              {
                                "typeIdentifier": "t_rational_200_by_1",
                                "typeString": "int_const 200"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_b9088fdf6267db9fe5f171c8aed48ed55286d49df509672bfe1d13cd873bcd76",
                                "typeString": "literal_string \"Location\""
                              }
                            ],
                            "id": 1179,
                            "name": "_validateString",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2299,
                            "src": "5262:15:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_string_calldata_ptr_$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (string calldata,uint256,uint256,string memory) pure"
                            }
                          },
                          "id": 1184,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5262:53:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1185,
                        "nodeType": "ExpressionStatement",
                        "src": "5262:53:6"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1187,
                              "name": "contactName",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1093,
                              "src": "5342:11:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_calldata_ptr",
                                "typeString": "string calldata"
                              }
                            },
                            {
                              "hexValue": "32",
                              "id": 1188,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5355:1:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_2_by_1",
                                "typeString": "int_const 2"
                              },
                              "value": "2"
                            },
                            {
                              "hexValue": "313030",
                              "id": 1189,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5358:3:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_100_by_1",
                                "typeString": "int_const 100"
                              },
                              "value": "100"
                            },
                            {
                              "hexValue": "436f6e74616374206e616d65",
                              "id": 1190,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5363:14:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_6eb595809d4f8de0622b948f2b1d2bfe1153da9a09d6651d28ebd8227d7c825f",
                                "typeString": "literal_string \"Contact name\""
                              },
                              "value": "Contact name"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_string_calldata_ptr",
                                "typeString": "string calldata"
                              },
                              {
                                "typeIdentifier": "t_rational_2_by_1",
                                "typeString": "int_const 2"
                              },
                              {
                                "typeIdentifier": "t_rational_100_by_1",
                                "typeString": "int_const 100"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_6eb595809d4f8de0622b948f2b1d2bfe1153da9a09d6651d28ebd8227d7c825f",
                                "typeString": "literal_string \"Contact name\""
                              }
                            ],
                            "id": 1186,
                            "name": "_validateString",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2299,
                            "src": "5326:15:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_string_calldata_ptr_$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (string calldata,uint256,uint256,string memory) pure"
                            }
                          },
                          "id": 1191,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5326:52:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1192,
                        "nodeType": "ExpressionStatement",
                        "src": "5326:52:6"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1194,
                              "name": "contactPhone",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1095,
                              "src": "5405:12:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_calldata_ptr",
                                "typeString": "string calldata"
                              }
                            },
                            {
                              "hexValue": "35",
                              "id": 1195,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5419:1:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_5_by_1",
                                "typeString": "int_const 5"
                              },
                              "value": "5"
                            },
                            {
                              "hexValue": "3230",
                              "id": 1196,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5422:2:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_20_by_1",
                                "typeString": "int_const 20"
                              },
                              "value": "20"
                            },
                            {
                              "hexValue": "436f6e746163742070686f6e65",
                              "id": 1197,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5426:15:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_4c97485f9fde5d53f0f4c85b4a996a1ea5a29443f1b9304fd7af2eb3a6ee2107",
                                "typeString": "literal_string \"Contact phone\""
                              },
                              "value": "Contact phone"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_string_calldata_ptr",
                                "typeString": "string calldata"
                              },
                              {
                                "typeIdentifier": "t_rational_5_by_1",
                                "typeString": "int_const 5"
                              },
                              {
                                "typeIdentifier": "t_rational_20_by_1",
                                "typeString": "int_const 20"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_4c97485f9fde5d53f0f4c85b4a996a1ea5a29443f1b9304fd7af2eb3a6ee2107",
                                "typeString": "literal_string \"Contact phone\""
                              }
                            ],
                            "id": 1193,
                            "name": "_validateString",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2299,
                            "src": "5389:15:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_string_calldata_ptr_$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (string calldata,uint256,uint256,string memory) pure"
                            }
                          },
                          "id": 1198,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5389:53:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1199,
                        "nodeType": "ExpressionStatement",
                        "src": "5389:53:6"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 1207,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint128",
                                  "typeString": "uint128"
                                },
                                "id": 1203,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 1201,
                                  "name": "sizeCm",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1081,
                                  "src": "5463:6:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint128",
                                    "typeString": "uint128"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": ">=",
                                "rightExpression": {
                                  "hexValue": "3130",
                                  "id": 1202,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "5473:2:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_10_by_1",
                                    "typeString": "int_const 10"
                                  },
                                  "value": "10"
                                },
                                "src": "5463:12:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "&&",
                              "rightExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint128",
                                  "typeString": "uint128"
                                },
                                "id": 1206,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 1204,
                                  "name": "sizeCm",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1081,
                                  "src": "5479:6:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint128",
                                    "typeString": "uint128"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "<=",
                                "rightExpression": {
                                  "hexValue": "323030",
                                  "id": 1205,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "5489:3:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_200_by_1",
                                    "typeString": "int_const 200"
                                  },
                                  "value": "200"
                                },
                                "src": "5479:13:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "src": "5463:29:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "496e76616c69642073697a65",
                              "id": 1208,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5494:14:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_151b9b932514cffea6d6fb8ef0dc06f3ba8d7fdd73eacee7d06d663fcfd3d8d0",
                                "typeString": "literal_string \"Invalid size\""
                              },
                              "value": "Invalid size"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_151b9b932514cffea6d6fb8ef0dc06f3ba8d7fdd73eacee7d06d663fcfd3d8d0",
                                "typeString": "literal_string \"Invalid size\""
                              }
                            ],
                            "id": 1200,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "5455:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1209,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5455:54:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1210,
                        "nodeType": "ExpressionStatement",
                        "src": "5455:54:6"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 1218,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint128",
                                  "typeString": "uint128"
                                },
                                "id": 1214,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 1212,
                                  "name": "ageMonths",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1083,
                                  "src": "5528:9:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint128",
                                    "typeString": "uint128"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": ">=",
                                "rightExpression": {
                                  "hexValue": "31",
                                  "id": 1213,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "5541:1:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_1_by_1",
                                    "typeString": "int_const 1"
                                  },
                                  "value": "1"
                                },
                                "src": "5528:14:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "&&",
                              "rightExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint128",
                                  "typeString": "uint128"
                                },
                                "id": 1217,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 1215,
                                  "name": "ageMonths",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1083,
                                  "src": "5546:9:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint128",
                                    "typeString": "uint128"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "<=",
                                "rightExpression": {
                                  "hexValue": "323430",
                                  "id": 1216,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "5559:3:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_240_by_1",
                                    "typeString": "int_const 240"
                                  },
                                  "value": "240"
                                },
                                "src": "5546:16:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "src": "5528:34:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "496e76616c696420616765",
                              "id": 1219,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5564:13:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_f1c59e3116c3ac1aa457890867ed59455e27f7c2097445123220e9c87ffa42bc",
                                "typeString": "literal_string \"Invalid age\""
                              },
                              "value": "Invalid age"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_f1c59e3116c3ac1aa457890867ed59455e27f7c2097445123220e9c87ffa42bc",
                                "typeString": "literal_string \"Invalid age\""
                              }
                            ],
                            "id": 1211,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "5520:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1220,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5520:58:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1221,
                        "nodeType": "ExpressionStatement",
                        "src": "5520:58:6"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 1224,
                                  "name": "contactEmail",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1097,
                                  "src": "5611:12:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_calldata_ptr",
                                    "typeString": "string calldata"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_string_calldata_ptr",
                                    "typeString": "string calldata"
                                  }
                                ],
                                "id": 1223,
                                "name": "_isValidEmail",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2405,
                                "src": "5597:13:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_string_memory_ptr_$returns$_t_bool_$",
                                  "typeString": "function (string memory) pure returns (bool)"
                                }
                              },
                              "id": 1225,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "5597:27:6",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "496e76616c696420656d61696c",
                              "id": 1226,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5626:15:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_a741c3714306c2e9d91e0760fb244320a9998cbebff3ad4e084bd0ebde6a1fcd",
                                "typeString": "literal_string \"Invalid email\""
                              },
                              "value": "Invalid email"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_a741c3714306c2e9d91e0760fb244320a9998cbebff3ad4e084bd0ebde6a1fcd",
                                "typeString": "literal_string \"Invalid email\""
                              }
                            ],
                            "id": 1222,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "5589:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1227,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5589:53:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1228,
                        "nodeType": "ExpressionStatement",
                        "src": "5589:53:6"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          },
                          "id": 1231,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1229,
                            "name": "gDollarBounty",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1101,
                            "src": "5659:13:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 1230,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "5675:1:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "5659:17:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1255,
                        "nodeType": "IfStatement",
                        "src": "5655:347:6",
                        "trueBody": {
                          "id": 1254,
                          "nodeType": "Block",
                          "src": "5678:324:6",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "expression": {
                                          "id": 1237,
                                          "name": "msg",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": -15,
                                          "src": "5778:3:6",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_magic_message",
                                            "typeString": "msg"
                                          }
                                        },
                                        "id": 1238,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberLocation": "5782:6:6",
                                        "memberName": "sender",
                                        "nodeType": "MemberAccess",
                                        "src": "5778:10:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "id": 1241,
                                            "name": "this",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": -28,
                                            "src": "5819:4:6",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_contract$_PetTrace_$2406",
                                              "typeString": "contract PetTrace"
                                            }
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_contract$_PetTrace_$2406",
                                              "typeString": "contract PetTrace"
                                            }
                                          ],
                                          "id": 1240,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "nodeType": "ElementaryTypeNameExpression",
                                          "src": "5811:7:6",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_type$_t_address_$",
                                            "typeString": "type(address)"
                                          },
                                          "typeName": {
                                            "id": 1239,
                                            "name": "address",
                                            "nodeType": "ElementaryTypeName",
                                            "src": "5811:7:6",
                                            "typeDescriptions": {}
                                          }
                                        },
                                        "id": 1242,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "typeConversion",
                                        "lValueRequested": false,
                                        "nameLocations": [],
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "5811:13:6",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      {
                                        "id": 1243,
                                        "name": "gDollarBounty",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1101,
                                        "src": "5847:13:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint128",
                                          "typeString": "uint128"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        },
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        },
                                        {
                                          "typeIdentifier": "t_uint128",
                                          "typeString": "uint128"
                                        }
                                      ],
                                      "expression": {
                                        "arguments": [
                                          {
                                            "id": 1234,
                                            "name": "GDOLLAR_ADDRESS",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 877,
                                            "src": "5726:15:6",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            }
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            }
                                          ],
                                          "id": 1233,
                                          "name": "IERC20",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 852,
                                          "src": "5719:6:6",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_type$_t_contract$_IERC20_$852_$",
                                            "typeString": "type(contract IERC20)"
                                          }
                                        },
                                        "id": 1235,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "typeConversion",
                                        "lValueRequested": false,
                                        "nameLocations": [],
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "5719:23:6",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_IERC20_$852",
                                          "typeString": "contract IERC20"
                                        }
                                      },
                                      "id": 1236,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberLocation": "5743:12:6",
                                      "memberName": "transferFrom",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 835,
                                      "src": "5719:36:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                                        "typeString": "function (address,address,uint256) external returns (bool)"
                                      }
                                    },
                                    "id": 1244,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "5719:160:6",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  {
                                    "hexValue": "4724207472616e73666572206661696c6564",
                                    "id": 1245,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "5898:20:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_501ff887f1107bcb11b6b08e6c2c3cea41fcde03d13159b4456a1901fab7daf0",
                                      "typeString": "literal_string \"G$ transfer failed\""
                                    },
                                    "value": "G$ transfer failed"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    },
                                    {
                                      "typeIdentifier": "t_stringliteral_501ff887f1107bcb11b6b08e6c2c3cea41fcde03d13159b4456a1901fab7daf0",
                                      "typeString": "literal_string \"G$ transfer failed\""
                                    }
                                  ],
                                  "id": 1232,
                                  "name": "require",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [
                                    -18,
                                    -18,
                                    -18
                                  ],
                                  "referencedDeclaration": -18,
                                  "src": "5693:7:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                    "typeString": "function (bool,string memory) pure"
                                  }
                                },
                                "id": 1246,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5693:240:6",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1247,
                              "nodeType": "ExpressionStatement",
                              "src": "5693:240:6"
                            },
                            {
                              "expression": {
                                "id": 1252,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "baseExpression": {
                                    "id": 1248,
                                    "name": "escrowedGDOLLAR",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 903,
                                    "src": "5948:15:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                                      "typeString": "mapping(uint256 => uint256)"
                                    }
                                  },
                                  "id": 1250,
                                  "indexExpression": {
                                    "id": 1249,
                                    "name": "nextPetId",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 890,
                                    "src": "5964:9:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "5948:26:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "id": 1251,
                                  "name": "gDollarBounty",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1101,
                                  "src": "5977:13:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint128",
                                    "typeString": "uint128"
                                  }
                                },
                                "src": "5948:42:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1253,
                              "nodeType": "ExpressionStatement",
                              "src": "5948:42:6"
                            }
                          ]
                        }
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          },
                          "id": 1258,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1256,
                            "name": "cUSDBounty",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1099,
                            "src": "6049:10:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 1257,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "6062:1:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "6049:14:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1282,
                        "nodeType": "IfStatement",
                        "src": "6045:334:6",
                        "trueBody": {
                          "id": 1281,
                          "nodeType": "Block",
                          "src": "6065:314:6",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "expression": {
                                          "id": 1264,
                                          "name": "msg",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": -15,
                                          "src": "6162:3:6",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_magic_message",
                                            "typeString": "msg"
                                          }
                                        },
                                        "id": 1265,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberLocation": "6166:6:6",
                                        "memberName": "sender",
                                        "nodeType": "MemberAccess",
                                        "src": "6162:10:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "id": 1268,
                                            "name": "this",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": -28,
                                            "src": "6203:4:6",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_contract$_PetTrace_$2406",
                                              "typeString": "contract PetTrace"
                                            }
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_contract$_PetTrace_$2406",
                                              "typeString": "contract PetTrace"
                                            }
                                          ],
                                          "id": 1267,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "nodeType": "ElementaryTypeNameExpression",
                                          "src": "6195:7:6",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_type$_t_address_$",
                                            "typeString": "type(address)"
                                          },
                                          "typeName": {
                                            "id": 1266,
                                            "name": "address",
                                            "nodeType": "ElementaryTypeName",
                                            "src": "6195:7:6",
                                            "typeDescriptions": {}
                                          }
                                        },
                                        "id": 1269,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "typeConversion",
                                        "lValueRequested": false,
                                        "nameLocations": [],
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "6195:13:6",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      {
                                        "id": 1270,
                                        "name": "cUSDBounty",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1099,
                                        "src": "6231:10:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint128",
                                          "typeString": "uint128"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        },
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        },
                                        {
                                          "typeIdentifier": "t_uint128",
                                          "typeString": "uint128"
                                        }
                                      ],
                                      "expression": {
                                        "arguments": [
                                          {
                                            "id": 1261,
                                            "name": "CUSD_ADDRESS",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 874,
                                            "src": "6113:12:6",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            }
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            }
                                          ],
                                          "id": 1260,
                                          "name": "IERC20",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 852,
                                          "src": "6106:6:6",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_type$_t_contract$_IERC20_$852_$",
                                            "typeString": "type(contract IERC20)"
                                          }
                                        },
                                        "id": 1262,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "typeConversion",
                                        "lValueRequested": false,
                                        "nameLocations": [],
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "6106:20:6",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_IERC20_$852",
                                          "typeString": "contract IERC20"
                                        }
                                      },
                                      "id": 1263,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberLocation": "6127:12:6",
                                      "memberName": "transferFrom",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 835,
                                      "src": "6106:33:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                                        "typeString": "function (address,address,uint256) external returns (bool)"
                                      }
                                    },
                                    "id": 1271,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "6106:154:6",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  {
                                    "hexValue": "63555344207472616e73666572206661696c6564",
                                    "id": 1272,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "6279:22:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_b150cfd0bce3bd0668ff5add238ec9ce843a498f13c42569be27b7c2260f386f",
                                      "typeString": "literal_string \"cUSD transfer failed\""
                                    },
                                    "value": "cUSD transfer failed"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    },
                                    {
                                      "typeIdentifier": "t_stringliteral_b150cfd0bce3bd0668ff5add238ec9ce843a498f13c42569be27b7c2260f386f",
                                      "typeString": "literal_string \"cUSD transfer failed\""
                                    }
                                  ],
                                  "id": 1259,
                                  "name": "require",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [
                                    -18,
                                    -18,
                                    -18
                                  ],
                                  "referencedDeclaration": -18,
                                  "src": "6080:7:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                    "typeString": "function (bool,string memory) pure"
                                  }
                                },
                                "id": 1273,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "6080:236:6",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1274,
                              "nodeType": "ExpressionStatement",
                              "src": "6080:236:6"
                            },
                            {
                              "expression": {
                                "id": 1279,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "baseExpression": {
                                    "id": 1275,
                                    "name": "escrowedCUSD",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 899,
                                    "src": "6331:12:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                                      "typeString": "mapping(uint256 => uint256)"
                                    }
                                  },
                                  "id": 1277,
                                  "indexExpression": {
                                    "id": 1276,
                                    "name": "nextPetId",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 890,
                                    "src": "6344:9:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "6331:23:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "id": 1278,
                                  "name": "cUSDBounty",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1099,
                                  "src": "6357:10:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint128",
                                    "typeString": "uint128"
                                  }
                                },
                                "src": "6331:36:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1280,
                              "nodeType": "ExpressionStatement",
                              "src": "6331:36:6"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "id": 1321,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 1283,
                              "name": "pets",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 895,
                              "src": "6421:4:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Pet_$955_storage_$",
                                "typeString": "mapping(uint256 => struct PetTrace.Pet storage ref)"
                              }
                            },
                            "id": 1285,
                            "indexExpression": {
                              "id": 1284,
                              "name": "nextPetId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 890,
                              "src": "6426:9:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "6421:15:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Pet_$955_storage",
                              "typeString": "struct PetTrace.Pet storage ref"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 1287,
                                "name": "nextPetId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 890,
                                "src": "6462:9:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "arguments": [
                                  {
                                    "expression": {
                                      "id": 1290,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -15,
                                      "src": "6501:3:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 1291,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "6505:6:6",
                                    "memberName": "sender",
                                    "nodeType": "MemberAccess",
                                    "src": "6501:10:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 1289,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "6493:8:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_payable_$",
                                    "typeString": "type(address payable)"
                                  },
                                  "typeName": {
                                    "id": 1288,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "6493:8:6",
                                    "stateMutability": "payable",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 1292,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "6493:19:6",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              {
                                "id": 1293,
                                "name": "name",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1075,
                                "src": "6533:4:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_calldata_ptr",
                                  "typeString": "string calldata"
                                }
                              },
                              {
                                "id": 1294,
                                "name": "breed",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1077,
                                "src": "6559:5:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_calldata_ptr",
                                  "typeString": "string calldata"
                                }
                              },
                              {
                                "id": 1295,
                                "name": "gender",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1079,
                                "src": "6587:6:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_calldata_ptr",
                                  "typeString": "string calldata"
                                }
                              },
                              {
                                "id": 1296,
                                "name": "sizeCm",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1081,
                                "src": "6616:6:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint128",
                                  "typeString": "uint128"
                                }
                              },
                              {
                                "id": 1297,
                                "name": "ageMonths",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1083,
                                "src": "6648:9:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint128",
                                  "typeString": "uint128"
                                }
                              },
                              {
                                "id": 1298,
                                "name": "dateTimeLost",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1085,
                                "src": "6686:12:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_calldata_ptr",
                                  "typeString": "string calldata"
                                }
                              },
                              {
                                "id": 1299,
                                "name": "description",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1087,
                                "src": "6726:11:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_calldata_ptr",
                                  "typeString": "string calldata"
                                }
                              },
                              {
                                "id": 1300,
                                "name": "imageUrl",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1089,
                                "src": "6762:8:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_calldata_ptr",
                                  "typeString": "string calldata"
                                }
                              },
                              {
                                "id": 1301,
                                "name": "lastSeenLocation",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1091,
                                "src": "6803:16:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_calldata_ptr",
                                  "typeString": "string calldata"
                                }
                              },
                              {
                                "id": 1302,
                                "name": "contactName",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1093,
                                "src": "6847:11:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_calldata_ptr",
                                  "typeString": "string calldata"
                                }
                              },
                              {
                                "id": 1303,
                                "name": "contactPhone",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1095,
                                "src": "6887:12:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_calldata_ptr",
                                  "typeString": "string calldata"
                                }
                              },
                              {
                                "id": 1304,
                                "name": "contactEmail",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1097,
                                "src": "6928:12:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_calldata_ptr",
                                  "typeString": "string calldata"
                                }
                              },
                              {
                                "arguments": [
                                  {
                                    "expression": {
                                      "id": 1307,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -15,
                                      "src": "6975:3:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 1308,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "6979:5:6",
                                    "memberName": "value",
                                    "nodeType": "MemberAccess",
                                    "src": "6975:9:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 1306,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "6967:7:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_uint128_$",
                                    "typeString": "type(uint128)"
                                  },
                                  "typeName": {
                                    "id": 1305,
                                    "name": "uint128",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "6967:7:6",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 1309,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "6967:18:6",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint128",
                                  "typeString": "uint128"
                                }
                              },
                              {
                                "id": 1310,
                                "name": "cUSDBounty",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1099,
                                "src": "7012:10:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint128",
                                  "typeString": "uint128"
                                }
                              },
                              {
                                "id": 1311,
                                "name": "gDollarBounty",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1101,
                                "src": "7052:13:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint128",
                                  "typeString": "uint128"
                                }
                              },
                              {
                                "expression": {
                                  "id": 1312,
                                  "name": "PetStatus",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 911,
                                  "src": "7088:9:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_enum$_PetStatus_$911_$",
                                    "typeString": "type(enum PetTrace.PetStatus)"
                                  }
                                },
                                "id": 1313,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberLocation": "7098:6:6",
                                "memberName": "Active",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 908,
                                "src": "7088:16:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_PetStatus_$911",
                                  "typeString": "enum PetTrace.PetStatus"
                                }
                              },
                              {
                                "hexValue": "66616c7365",
                                "id": 1314,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "bool",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "7135:5:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "value": "false"
                              },
                              {
                                "hexValue": "66616c7365",
                                "id": 1315,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "bool",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "7172:5:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "value": "false"
                              },
                              {
                                "arguments": [
                                  {
                                    "hexValue": "30",
                                    "id": 1318,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "7208:1:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "id": 1317,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "7200:7:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 1316,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "7200:7:6",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 1319,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "7200:10:6",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                },
                                {
                                  "typeIdentifier": "t_string_calldata_ptr",
                                  "typeString": "string calldata"
                                },
                                {
                                  "typeIdentifier": "t_string_calldata_ptr",
                                  "typeString": "string calldata"
                                },
                                {
                                  "typeIdentifier": "t_string_calldata_ptr",
                                  "typeString": "string calldata"
                                },
                                {
                                  "typeIdentifier": "t_uint128",
                                  "typeString": "uint128"
                                },
                                {
                                  "typeIdentifier": "t_uint128",
                                  "typeString": "uint128"
                                },
                                {
                                  "typeIdentifier": "t_string_calldata_ptr",
                                  "typeString": "string calldata"
                                },
                                {
                                  "typeIdentifier": "t_string_calldata_ptr",
                                  "typeString": "string calldata"
                                },
                                {
                                  "typeIdentifier": "t_string_calldata_ptr",
                                  "typeString": "string calldata"
                                },
                                {
                                  "typeIdentifier": "t_string_calldata_ptr",
                                  "typeString": "string calldata"
                                },
                                {
                                  "typeIdentifier": "t_string_calldata_ptr",
                                  "typeString": "string calldata"
                                },
                                {
                                  "typeIdentifier": "t_string_calldata_ptr",
                                  "typeString": "string calldata"
                                },
                                {
                                  "typeIdentifier": "t_string_calldata_ptr",
                                  "typeString": "string calldata"
                                },
                                {
                                  "typeIdentifier": "t_uint128",
                                  "typeString": "uint128"
                                },
                                {
                                  "typeIdentifier": "t_uint128",
                                  "typeString": "uint128"
                                },
                                {
                                  "typeIdentifier": "t_uint128",
                                  "typeString": "uint128"
                                },
                                {
                                  "typeIdentifier": "t_enum$_PetStatus_$911",
                                  "typeString": "enum PetTrace.PetStatus"
                                },
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 1286,
                              "name": "Pet",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 955,
                              "src": "6439:3:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_struct$_Pet_$955_storage_ptr_$",
                                "typeString": "type(struct PetTrace.Pet storage pointer)"
                              }
                            },
                            "id": 1320,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "structConstructorCall",
                            "lValueRequested": false,
                            "nameLocations": [
                              "6458:2:6",
                              "6486:5:6",
                              "6527:4:6",
                              "6552:5:6",
                              "6579:6:6",
                              "6608:6:6",
                              "6637:9:6",
                              "6672:12:6",
                              "6713:11:6",
                              "6752:8:6",
                              "6785:16:6",
                              "6834:11:6",
                              "6873:12:6",
                              "6914:12:6",
                              "6955:10:6",
                              "7000:10:6",
                              "7037:13:6",
                              "7080:6:6",
                              "7119:14:6",
                              "7155:15:6",
                              "7192:6:6"
                            ],
                            "names": [
                              "id",
                              "owner",
                              "name",
                              "breed",
                              "gender",
                              "sizeCm",
                              "ageMonths",
                              "dateTimeLost",
                              "description",
                              "imageUrl",
                              "lastSeenLocation",
                              "contactName",
                              "contactPhone",
                              "contactEmail",
                              "celoBounty",
                              "cUSDBounty",
                              "gDollarBounty",
                              "status",
                              "ownerConfirmed",
                              "finderConfirmed",
                              "finder"
                            ],
                            "nodeType": "FunctionCall",
                            "src": "6439:783:6",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Pet_$955_memory_ptr",
                              "typeString": "struct PetTrace.Pet memory"
                            }
                          },
                          "src": "6421:801:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Pet_$955_storage",
                            "typeString": "struct PetTrace.Pet storage ref"
                          }
                        },
                        "id": 1322,
                        "nodeType": "ExpressionStatement",
                        "src": "6421:801:6"
                      },
                      {
                        "expression": {
                          "id": 1328,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 1323,
                              "name": "postTime",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 907,
                              "src": "7235:8:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                                "typeString": "mapping(uint256 => uint256)"
                              }
                            },
                            "id": 1325,
                            "indexExpression": {
                              "id": 1324,
                              "name": "nextPetId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 890,
                              "src": "7244:9:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "7235:19:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "id": 1326,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -4,
                              "src": "7257:5:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 1327,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "7263:9:6",
                            "memberName": "timestamp",
                            "nodeType": "MemberAccess",
                            "src": "7257:15:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "7235:37:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1329,
                        "nodeType": "ExpressionStatement",
                        "src": "7235:37:6"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 1331,
                              "name": "nextPetId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 890,
                              "src": "7298:9:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "expression": {
                                "id": 1332,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "7309:3:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1333,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "7313:6:6",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "7309:10:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 1330,
                            "name": "PetPosted",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1021,
                            "src": "7288:9:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_address_$returns$__$",
                              "typeString": "function (uint256,address)"
                            }
                          },
                          "id": 1334,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7288:32:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1335,
                        "nodeType": "EmitStatement",
                        "src": "7283:37:6"
                      },
                      {
                        "expression": {
                          "id": 1337,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "++",
                          "prefix": false,
                          "src": "7331:11:6",
                          "subExpression": {
                            "id": 1336,
                            "name": "nextPetId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 890,
                            "src": "7331:9:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1338,
                        "nodeType": "ExpressionStatement",
                        "src": "7331:11:6"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1073,
                    "nodeType": "StructuredDocumentation",
                    "src": "3937:120:6",
                    "text": " @notice Post a lost pet with optional bounty\n @dev Creates new pet record and escrows bounty"
                  },
                  "functionSelector": "ce2ed0e2",
                  "id": 1340,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 1104,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 1103,
                        "name": "nonReentrant",
                        "nameLocations": [
                          "4589:12:6"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 973,
                        "src": "4589:12:6"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "4589:12:6"
                    }
                  ],
                  "name": "postLostPet",
                  "nameLocation": "4072:11:6",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1102,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1075,
                        "mutability": "mutable",
                        "name": "name",
                        "nameLocation": "4110:4:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 1340,
                        "src": "4094:20:6",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 1074,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "4094:6:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1077,
                        "mutability": "mutable",
                        "name": "breed",
                        "nameLocation": "4141:5:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 1340,
                        "src": "4125:21:6",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 1076,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "4125:6:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1079,
                        "mutability": "mutable",
                        "name": "gender",
                        "nameLocation": "4173:6:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 1340,
                        "src": "4157:22:6",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 1078,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "4157:6:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1081,
                        "mutability": "mutable",
                        "name": "sizeCm",
                        "nameLocation": "4198:6:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 1340,
                        "src": "4190:14:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        "typeName": {
                          "id": 1080,
                          "name": "uint128",
                          "nodeType": "ElementaryTypeName",
                          "src": "4190:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1083,
                        "mutability": "mutable",
                        "name": "ageMonths",
                        "nameLocation": "4223:9:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 1340,
                        "src": "4215:17:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        "typeName": {
                          "id": 1082,
                          "name": "uint128",
                          "nodeType": "ElementaryTypeName",
                          "src": "4215:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1085,
                        "mutability": "mutable",
                        "name": "dateTimeLost",
                        "nameLocation": "4259:12:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 1340,
                        "src": "4243:28:6",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 1084,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "4243:6:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1087,
                        "mutability": "mutable",
                        "name": "description",
                        "nameLocation": "4298:11:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 1340,
                        "src": "4282:27:6",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 1086,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "4282:6:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1089,
                        "mutability": "mutable",
                        "name": "imageUrl",
                        "nameLocation": "4336:8:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 1340,
                        "src": "4320:24:6",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 1088,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "4320:6:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1091,
                        "mutability": "mutable",
                        "name": "lastSeenLocation",
                        "nameLocation": "4371:16:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 1340,
                        "src": "4355:32:6",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 1090,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "4355:6:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1093,
                        "mutability": "mutable",
                        "name": "contactName",
                        "nameLocation": "4414:11:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 1340,
                        "src": "4398:27:6",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 1092,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "4398:6:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1095,
                        "mutability": "mutable",
                        "name": "contactPhone",
                        "nameLocation": "4452:12:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 1340,
                        "src": "4436:28:6",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 1094,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "4436:6:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1097,
                        "mutability": "mutable",
                        "name": "contactEmail",
                        "nameLocation": "4491:12:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 1340,
                        "src": "4475:28:6",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 1096,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "4475:6:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1099,
                        "mutability": "mutable",
                        "name": "cUSDBounty",
                        "nameLocation": "4522:10:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 1340,
                        "src": "4514:18:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        "typeName": {
                          "id": 1098,
                          "name": "uint128",
                          "nodeType": "ElementaryTypeName",
                          "src": "4514:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1101,
                        "mutability": "mutable",
                        "name": "gDollarBounty",
                        "nameLocation": "4551:13:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 1340,
                        "src": "4543:21:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        "typeName": {
                          "id": 1100,
                          "name": "uint128",
                          "nodeType": "ElementaryTypeName",
                          "src": "4543:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4083:488:6"
                  },
                  "returnParameters": {
                    "id": 1105,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "4602:0:6"
                  },
                  "scope": 2406,
                  "src": "4063:3287:6",
                  "stateMutability": "payable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 1413,
                    "nodeType": "Block",
                    "src": "7535:459:6",
                    "statements": [
                      {
                        "assignments": [
                          1353
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1353,
                            "mutability": "mutable",
                            "name": "pet",
                            "nameLocation": "7558:3:6",
                            "nodeType": "VariableDeclaration",
                            "scope": 1413,
                            "src": "7546:15:6",
                            "stateVariable": false,
                            "storageLocation": "storage",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Pet_$955_storage_ptr",
                              "typeString": "struct PetTrace.Pet"
                            },
                            "typeName": {
                              "id": 1352,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 1351,
                                "name": "Pet",
                                "nameLocations": [
                                  "7546:3:6"
                                ],
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 955,
                                "src": "7546:3:6"
                              },
                              "referencedDeclaration": 955,
                              "src": "7546:3:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Pet_$955_storage_ptr",
                                "typeString": "struct PetTrace.Pet"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1357,
                        "initialValue": {
                          "baseExpression": {
                            "id": 1354,
                            "name": "pets",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 895,
                            "src": "7564:4:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Pet_$955_storage_$",
                              "typeString": "mapping(uint256 => struct PetTrace.Pet storage ref)"
                            }
                          },
                          "id": 1356,
                          "indexExpression": {
                            "id": 1355,
                            "name": "petId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1343,
                            "src": "7569:5:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "7564:11:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Pet_$955_storage",
                            "typeString": "struct PetTrace.Pet storage ref"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "7546:29:6"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_enum$_PetStatus_$911",
                                "typeString": "enum PetTrace.PetStatus"
                              },
                              "id": 1363,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 1359,
                                  "name": "pet",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1353,
                                  "src": "7594:3:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Pet_$955_storage_ptr",
                                    "typeString": "struct PetTrace.Pet storage pointer"
                                  }
                                },
                                "id": 1360,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "7598:6:6",
                                "memberName": "status",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 948,
                                "src": "7594:10:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_PetStatus_$911",
                                  "typeString": "enum PetTrace.PetStatus"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "expression": {
                                  "id": 1361,
                                  "name": "PetStatus",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 911,
                                  "src": "7608:9:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_enum$_PetStatus_$911_$",
                                    "typeString": "type(enum PetTrace.PetStatus)"
                                  }
                                },
                                "id": 1362,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberLocation": "7618:6:6",
                                "memberName": "Active",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 908,
                                "src": "7608:16:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_PetStatus_$911",
                                  "typeString": "enum PetTrace.PetStatus"
                                }
                              },
                              "src": "7594:30:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "506574206e6f7420616374697665",
                              "id": 1364,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7626:16:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_37d04366ffa9178c21ab2cd5ca80d2f609b9cec1fbe26c4f40230fdc34f5a3b9",
                                "typeString": "literal_string \"Pet not active\""
                              },
                              "value": "Pet not active"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_37d04366ffa9178c21ab2cd5ca80d2f609b9cec1fbe26c4f40230fdc34f5a3b9",
                                "typeString": "literal_string \"Pet not active\""
                              }
                            ],
                            "id": 1358,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "7586:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1365,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7586:57:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1366,
                        "nodeType": "ExpressionStatement",
                        "src": "7586:57:6"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 1372,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 1368,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "7664:3:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 1369,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "7668:6:6",
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "7664:10:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "expression": {
                                  "id": 1370,
                                  "name": "pet",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1353,
                                  "src": "7678:3:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Pet_$955_storage_ptr",
                                    "typeString": "struct PetTrace.Pet storage pointer"
                                  }
                                },
                                "id": 1371,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "7682:5:6",
                                "memberName": "owner",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 915,
                                "src": "7678:9:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              "src": "7664:23:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4f776e65722063616e6e6f742062652066696e646572",
                              "id": 1373,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7689:24:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_52f331c4b2130167151119e3b5f338ee025b863f1b8904ce2498fd79a771d99e",
                                "typeString": "literal_string \"Owner cannot be finder\""
                              },
                              "value": "Owner cannot be finder"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_52f331c4b2130167151119e3b5f338ee025b863f1b8904ce2498fd79a771d99e",
                                "typeString": "literal_string \"Owner cannot be finder\""
                              }
                            ],
                            "id": 1367,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "7656:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1374,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7656:58:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1375,
                        "nodeType": "ExpressionStatement",
                        "src": "7656:58:6"
                      },
                      {
                        "expression": {
                          "id": 1381,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 1376,
                              "name": "pet",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1353,
                              "src": "7727:3:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Pet_$955_storage_ptr",
                                "typeString": "struct PetTrace.Pet storage pointer"
                              }
                            },
                            "id": 1378,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberLocation": "7731:6:6",
                            "memberName": "finder",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 954,
                            "src": "7727:10:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "id": 1379,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "7740:3:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 1380,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "7744:6:6",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "7740:10:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "7727:23:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 1382,
                        "nodeType": "ExpressionStatement",
                        "src": "7727:23:6"
                      },
                      {
                        "expression": {
                          "id": 1387,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 1383,
                              "name": "pet",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1353,
                              "src": "7761:3:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Pet_$955_storage_ptr",
                                "typeString": "struct PetTrace.Pet storage pointer"
                              }
                            },
                            "id": 1385,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberLocation": "7765:15:6",
                            "memberName": "finderConfirmed",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 952,
                            "src": "7761:19:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "74727565",
                            "id": 1386,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "7783:4:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "7761:26:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1388,
                        "nodeType": "ExpressionStatement",
                        "src": "7761:26:6"
                      },
                      {
                        "condition": {
                          "expression": {
                            "id": 1389,
                            "name": "pet",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1353,
                            "src": "7804:3:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Pet_$955_storage_ptr",
                              "typeString": "struct PetTrace.Pet storage pointer"
                            }
                          },
                          "id": 1390,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "7808:14:6",
                          "memberName": "ownerConfirmed",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 950,
                          "src": "7804:18:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1405,
                        "nodeType": "IfStatement",
                        "src": "7800:126:6",
                        "trueBody": {
                          "id": 1404,
                          "nodeType": "Block",
                          "src": "7824:102:6",
                          "statements": [
                            {
                              "expression": {
                                "id": 1396,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "expression": {
                                    "id": 1391,
                                    "name": "pet",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1353,
                                    "src": "7839:3:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Pet_$955_storage_ptr",
                                      "typeString": "struct PetTrace.Pet storage pointer"
                                    }
                                  },
                                  "id": 1393,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "memberLocation": "7843:6:6",
                                  "memberName": "status",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 948,
                                  "src": "7839:10:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_enum$_PetStatus_$911",
                                    "typeString": "enum PetTrace.PetStatus"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "expression": {
                                    "id": 1394,
                                    "name": "PetStatus",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 911,
                                    "src": "7852:9:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_enum$_PetStatus_$911_$",
                                      "typeString": "type(enum PetTrace.PetStatus)"
                                    }
                                  },
                                  "id": 1395,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberLocation": "7862:5:6",
                                  "memberName": "Found",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 909,
                                  "src": "7852:15:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_enum$_PetStatus_$911",
                                    "typeString": "enum PetTrace.PetStatus"
                                  }
                                },
                                "src": "7839:28:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_PetStatus_$911",
                                  "typeString": "enum PetTrace.PetStatus"
                                }
                              },
                              "id": 1397,
                              "nodeType": "ExpressionStatement",
                              "src": "7839:28:6"
                            },
                            {
                              "eventCall": {
                                "arguments": [
                                  {
                                    "id": 1399,
                                    "name": "petId",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1343,
                                    "src": "7896:5:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  {
                                    "expression": {
                                      "id": 1400,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -15,
                                      "src": "7903:3:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 1401,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "7907:6:6",
                                    "memberName": "sender",
                                    "nodeType": "MemberAccess",
                                    "src": "7903:10:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 1398,
                                  "name": "PetFound",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1027,
                                  "src": "7887:8:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_address_$returns$__$",
                                    "typeString": "function (uint256,address)"
                                  }
                                },
                                "id": 1402,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "7887:27:6",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1403,
                              "nodeType": "EmitStatement",
                              "src": "7882:32:6"
                            }
                          ]
                        }
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 1407,
                              "name": "petId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1343,
                              "src": "7961:5:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "expression": {
                                "id": 1408,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "7968:3:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1409,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "7972:6:6",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "7968:10:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "hexValue": "66616c7365",
                              "id": 1410,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "bool",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7980:5:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "value": "false"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 1406,
                            "name": "ConfirmationAdded",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1047,
                            "src": "7943:17:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_address_$_t_bool_$returns$__$",
                              "typeString": "function (uint256,address,bool)"
                            }
                          },
                          "id": 1411,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7943:43:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1412,
                        "nodeType": "EmitStatement",
                        "src": "7938:48:6"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1341,
                    "nodeType": "StructuredDocumentation",
                    "src": "7358:96:6",
                    "text": " @notice Mark pet as found\n @dev Can be called by anyone except owner"
                  },
                  "functionSelector": "b3035b64",
                  "id": 1414,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "arguments": [
                        {
                          "id": 1346,
                          "name": "petId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1343,
                          "src": "7515:5:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 1347,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 1345,
                        "name": "petExists",
                        "nameLocations": [
                          "7505:9:6"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 1003,
                        "src": "7505:9:6"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "7505:16:6"
                    },
                    {
                      "id": 1349,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 1348,
                        "name": "nonReentrant",
                        "nameLocations": [
                          "7522:12:6"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 973,
                        "src": "7522:12:6"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "7522:12:6"
                    }
                  ],
                  "name": "markAsFound",
                  "nameLocation": "7469:11:6",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1344,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1343,
                        "mutability": "mutable",
                        "name": "petId",
                        "nameLocation": "7489:5:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 1414,
                        "src": "7481:13:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1342,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "7481:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "7480:15:6"
                  },
                  "returnParameters": {
                    "id": 1350,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "7535:0:6"
                  },
                  "scope": 2406,
                  "src": "7460:534:6",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 1482,
                    "nodeType": "Block",
                    "src": "8229:421:6",
                    "statements": [
                      {
                        "assignments": [
                          1427
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1427,
                            "mutability": "mutable",
                            "name": "pet",
                            "nameLocation": "8252:3:6",
                            "nodeType": "VariableDeclaration",
                            "scope": 1482,
                            "src": "8240:15:6",
                            "stateVariable": false,
                            "storageLocation": "storage",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Pet_$955_storage_ptr",
                              "typeString": "struct PetTrace.Pet"
                            },
                            "typeName": {
                              "id": 1426,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 1425,
                                "name": "Pet",
                                "nameLocations": [
                                  "8240:3:6"
                                ],
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 955,
                                "src": "8240:3:6"
                              },
                              "referencedDeclaration": 955,
                              "src": "8240:3:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Pet_$955_storage_ptr",
                                "typeString": "struct PetTrace.Pet"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1431,
                        "initialValue": {
                          "baseExpression": {
                            "id": 1428,
                            "name": "pets",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 895,
                            "src": "8258:4:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Pet_$955_storage_$",
                              "typeString": "mapping(uint256 => struct PetTrace.Pet storage ref)"
                            }
                          },
                          "id": 1430,
                          "indexExpression": {
                            "id": 1429,
                            "name": "petId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1417,
                            "src": "8263:5:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "8258:11:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Pet_$955_storage",
                            "typeString": "struct PetTrace.Pet storage ref"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "8240:29:6"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_enum$_PetStatus_$911",
                                "typeString": "enum PetTrace.PetStatus"
                              },
                              "id": 1437,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 1433,
                                  "name": "pet",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1427,
                                  "src": "8288:3:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Pet_$955_storage_ptr",
                                    "typeString": "struct PetTrace.Pet storage pointer"
                                  }
                                },
                                "id": 1434,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "8292:6:6",
                                "memberName": "status",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 948,
                                "src": "8288:10:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_PetStatus_$911",
                                  "typeString": "enum PetTrace.PetStatus"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "expression": {
                                  "id": 1435,
                                  "name": "PetStatus",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 911,
                                  "src": "8302:9:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_enum$_PetStatus_$911_$",
                                    "typeString": "type(enum PetTrace.PetStatus)"
                                  }
                                },
                                "id": 1436,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberLocation": "8312:6:6",
                                "memberName": "Active",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 908,
                                "src": "8302:16:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_PetStatus_$911",
                                  "typeString": "enum PetTrace.PetStatus"
                                }
                              },
                              "src": "8288:30:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "506574206e6f7420616374697665",
                              "id": 1438,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8320:16:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_37d04366ffa9178c21ab2cd5ca80d2f609b9cec1fbe26c4f40230fdc34f5a3b9",
                                "typeString": "literal_string \"Pet not active\""
                              },
                              "value": "Pet not active"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_37d04366ffa9178c21ab2cd5ca80d2f609b9cec1fbe26c4f40230fdc34f5a3b9",
                                "typeString": "literal_string \"Pet not active\""
                              }
                            ],
                            "id": 1432,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "8280:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1439,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8280:57:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1440,
                        "nodeType": "ExpressionStatement",
                        "src": "8280:57:6"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 1448,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 1442,
                                  "name": "pet",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1427,
                                  "src": "8356:3:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Pet_$955_storage_ptr",
                                    "typeString": "struct PetTrace.Pet storage pointer"
                                  }
                                },
                                "id": 1443,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "8360:6:6",
                                "memberName": "finder",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 954,
                                "src": "8356:10:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "hexValue": "30",
                                    "id": 1446,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "8378:1:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "id": 1445,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "8370:7:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 1444,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "8370:7:6",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 1447,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "8370:10:6",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "8356:24:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4e6f2066696e6465722061737369676e6564",
                              "id": 1449,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8382:20:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_2f8caec36b86db6814dfeb9133235bad0fcf05934ad5cc29f6d24fd12965e35a",
                                "typeString": "literal_string \"No finder assigned\""
                              },
                              "value": "No finder assigned"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_2f8caec36b86db6814dfeb9133235bad0fcf05934ad5cc29f6d24fd12965e35a",
                                "typeString": "literal_string \"No finder assigned\""
                              }
                            ],
                            "id": 1441,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "8348:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1450,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8348:55:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1451,
                        "nodeType": "ExpressionStatement",
                        "src": "8348:55:6"
                      },
                      {
                        "expression": {
                          "id": 1456,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 1452,
                              "name": "pet",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1427,
                              "src": "8416:3:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Pet_$955_storage_ptr",
                                "typeString": "struct PetTrace.Pet storage pointer"
                              }
                            },
                            "id": 1454,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberLocation": "8420:14:6",
                            "memberName": "ownerConfirmed",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 950,
                            "src": "8416:18:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "74727565",
                            "id": 1455,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "8437:4:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "8416:25:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1457,
                        "nodeType": "ExpressionStatement",
                        "src": "8416:25:6"
                      },
                      {
                        "condition": {
                          "expression": {
                            "id": 1458,
                            "name": "pet",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1427,
                            "src": "8458:3:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Pet_$955_storage_ptr",
                              "typeString": "struct PetTrace.Pet storage pointer"
                            }
                          },
                          "id": 1459,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "8462:15:6",
                          "memberName": "finderConfirmed",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 952,
                          "src": "8458:19:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1474,
                        "nodeType": "IfStatement",
                        "src": "8454:129:6",
                        "trueBody": {
                          "id": 1473,
                          "nodeType": "Block",
                          "src": "8479:104:6",
                          "statements": [
                            {
                              "expression": {
                                "id": 1465,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "expression": {
                                    "id": 1460,
                                    "name": "pet",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1427,
                                    "src": "8494:3:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Pet_$955_storage_ptr",
                                      "typeString": "struct PetTrace.Pet storage pointer"
                                    }
                                  },
                                  "id": 1462,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "memberLocation": "8498:6:6",
                                  "memberName": "status",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 948,
                                  "src": "8494:10:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_enum$_PetStatus_$911",
                                    "typeString": "enum PetTrace.PetStatus"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "expression": {
                                    "id": 1463,
                                    "name": "PetStatus",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 911,
                                    "src": "8507:9:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_enum$_PetStatus_$911_$",
                                      "typeString": "type(enum PetTrace.PetStatus)"
                                    }
                                  },
                                  "id": 1464,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberLocation": "8517:5:6",
                                  "memberName": "Found",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 909,
                                  "src": "8507:15:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_enum$_PetStatus_$911",
                                    "typeString": "enum PetTrace.PetStatus"
                                  }
                                },
                                "src": "8494:28:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_PetStatus_$911",
                                  "typeString": "enum PetTrace.PetStatus"
                                }
                              },
                              "id": 1466,
                              "nodeType": "ExpressionStatement",
                              "src": "8494:28:6"
                            },
                            {
                              "eventCall": {
                                "arguments": [
                                  {
                                    "id": 1468,
                                    "name": "petId",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1417,
                                    "src": "8553:5:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  {
                                    "expression": {
                                      "id": 1469,
                                      "name": "pet",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1427,
                                      "src": "8560:3:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Pet_$955_storage_ptr",
                                        "typeString": "struct PetTrace.Pet storage pointer"
                                      }
                                    },
                                    "id": 1470,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "8564:6:6",
                                    "memberName": "finder",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 954,
                                    "src": "8560:10:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 1467,
                                  "name": "PetFound",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1027,
                                  "src": "8544:8:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_address_$returns$__$",
                                    "typeString": "function (uint256,address)"
                                  }
                                },
                                "id": 1471,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "8544:27:6",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1472,
                              "nodeType": "EmitStatement",
                              "src": "8539:32:6"
                            }
                          ]
                        }
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 1476,
                              "name": "petId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1417,
                              "src": "8618:5:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "expression": {
                                "id": 1477,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "8625:3:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1478,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "8629:6:6",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "8625:10:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "hexValue": "74727565",
                              "id": 1479,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "bool",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8637:4:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "value": "true"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 1475,
                            "name": "ConfirmationAdded",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1047,
                            "src": "8600:17:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_address_$_t_bool_$returns$__$",
                              "typeString": "function (uint256,address,bool)"
                            }
                          },
                          "id": 1480,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8600:42:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1481,
                        "nodeType": "EmitStatement",
                        "src": "8595:47:6"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1415,
                    "nodeType": "StructuredDocumentation",
                    "src": "8002:119:6",
                    "text": " @notice Confirm found pet by owner\n @dev Completes finding process if finder also confirmed"
                  },
                  "functionSelector": "5e23985b",
                  "id": 1483,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "arguments": [
                        {
                          "id": 1420,
                          "name": "petId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1417,
                          "src": "8209:5:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 1421,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 1419,
                        "name": "onlyPetOwner",
                        "nameLocations": [
                          "8196:12:6"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 990,
                        "src": "8196:12:6"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "8196:19:6"
                    },
                    {
                      "id": 1423,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 1422,
                        "name": "nonReentrant",
                        "nameLocations": [
                          "8216:12:6"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 973,
                        "src": "8216:12:6"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "8216:12:6"
                    }
                  ],
                  "name": "confirmFoundByOwner",
                  "nameLocation": "8136:19:6",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1418,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1417,
                        "mutability": "mutable",
                        "name": "petId",
                        "nameLocation": "8174:5:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 1483,
                        "src": "8166:13:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1416,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "8166:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "8155:31:6"
                  },
                  "returnParameters": {
                    "id": 1424,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "8229:0:6"
                  },
                  "scope": 2406,
                  "src": "8127:523:6",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 1640,
                    "nodeType": "Block",
                    "src": "8857:1553:6",
                    "statements": [
                      {
                        "assignments": [
                          1496
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1496,
                            "mutability": "mutable",
                            "name": "pet",
                            "nameLocation": "8880:3:6",
                            "nodeType": "VariableDeclaration",
                            "scope": 1640,
                            "src": "8868:15:6",
                            "stateVariable": false,
                            "storageLocation": "storage",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Pet_$955_storage_ptr",
                              "typeString": "struct PetTrace.Pet"
                            },
                            "typeName": {
                              "id": 1495,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 1494,
                                "name": "Pet",
                                "nameLocations": [
                                  "8868:3:6"
                                ],
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 955,
                                "src": "8868:3:6"
                              },
                              "referencedDeclaration": 955,
                              "src": "8868:3:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Pet_$955_storage_ptr",
                                "typeString": "struct PetTrace.Pet"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1500,
                        "initialValue": {
                          "baseExpression": {
                            "id": 1497,
                            "name": "pets",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 895,
                            "src": "8886:4:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Pet_$955_storage_$",
                              "typeString": "mapping(uint256 => struct PetTrace.Pet storage ref)"
                            }
                          },
                          "id": 1499,
                          "indexExpression": {
                            "id": 1498,
                            "name": "petId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1486,
                            "src": "8891:5:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "8886:11:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Pet_$955_storage",
                            "typeString": "struct PetTrace.Pet storage ref"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "8868:29:6"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_enum$_PetStatus_$911",
                                "typeString": "enum PetTrace.PetStatus"
                              },
                              "id": 1506,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 1502,
                                  "name": "pet",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1496,
                                  "src": "8916:3:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Pet_$955_storage_ptr",
                                    "typeString": "struct PetTrace.Pet storage pointer"
                                  }
                                },
                                "id": 1503,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "8920:6:6",
                                "memberName": "status",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 948,
                                "src": "8916:10:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_PetStatus_$911",
                                  "typeString": "enum PetTrace.PetStatus"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "expression": {
                                  "id": 1504,
                                  "name": "PetStatus",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 911,
                                  "src": "8930:9:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_enum$_PetStatus_$911_$",
                                    "typeString": "type(enum PetTrace.PetStatus)"
                                  }
                                },
                                "id": 1505,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberLocation": "8940:5:6",
                                "memberName": "Found",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 909,
                                "src": "8930:15:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_PetStatus_$911",
                                  "typeString": "enum PetTrace.PetStatus"
                                }
                              },
                              "src": "8916:29:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "506574206e6f7420666f756e6420796574",
                              "id": 1507,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8947:19:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_c8fd67f62bc3ca6010fedf4b36669c86af8a42f5ac7fb5dba18299cc1ed1b93e",
                                "typeString": "literal_string \"Pet not found yet\""
                              },
                              "value": "Pet not found yet"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_c8fd67f62bc3ca6010fedf4b36669c86af8a42f5ac7fb5dba18299cc1ed1b93e",
                                "typeString": "literal_string \"Pet not found yet\""
                              }
                            ],
                            "id": 1501,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "8908:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1508,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8908:59:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1509,
                        "nodeType": "ExpressionStatement",
                        "src": "8908:59:6"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 1515,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 1511,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "8986:3:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 1512,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "8990:6:6",
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "8986:10:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "expression": {
                                  "id": 1513,
                                  "name": "pet",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1496,
                                  "src": "9000:3:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Pet_$955_storage_ptr",
                                    "typeString": "struct PetTrace.Pet storage pointer"
                                  }
                                },
                                "id": 1514,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "9004:6:6",
                                "memberName": "finder",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 954,
                                "src": "9000:10:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "8986:24:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4e6f742066696e646572",
                              "id": 1516,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "9012:12:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_1d5557113de6bcc2ffc9c4f68bb8a68ac4d90866495e60cced7d388627e3a673",
                                "typeString": "literal_string \"Not finder\""
                              },
                              "value": "Not finder"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_1d5557113de6bcc2ffc9c4f68bb8a68ac4d90866495e60cced7d388627e3a673",
                                "typeString": "literal_string \"Not finder\""
                              }
                            ],
                            "id": 1510,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "8978:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1517,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8978:47:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1518,
                        "nodeType": "ExpressionStatement",
                        "src": "8978:47:6"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 1533,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "id": 1528,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint128",
                                    "typeString": "uint128"
                                  },
                                  "id": 1523,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "expression": {
                                      "id": 1520,
                                      "name": "pet",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1496,
                                      "src": "9060:3:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Pet_$955_storage_ptr",
                                        "typeString": "struct PetTrace.Pet storage pointer"
                                      }
                                    },
                                    "id": 1521,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "9064:10:6",
                                    "memberName": "celoBounty",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 941,
                                    "src": "9060:14:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint128",
                                      "typeString": "uint128"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": ">",
                                  "rightExpression": {
                                    "hexValue": "30",
                                    "id": 1522,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "9077:1:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  },
                                  "src": "9060:18:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "||",
                                "rightExpression": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint128",
                                    "typeString": "uint128"
                                  },
                                  "id": 1527,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "expression": {
                                      "id": 1524,
                                      "name": "pet",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1496,
                                      "src": "9082:3:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Pet_$955_storage_ptr",
                                        "typeString": "struct PetTrace.Pet storage pointer"
                                      }
                                    },
                                    "id": 1525,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "9086:10:6",
                                    "memberName": "cUSDBounty",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 943,
                                    "src": "9082:14:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint128",
                                      "typeString": "uint128"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": ">",
                                  "rightExpression": {
                                    "hexValue": "30",
                                    "id": 1526,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "9099:1:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  },
                                  "src": "9082:18:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "src": "9060:40:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "||",
                              "rightExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint128",
                                  "typeString": "uint128"
                                },
                                "id": 1532,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "id": 1529,
                                    "name": "pet",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1496,
                                    "src": "9104:3:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Pet_$955_storage_ptr",
                                      "typeString": "struct PetTrace.Pet storage pointer"
                                    }
                                  },
                                  "id": 1530,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "9108:13:6",
                                  "memberName": "gDollarBounty",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 945,
                                  "src": "9104:17:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint128",
                                    "typeString": "uint128"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": ">",
                                "rightExpression": {
                                  "hexValue": "30",
                                  "id": 1531,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "9124:1:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                },
                                "src": "9104:21:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "src": "9060:65:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4e6f20626f756e7479",
                              "id": 1534,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "9140:11:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_738bd119d8a2df2abf605c68ef4d83b9718c129074d36c1d47701c643bdfff5c",
                                "typeString": "literal_string \"No bounty\""
                              },
                              "value": "No bounty"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_738bd119d8a2df2abf605c68ef4d83b9718c129074d36c1d47701c643bdfff5c",
                                "typeString": "literal_string \"No bounty\""
                              }
                            ],
                            "id": 1519,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "9038:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1535,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9038:124:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1536,
                        "nodeType": "ExpressionStatement",
                        "src": "9038:124:6"
                      },
                      {
                        "assignments": [
                          1538
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1538,
                            "mutability": "mutable",
                            "name": "celoAmount",
                            "nameLocation": "9183:10:6",
                            "nodeType": "VariableDeclaration",
                            "scope": 1640,
                            "src": "9175:18:6",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1537,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "9175:7:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1541,
                        "initialValue": {
                          "expression": {
                            "id": 1539,
                            "name": "pet",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1496,
                            "src": "9196:3:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Pet_$955_storage_ptr",
                              "typeString": "struct PetTrace.Pet storage pointer"
                            }
                          },
                          "id": 1540,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "9200:10:6",
                          "memberName": "celoBounty",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 941,
                          "src": "9196:14:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "9175:35:6"
                      },
                      {
                        "assignments": [
                          1543
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1543,
                            "mutability": "mutable",
                            "name": "cUSDAmount",
                            "nameLocation": "9229:10:6",
                            "nodeType": "VariableDeclaration",
                            "scope": 1640,
                            "src": "9221:18:6",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1542,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "9221:7:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1546,
                        "initialValue": {
                          "expression": {
                            "id": 1544,
                            "name": "pet",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1496,
                            "src": "9242:3:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Pet_$955_storage_ptr",
                              "typeString": "struct PetTrace.Pet storage pointer"
                            }
                          },
                          "id": 1545,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "9246:10:6",
                          "memberName": "cUSDBounty",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 943,
                          "src": "9242:14:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "9221:35:6"
                      },
                      {
                        "assignments": [
                          1548
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1548,
                            "mutability": "mutable",
                            "name": "gDollarAmount",
                            "nameLocation": "9275:13:6",
                            "nodeType": "VariableDeclaration",
                            "scope": 1640,
                            "src": "9267:21:6",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1547,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "9267:7:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1551,
                        "initialValue": {
                          "expression": {
                            "id": 1549,
                            "name": "pet",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1496,
                            "src": "9291:3:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Pet_$955_storage_ptr",
                              "typeString": "struct PetTrace.Pet storage pointer"
                            }
                          },
                          "id": 1550,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "9295:13:6",
                          "memberName": "gDollarBounty",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 945,
                          "src": "9291:17:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "9267:41:6"
                      },
                      {
                        "expression": {
                          "id": 1556,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 1552,
                              "name": "pet",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1496,
                              "src": "9362:3:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Pet_$955_storage_ptr",
                                "typeString": "struct PetTrace.Pet storage pointer"
                              }
                            },
                            "id": 1554,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberLocation": "9366:10:6",
                            "memberName": "celoBounty",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 941,
                            "src": "9362:14:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "30",
                            "id": 1555,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "9379:1:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "9362:18:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        "id": 1557,
                        "nodeType": "ExpressionStatement",
                        "src": "9362:18:6"
                      },
                      {
                        "expression": {
                          "id": 1562,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 1558,
                              "name": "pet",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1496,
                              "src": "9391:3:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Pet_$955_storage_ptr",
                                "typeString": "struct PetTrace.Pet storage pointer"
                              }
                            },
                            "id": 1560,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberLocation": "9395:10:6",
                            "memberName": "cUSDBounty",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 943,
                            "src": "9391:14:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "30",
                            "id": 1561,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "9408:1:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "9391:18:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        "id": 1563,
                        "nodeType": "ExpressionStatement",
                        "src": "9391:18:6"
                      },
                      {
                        "expression": {
                          "id": 1568,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 1564,
                              "name": "pet",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1496,
                              "src": "9420:3:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Pet_$955_storage_ptr",
                                "typeString": "struct PetTrace.Pet storage pointer"
                              }
                            },
                            "id": 1566,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberLocation": "9424:13:6",
                            "memberName": "gDollarBounty",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 945,
                            "src": "9420:17:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "30",
                            "id": 1567,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "9440:1:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "9420:21:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        "id": 1569,
                        "nodeType": "ExpressionStatement",
                        "src": "9420:21:6"
                      },
                      {
                        "expression": {
                          "id": 1574,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 1570,
                              "name": "escrowedCUSD",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 899,
                              "src": "9452:12:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                                "typeString": "mapping(uint256 => uint256)"
                              }
                            },
                            "id": 1572,
                            "indexExpression": {
                              "id": 1571,
                              "name": "petId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1486,
                              "src": "9465:5:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "9452:19:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "30",
                            "id": 1573,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "9474:1:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "9452:23:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1575,
                        "nodeType": "ExpressionStatement",
                        "src": "9452:23:6"
                      },
                      {
                        "expression": {
                          "id": 1580,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 1576,
                              "name": "escrowedGDOLLAR",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 903,
                              "src": "9486:15:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                                "typeString": "mapping(uint256 => uint256)"
                              }
                            },
                            "id": 1578,
                            "indexExpression": {
                              "id": 1577,
                              "name": "petId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1486,
                              "src": "9502:5:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "9486:22:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "30",
                            "id": 1579,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "9511:1:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "9486:26:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1581,
                        "nodeType": "ExpressionStatement",
                        "src": "9486:26:6"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1584,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1582,
                            "name": "celoAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1538,
                            "src": "9556:10:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 1583,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "9569:1:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "9556:14:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1595,
                        "nodeType": "IfStatement",
                        "src": "9552:87:6",
                        "trueBody": {
                          "id": 1594,
                          "nodeType": "Block",
                          "src": "9572:67:6",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 1591,
                                    "name": "celoAmount",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1538,
                                    "src": "9616:10:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "arguments": [
                                      {
                                        "expression": {
                                          "id": 1587,
                                          "name": "msg",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": -15,
                                          "src": "9595:3:6",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_magic_message",
                                            "typeString": "msg"
                                          }
                                        },
                                        "id": 1588,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberLocation": "9599:6:6",
                                        "memberName": "sender",
                                        "nodeType": "MemberAccess",
                                        "src": "9595:10:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      ],
                                      "id": 1586,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "9587:8:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_payable_$",
                                        "typeString": "type(address payable)"
                                      },
                                      "typeName": {
                                        "id": 1585,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "9587:8:6",
                                        "stateMutability": "payable",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 1589,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "9587:19:6",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address_payable",
                                      "typeString": "address payable"
                                    }
                                  },
                                  "id": 1590,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "9607:8:6",
                                  "memberName": "transfer",
                                  "nodeType": "MemberAccess",
                                  "src": "9587:28:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                                    "typeString": "function (uint256)"
                                  }
                                },
                                "id": 1592,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "9587:40:6",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1593,
                              "nodeType": "ExpressionStatement",
                              "src": "9587:40:6"
                            }
                          ]
                        }
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1598,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1596,
                            "name": "cUSDAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1543,
                            "src": "9653:10:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 1597,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "9666:1:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "9653:14:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1612,
                        "nodeType": "IfStatement",
                        "src": "9649:182:6",
                        "trueBody": {
                          "id": 1611,
                          "nodeType": "Block",
                          "src": "9669:162:6",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "expression": {
                                          "id": 1604,
                                          "name": "msg",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": -15,
                                          "src": "9740:3:6",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_magic_message",
                                            "typeString": "msg"
                                          }
                                        },
                                        "id": 1605,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberLocation": "9744:6:6",
                                        "memberName": "sender",
                                        "nodeType": "MemberAccess",
                                        "src": "9740:10:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      {
                                        "id": 1606,
                                        "name": "cUSDAmount",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1543,
                                        "src": "9752:10:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        },
                                        {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      ],
                                      "expression": {
                                        "arguments": [
                                          {
                                            "id": 1601,
                                            "name": "CUSD_ADDRESS",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 874,
                                            "src": "9717:12:6",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            }
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            }
                                          ],
                                          "id": 1600,
                                          "name": "IERC20",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 852,
                                          "src": "9710:6:6",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_type$_t_contract$_IERC20_$852_$",
                                            "typeString": "type(contract IERC20)"
                                          }
                                        },
                                        "id": 1602,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "typeConversion",
                                        "lValueRequested": false,
                                        "nameLocations": [],
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "9710:20:6",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_IERC20_$852",
                                          "typeString": "contract IERC20"
                                        }
                                      },
                                      "id": 1603,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberLocation": "9731:8:6",
                                      "memberName": "transfer",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 824,
                                      "src": "9710:29:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                                        "typeString": "function (address,uint256) external returns (bool)"
                                      }
                                    },
                                    "id": 1607,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "9710:53:6",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  {
                                    "hexValue": "63555344207472616e73666572206661696c6564",
                                    "id": 1608,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "9782:22:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_b150cfd0bce3bd0668ff5add238ec9ce843a498f13c42569be27b7c2260f386f",
                                      "typeString": "literal_string \"cUSD transfer failed\""
                                    },
                                    "value": "cUSD transfer failed"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    },
                                    {
                                      "typeIdentifier": "t_stringliteral_b150cfd0bce3bd0668ff5add238ec9ce843a498f13c42569be27b7c2260f386f",
                                      "typeString": "literal_string \"cUSD transfer failed\""
                                    }
                                  ],
                                  "id": 1599,
                                  "name": "require",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [
                                    -18,
                                    -18,
                                    -18
                                  ],
                                  "referencedDeclaration": -18,
                                  "src": "9684:7:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                    "typeString": "function (bool,string memory) pure"
                                  }
                                },
                                "id": 1609,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "9684:135:6",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1610,
                              "nodeType": "ExpressionStatement",
                              "src": "9684:135:6"
                            }
                          ]
                        }
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1615,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1613,
                            "name": "gDollarAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1548,
                            "src": "9890:13:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 1614,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "9906:1:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "9890:17:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1630,
                        "nodeType": "IfStatement",
                        "src": "9886:352:6",
                        "trueBody": {
                          "id": 1629,
                          "nodeType": "Block",
                          "src": "9909:329:6",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "expression": {
                                          "id": 1621,
                                          "name": "msg",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": -15,
                                          "src": "10013:3:6",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_magic_message",
                                            "typeString": "msg"
                                          }
                                        },
                                        "id": 1622,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberLocation": "10017:6:6",
                                        "memberName": "sender",
                                        "nodeType": "MemberAccess",
                                        "src": "10013:10:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      {
                                        "id": 1623,
                                        "name": "gDollarAmount",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1548,
                                        "src": "10059:13:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      {
                                        "hexValue": "",
                                        "id": 1624,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "string",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "10105:2:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                          "typeString": "literal_string \"\""
                                        },
                                        "value": ""
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        },
                                        {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        {
                                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                          "typeString": "literal_string \"\""
                                        }
                                      ],
                                      "expression": {
                                        "arguments": [
                                          {
                                            "id": 1618,
                                            "name": "GDOLLAR_ADDRESS",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 877,
                                            "src": "9958:15:6",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            }
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            }
                                          ],
                                          "id": 1617,
                                          "name": "IERC677",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 866,
                                          "src": "9950:7:6",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_type$_t_contract$_IERC677_$866_$",
                                            "typeString": "type(contract IERC677)"
                                          }
                                        },
                                        "id": 1619,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "typeConversion",
                                        "lValueRequested": false,
                                        "nameLocations": [],
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "9950:24:6",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_IERC677_$866",
                                          "typeString": "contract IERC677"
                                        }
                                      },
                                      "id": 1620,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberLocation": "9975:15:6",
                                      "memberName": "transferAndCall",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 865,
                                      "src": "9950:40:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
                                        "typeString": "function (address,uint256,bytes memory) external returns (bool)"
                                      }
                                    },
                                    "id": 1625,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "9950:222:6",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  {
                                    "hexValue": "4724207472616e73666572206661696c6564",
                                    "id": 1626,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "10191:20:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_501ff887f1107bcb11b6b08e6c2c3cea41fcde03d13159b4456a1901fab7daf0",
                                      "typeString": "literal_string \"G$ transfer failed\""
                                    },
                                    "value": "G$ transfer failed"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    },
                                    {
                                      "typeIdentifier": "t_stringliteral_501ff887f1107bcb11b6b08e6c2c3cea41fcde03d13159b4456a1901fab7daf0",
                                      "typeString": "literal_string \"G$ transfer failed\""
                                    }
                                  ],
                                  "id": 1616,
                                  "name": "require",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [
                                    -18,
                                    -18,
                                    -18
                                  ],
                                  "referencedDeclaration": -18,
                                  "src": "9924:7:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                    "typeString": "function (bool,string memory) pure"
                                  }
                                },
                                "id": 1627,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "9924:302:6",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1628,
                              "nodeType": "ExpressionStatement",
                              "src": "9924:302:6"
                            }
                          ]
                        }
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 1632,
                              "name": "petId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1486,
                              "src": "10283:5:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "expression": {
                                "id": 1633,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "10303:3:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1634,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "10307:6:6",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "10303:10:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1635,
                              "name": "celoAmount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1538,
                              "src": "10328:10:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 1636,
                              "name": "cUSDAmount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1543,
                              "src": "10353:10:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 1637,
                              "name": "gDollarAmount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1548,
                              "src": "10378:13:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1631,
                            "name": "BountyClaimed",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1039,
                            "src": "10255:13:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
                              "typeString": "function (uint256,address,uint256,uint256,uint256)"
                            }
                          },
                          "id": 1638,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10255:147:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1639,
                        "nodeType": "EmitStatement",
                        "src": "10250:152:6"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1484,
                    "nodeType": "StructuredDocumentation",
                    "src": "8658:116:6",
                    "text": " @notice Claim bounty for found pet\n @dev Can only be called by finder after confirmation"
                  },
                  "functionSelector": "44021ad7",
                  "id": 1641,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "arguments": [
                        {
                          "id": 1489,
                          "name": "petId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1486,
                          "src": "8837:5:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 1490,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 1488,
                        "name": "petExists",
                        "nameLocations": [
                          "8827:9:6"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 1003,
                        "src": "8827:9:6"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "8827:16:6"
                    },
                    {
                      "id": 1492,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 1491,
                        "name": "nonReentrant",
                        "nameLocations": [
                          "8844:12:6"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 973,
                        "src": "8844:12:6"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "8844:12:6"
                    }
                  ],
                  "name": "claimBounty",
                  "nameLocation": "8791:11:6",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1487,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1486,
                        "mutability": "mutable",
                        "name": "petId",
                        "nameLocation": "8811:5:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 1641,
                        "src": "8803:13:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1485,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "8803:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "8802:15:6"
                  },
                  "returnParameters": {
                    "id": 1493,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "8857:0:6"
                  },
                  "scope": 2406,
                  "src": "8782:1628:6",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 1788,
                    "nodeType": "Block",
                    "src": "10657:1268:6",
                    "statements": [
                      {
                        "assignments": [
                          1654
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1654,
                            "mutability": "mutable",
                            "name": "pet",
                            "nameLocation": "10680:3:6",
                            "nodeType": "VariableDeclaration",
                            "scope": 1788,
                            "src": "10668:15:6",
                            "stateVariable": false,
                            "storageLocation": "storage",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Pet_$955_storage_ptr",
                              "typeString": "struct PetTrace.Pet"
                            },
                            "typeName": {
                              "id": 1653,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 1652,
                                "name": "Pet",
                                "nameLocations": [
                                  "10668:3:6"
                                ],
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 955,
                                "src": "10668:3:6"
                              },
                              "referencedDeclaration": 955,
                              "src": "10668:3:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Pet_$955_storage_ptr",
                                "typeString": "struct PetTrace.Pet"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1658,
                        "initialValue": {
                          "baseExpression": {
                            "id": 1655,
                            "name": "pets",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 895,
                            "src": "10686:4:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Pet_$955_storage_$",
                              "typeString": "mapping(uint256 => struct PetTrace.Pet storage ref)"
                            }
                          },
                          "id": 1657,
                          "indexExpression": {
                            "id": 1656,
                            "name": "petId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1644,
                            "src": "10691:5:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "10686:11:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Pet_$955_storage",
                            "typeString": "struct PetTrace.Pet storage ref"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "10668:29:6"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_enum$_PetStatus_$911",
                                "typeString": "enum PetTrace.PetStatus"
                              },
                              "id": 1664,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 1660,
                                  "name": "pet",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1654,
                                  "src": "10716:3:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Pet_$955_storage_ptr",
                                    "typeString": "struct PetTrace.Pet storage pointer"
                                  }
                                },
                                "id": 1661,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "10720:6:6",
                                "memberName": "status",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 948,
                                "src": "10716:10:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_PetStatus_$911",
                                  "typeString": "enum PetTrace.PetStatus"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "expression": {
                                  "id": 1662,
                                  "name": "PetStatus",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 911,
                                  "src": "10730:9:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_enum$_PetStatus_$911_$",
                                    "typeString": "type(enum PetTrace.PetStatus)"
                                  }
                                },
                                "id": 1663,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberLocation": "10740:6:6",
                                "memberName": "Active",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 908,
                                "src": "10730:16:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_PetStatus_$911",
                                  "typeString": "enum PetTrace.PetStatus"
                                }
                              },
                              "src": "10716:30:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "506574206e6f7420616374697665",
                              "id": 1665,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "10748:16:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_37d04366ffa9178c21ab2cd5ca80d2f609b9cec1fbe26c4f40230fdc34f5a3b9",
                                "typeString": "literal_string \"Pet not active\""
                              },
                              "value": "Pet not active"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_37d04366ffa9178c21ab2cd5ca80d2f609b9cec1fbe26c4f40230fdc34f5a3b9",
                                "typeString": "literal_string \"Pet not active\""
                              }
                            ],
                            "id": 1659,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "10708:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1666,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10708:57:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1667,
                        "nodeType": "ExpressionStatement",
                        "src": "10708:57:6"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 1675,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 1669,
                                  "name": "pet",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1654,
                                  "src": "10784:3:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Pet_$955_storage_ptr",
                                    "typeString": "struct PetTrace.Pet storage pointer"
                                  }
                                },
                                "id": 1670,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "10788:6:6",
                                "memberName": "finder",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 954,
                                "src": "10784:10:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "hexValue": "30",
                                    "id": 1673,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "10806:1:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "id": 1672,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "10798:7:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 1671,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "10798:7:6",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 1674,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "10798:10:6",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "10784:24:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "46696e64657220616c72656164792061737369676e6564",
                              "id": 1676,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "10810:25:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_10505823a86b0991aed65bc1f01de7e2bc227c363aaeabffcd849361b104505d",
                                "typeString": "literal_string \"Finder already assigned\""
                              },
                              "value": "Finder already assigned"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_10505823a86b0991aed65bc1f01de7e2bc227c363aaeabffcd849361b104505d",
                                "typeString": "literal_string \"Finder already assigned\""
                              }
                            ],
                            "id": 1668,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "10776:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1677,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10776:60:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1678,
                        "nodeType": "ExpressionStatement",
                        "src": "10776:60:6"
                      },
                      {
                        "assignments": [
                          1680
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1680,
                            "mutability": "mutable",
                            "name": "celoAmount",
                            "nameLocation": "10857:10:6",
                            "nodeType": "VariableDeclaration",
                            "scope": 1788,
                            "src": "10849:18:6",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1679,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "10849:7:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1683,
                        "initialValue": {
                          "expression": {
                            "id": 1681,
                            "name": "pet",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1654,
                            "src": "10870:3:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Pet_$955_storage_ptr",
                              "typeString": "struct PetTrace.Pet storage pointer"
                            }
                          },
                          "id": 1682,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "10874:10:6",
                          "memberName": "celoBounty",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 941,
                          "src": "10870:14:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "10849:35:6"
                      },
                      {
                        "assignments": [
                          1685
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1685,
                            "mutability": "mutable",
                            "name": "cUSDAmount",
                            "nameLocation": "10903:10:6",
                            "nodeType": "VariableDeclaration",
                            "scope": 1788,
                            "src": "10895:18:6",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1684,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "10895:7:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1688,
                        "initialValue": {
                          "expression": {
                            "id": 1686,
                            "name": "pet",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1654,
                            "src": "10916:3:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Pet_$955_storage_ptr",
                              "typeString": "struct PetTrace.Pet storage pointer"
                            }
                          },
                          "id": 1687,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "10920:10:6",
                          "memberName": "cUSDBounty",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 943,
                          "src": "10916:14:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "10895:35:6"
                      },
                      {
                        "assignments": [
                          1690
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1690,
                            "mutability": "mutable",
                            "name": "gDollarAmount",
                            "nameLocation": "10949:13:6",
                            "nodeType": "VariableDeclaration",
                            "scope": 1788,
                            "src": "10941:21:6",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1689,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "10941:7:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1693,
                        "initialValue": {
                          "expression": {
                            "id": 1691,
                            "name": "pet",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1654,
                            "src": "10965:3:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Pet_$955_storage_ptr",
                              "typeString": "struct PetTrace.Pet storage pointer"
                            }
                          },
                          "id": 1692,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "10969:13:6",
                          "memberName": "gDollarBounty",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 945,
                          "src": "10965:17:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "10941:41:6"
                      },
                      {
                        "expression": {
                          "id": 1698,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 1694,
                              "name": "pet",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1654,
                              "src": "11019:3:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Pet_$955_storage_ptr",
                                "typeString": "struct PetTrace.Pet storage pointer"
                              }
                            },
                            "id": 1696,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberLocation": "11023:10:6",
                            "memberName": "celoBounty",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 941,
                            "src": "11019:14:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "30",
                            "id": 1697,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "11036:1:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "11019:18:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        "id": 1699,
                        "nodeType": "ExpressionStatement",
                        "src": "11019:18:6"
                      },
                      {
                        "expression": {
                          "id": 1704,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 1700,
                              "name": "pet",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1654,
                              "src": "11048:3:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Pet_$955_storage_ptr",
                                "typeString": "struct PetTrace.Pet storage pointer"
                              }
                            },
                            "id": 1702,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberLocation": "11052:10:6",
                            "memberName": "cUSDBounty",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 943,
                            "src": "11048:14:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "30",
                            "id": 1703,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "11065:1:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "11048:18:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        "id": 1705,
                        "nodeType": "ExpressionStatement",
                        "src": "11048:18:6"
                      },
                      {
                        "expression": {
                          "id": 1710,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 1706,
                              "name": "pet",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1654,
                              "src": "11077:3:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Pet_$955_storage_ptr",
                                "typeString": "struct PetTrace.Pet storage pointer"
                              }
                            },
                            "id": 1708,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberLocation": "11081:13:6",
                            "memberName": "gDollarBounty",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 945,
                            "src": "11077:17:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "30",
                            "id": 1709,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "11097:1:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "11077:21:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        "id": 1711,
                        "nodeType": "ExpressionStatement",
                        "src": "11077:21:6"
                      },
                      {
                        "expression": {
                          "id": 1716,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 1712,
                              "name": "escrowedCUSD",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 899,
                              "src": "11123:12:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                                "typeString": "mapping(uint256 => uint256)"
                              }
                            },
                            "id": 1714,
                            "indexExpression": {
                              "id": 1713,
                              "name": "petId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1644,
                              "src": "11136:5:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "11123:19:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "30",
                            "id": 1715,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "11145:1:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "11123:23:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1717,
                        "nodeType": "ExpressionStatement",
                        "src": "11123:23:6"
                      },
                      {
                        "expression": {
                          "id": 1722,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 1718,
                              "name": "escrowedGDOLLAR",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 903,
                              "src": "11157:15:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                                "typeString": "mapping(uint256 => uint256)"
                              }
                            },
                            "id": 1720,
                            "indexExpression": {
                              "id": 1719,
                              "name": "petId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1644,
                              "src": "11173:5:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "11157:22:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "30",
                            "id": 1721,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "11182:1:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "11157:26:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1723,
                        "nodeType": "ExpressionStatement",
                        "src": "11157:26:6"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1726,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1724,
                            "name": "celoAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1680,
                            "src": "11237:10:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 1725,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "11250:1:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "11237:14:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1737,
                        "nodeType": "IfStatement",
                        "src": "11233:87:6",
                        "trueBody": {
                          "id": 1736,
                          "nodeType": "Block",
                          "src": "11253:67:6",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 1733,
                                    "name": "celoAmount",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1680,
                                    "src": "11297:10:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "arguments": [
                                      {
                                        "expression": {
                                          "id": 1729,
                                          "name": "msg",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": -15,
                                          "src": "11276:3:6",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_magic_message",
                                            "typeString": "msg"
                                          }
                                        },
                                        "id": 1730,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberLocation": "11280:6:6",
                                        "memberName": "sender",
                                        "nodeType": "MemberAccess",
                                        "src": "11276:10:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      ],
                                      "id": 1728,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "11268:8:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_payable_$",
                                        "typeString": "type(address payable)"
                                      },
                                      "typeName": {
                                        "id": 1727,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "11268:8:6",
                                        "stateMutability": "payable",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 1731,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "11268:19:6",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address_payable",
                                      "typeString": "address payable"
                                    }
                                  },
                                  "id": 1732,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "11288:8:6",
                                  "memberName": "transfer",
                                  "nodeType": "MemberAccess",
                                  "src": "11268:28:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                                    "typeString": "function (uint256)"
                                  }
                                },
                                "id": 1734,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "11268:40:6",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1735,
                              "nodeType": "ExpressionStatement",
                              "src": "11268:40:6"
                            }
                          ]
                        }
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1740,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1738,
                            "name": "cUSDAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1685,
                            "src": "11334:10:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 1739,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "11347:1:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "11334:14:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1754,
                        "nodeType": "IfStatement",
                        "src": "11330:180:6",
                        "trueBody": {
                          "id": 1753,
                          "nodeType": "Block",
                          "src": "11350:160:6",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "expression": {
                                          "id": 1746,
                                          "name": "msg",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": -15,
                                          "src": "11421:3:6",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_magic_message",
                                            "typeString": "msg"
                                          }
                                        },
                                        "id": 1747,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberLocation": "11425:6:6",
                                        "memberName": "sender",
                                        "nodeType": "MemberAccess",
                                        "src": "11421:10:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      {
                                        "id": 1748,
                                        "name": "cUSDAmount",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1685,
                                        "src": "11433:10:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        },
                                        {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      ],
                                      "expression": {
                                        "arguments": [
                                          {
                                            "id": 1743,
                                            "name": "CUSD_ADDRESS",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 874,
                                            "src": "11398:12:6",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            }
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            }
                                          ],
                                          "id": 1742,
                                          "name": "IERC20",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 852,
                                          "src": "11391:6:6",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_type$_t_contract$_IERC20_$852_$",
                                            "typeString": "type(contract IERC20)"
                                          }
                                        },
                                        "id": 1744,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "typeConversion",
                                        "lValueRequested": false,
                                        "nameLocations": [],
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "11391:20:6",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_IERC20_$852",
                                          "typeString": "contract IERC20"
                                        }
                                      },
                                      "id": 1745,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberLocation": "11412:8:6",
                                      "memberName": "transfer",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 824,
                                      "src": "11391:29:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                                        "typeString": "function (address,uint256) external returns (bool)"
                                      }
                                    },
                                    "id": 1749,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "11391:53:6",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  {
                                    "hexValue": "6355534420726566756e64206661696c6564",
                                    "id": 1750,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "11463:20:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_f46511fcdcbb2b811bc9b29ac33c0e441ed97b72da1c115d8629293fa98f0ef7",
                                      "typeString": "literal_string \"cUSD refund failed\""
                                    },
                                    "value": "cUSD refund failed"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    },
                                    {
                                      "typeIdentifier": "t_stringliteral_f46511fcdcbb2b811bc9b29ac33c0e441ed97b72da1c115d8629293fa98f0ef7",
                                      "typeString": "literal_string \"cUSD refund failed\""
                                    }
                                  ],
                                  "id": 1741,
                                  "name": "require",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [
                                    -18,
                                    -18,
                                    -18
                                  ],
                                  "referencedDeclaration": -18,
                                  "src": "11365:7:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                    "typeString": "function (bool,string memory) pure"
                                  }
                                },
                                "id": 1751,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "11365:133:6",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1752,
                              "nodeType": "ExpressionStatement",
                              "src": "11365:133:6"
                            }
                          ]
                        }
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1757,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1755,
                            "name": "gDollarAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1690,
                            "src": "11524:13:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 1756,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "11540:1:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "11524:17:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1771,
                        "nodeType": "IfStatement",
                        "src": "11520:187:6",
                        "trueBody": {
                          "id": 1770,
                          "nodeType": "Block",
                          "src": "11543:164:6",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "expression": {
                                          "id": 1763,
                                          "name": "msg",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": -15,
                                          "src": "11617:3:6",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_magic_message",
                                            "typeString": "msg"
                                          }
                                        },
                                        "id": 1764,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberLocation": "11621:6:6",
                                        "memberName": "sender",
                                        "nodeType": "MemberAccess",
                                        "src": "11617:10:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      {
                                        "id": 1765,
                                        "name": "gDollarAmount",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1690,
                                        "src": "11629:13:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        },
                                        {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      ],
                                      "expression": {
                                        "arguments": [
                                          {
                                            "id": 1760,
                                            "name": "GDOLLAR_ADDRESS",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 877,
                                            "src": "11591:15:6",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            }
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            }
                                          ],
                                          "id": 1759,
                                          "name": "IERC20",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 852,
                                          "src": "11584:6:6",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_type$_t_contract$_IERC20_$852_$",
                                            "typeString": "type(contract IERC20)"
                                          }
                                        },
                                        "id": 1761,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "typeConversion",
                                        "lValueRequested": false,
                                        "nameLocations": [],
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "11584:23:6",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_IERC20_$852",
                                          "typeString": "contract IERC20"
                                        }
                                      },
                                      "id": 1762,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberLocation": "11608:8:6",
                                      "memberName": "transfer",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 824,
                                      "src": "11584:32:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                                        "typeString": "function (address,uint256) external returns (bool)"
                                      }
                                    },
                                    "id": 1766,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "11584:59:6",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  {
                                    "hexValue": "472420726566756e64206661696c6564",
                                    "id": 1767,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "11662:18:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_a9408d0ca307151a79f180f32f8122b0472a087453510f6ea3d9244f1bc867be",
                                      "typeString": "literal_string \"G$ refund failed\""
                                    },
                                    "value": "G$ refund failed"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    },
                                    {
                                      "typeIdentifier": "t_stringliteral_a9408d0ca307151a79f180f32f8122b0472a087453510f6ea3d9244f1bc867be",
                                      "typeString": "literal_string \"G$ refund failed\""
                                    }
                                  ],
                                  "id": 1758,
                                  "name": "require",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [
                                    -18,
                                    -18,
                                    -18
                                  ],
                                  "referencedDeclaration": -18,
                                  "src": "11558:7:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                    "typeString": "function (bool,string memory) pure"
                                  }
                                },
                                "id": 1768,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "11558:137:6",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1769,
                              "nodeType": "ExpressionStatement",
                              "src": "11558:137:6"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "id": 1777,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 1772,
                              "name": "pet",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1654,
                              "src": "11719:3:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Pet_$955_storage_ptr",
                                "typeString": "struct PetTrace.Pet storage pointer"
                              }
                            },
                            "id": 1774,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberLocation": "11723:6:6",
                            "memberName": "status",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 948,
                            "src": "11719:10:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_PetStatus_$911",
                              "typeString": "enum PetTrace.PetStatus"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "id": 1775,
                              "name": "PetStatus",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 911,
                              "src": "11732:9:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_PetStatus_$911_$",
                                "typeString": "type(enum PetTrace.PetStatus)"
                              }
                            },
                            "id": 1776,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "11742:9:6",
                            "memberName": "Cancelled",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 910,
                            "src": "11732:19:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_PetStatus_$911",
                              "typeString": "enum PetTrace.PetStatus"
                            }
                          },
                          "src": "11719:32:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_PetStatus_$911",
                            "typeString": "enum PetTrace.PetStatus"
                          }
                        },
                        "id": 1778,
                        "nodeType": "ExpressionStatement",
                        "src": "11719:32:6"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 1780,
                              "name": "petId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1644,
                              "src": "11798:5:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "expression": {
                                "id": 1781,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "11818:3:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1782,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "11822:6:6",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "11818:10:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1783,
                              "name": "celoAmount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1680,
                              "src": "11843:10:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 1784,
                              "name": "cUSDAmount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1685,
                              "src": "11868:10:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 1785,
                              "name": "gDollarAmount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1690,
                              "src": "11893:13:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1779,
                            "name": "BountyRefunded",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1059,
                            "src": "11769:14:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
                              "typeString": "function (uint256,address,uint256,uint256,uint256)"
                            }
                          },
                          "id": 1786,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11769:148:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1787,
                        "nodeType": "EmitStatement",
                        "src": "11764:153:6"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1642,
                    "nodeType": "StructuredDocumentation",
                    "src": "10418:135:6",
                    "text": " @notice Cancel lost pet report and refund bounties\n @dev Can only be called by owner before finder assigned"
                  },
                  "functionSelector": "d32bfb6c",
                  "id": 1789,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "arguments": [
                        {
                          "id": 1647,
                          "name": "petId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1644,
                          "src": "10637:5:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 1648,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 1646,
                        "name": "onlyPetOwner",
                        "nameLocations": [
                          "10624:12:6"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 990,
                        "src": "10624:12:6"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "10624:19:6"
                    },
                    {
                      "id": 1650,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 1649,
                        "name": "nonReentrant",
                        "nameLocations": [
                          "10644:12:6"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 973,
                        "src": "10644:12:6"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "10644:12:6"
                    }
                  ],
                  "name": "cancelAndRefund",
                  "nameLocation": "10568:15:6",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1645,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1644,
                        "mutability": "mutable",
                        "name": "petId",
                        "nameLocation": "10602:5:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 1789,
                        "src": "10594:13:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1643,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "10594:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "10583:31:6"
                  },
                  "returnParameters": {
                    "id": 1651,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "10657:0:6"
                  },
                  "scope": 2406,
                  "src": "10559:1366:6",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 1815,
                    "nodeType": "Block",
                    "src": "12162:134:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 1803,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 1798,
                                "name": "newAdmin",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1792,
                                "src": "12181:8:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "hexValue": "30",
                                    "id": 1801,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "12201:1:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "id": 1800,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "12193:7:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 1799,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "12193:7:6",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 1802,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "12193:10:6",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "12181:22:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "496e76616c69642061646472657373",
                              "id": 1804,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "12205:17:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226",
                                "typeString": "literal_string \"Invalid address\""
                              },
                              "value": "Invalid address"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226",
                                "typeString": "literal_string \"Invalid address\""
                              }
                            ],
                            "id": 1797,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "12173:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1805,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12173:50:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1806,
                        "nodeType": "ExpressionStatement",
                        "src": "12173:50:6"
                      },
                      {
                        "expression": {
                          "id": 1809,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1807,
                            "name": "admin",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 871,
                            "src": "12234:5:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 1808,
                            "name": "newAdmin",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1792,
                            "src": "12242:8:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "12234:16:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 1810,
                        "nodeType": "ExpressionStatement",
                        "src": "12234:16:6"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 1812,
                              "name": "newAdmin",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1792,
                              "src": "12279:8:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 1811,
                            "name": "AdminChanged",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1063,
                            "src": "12266:12:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 1813,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12266:22:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1814,
                        "nodeType": "EmitStatement",
                        "src": "12261:27:6"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1790,
                    "nodeType": "StructuredDocumentation",
                    "src": "12001:95:6",
                    "text": " @notice Transfer admin rights\n @param newAdmin Address of new admin"
                  },
                  "functionSelector": "75829def",
                  "id": 1816,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 1795,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 1794,
                        "name": "onlyAdmin",
                        "nameLocations": [
                          "12152:9:6"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 1015,
                        "src": "12152:9:6"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "12152:9:6"
                    }
                  ],
                  "name": "transferAdmin",
                  "nameLocation": "12111:13:6",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1793,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1792,
                        "mutability": "mutable",
                        "name": "newAdmin",
                        "nameLocation": "12133:8:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 1816,
                        "src": "12125:16:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1791,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "12125:7:6",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "12124:18:6"
                  },
                  "returnParameters": {
                    "id": 1796,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "12162:0:6"
                  },
                  "scope": 2406,
                  "src": "12102:194:6",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 1847,
                    "nodeType": "Block",
                    "src": "12480:163:6",
                    "statements": [
                      {
                        "assignments": [
                          1825
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1825,
                            "mutability": "mutable",
                            "name": "balance",
                            "nameLocation": "12499:7:6",
                            "nodeType": "VariableDeclaration",
                            "scope": 1847,
                            "src": "12491:15:6",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1824,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "12491:7:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1835,
                        "initialValue": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 1832,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "12548:4:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_PetTrace_$2406",
                                    "typeString": "contract PetTrace"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_PetTrace_$2406",
                                    "typeString": "contract PetTrace"
                                  }
                                ],
                                "id": 1831,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "12540:7:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 1830,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "12540:7:6",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 1833,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "12540:13:6",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 1827,
                                  "name": "CUSD_ADDRESS",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 874,
                                  "src": "12516:12:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 1826,
                                "name": "IERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 852,
                                "src": "12509:6:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC20_$852_$",
                                  "typeString": "type(contract IERC20)"
                                }
                              },
                              "id": 1828,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "12509:20:6",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$852",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 1829,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "12530:9:6",
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 842,
                            "src": "12509:30:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 1834,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12509:45:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "12491:63:6"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 1841,
                                  "name": "to",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1819,
                                  "src": "12603:2:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "id": 1842,
                                  "name": "balance",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1825,
                                  "src": "12607:7:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "arguments": [
                                    {
                                      "id": 1838,
                                      "name": "CUSD_ADDRESS",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 874,
                                      "src": "12580:12:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    ],
                                    "id": 1837,
                                    "name": "IERC20",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 852,
                                    "src": "12573:6:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_contract$_IERC20_$852_$",
                                      "typeString": "type(contract IERC20)"
                                    }
                                  },
                                  "id": 1839,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "12573:20:6",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IERC20_$852",
                                    "typeString": "contract IERC20"
                                  }
                                },
                                "id": 1840,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "12594:8:6",
                                "memberName": "transfer",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 824,
                                "src": "12573:29:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                                  "typeString": "function (address,uint256) external returns (bool)"
                                }
                              },
                              "id": 1843,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "12573:42:6",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "5472616e73666572206661696c6564",
                              "id": 1844,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "12617:17:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51",
                                "typeString": "literal_string \"Transfer failed\""
                              },
                              "value": "Transfer failed"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51",
                                "typeString": "literal_string \"Transfer failed\""
                              }
                            ],
                            "id": 1836,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "12565:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1845,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12565:70:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1846,
                        "nodeType": "ExpressionStatement",
                        "src": "12565:70:6"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1817,
                    "nodeType": "StructuredDocumentation",
                    "src": "12304:108:6",
                    "text": " @notice Emergency withdraw cUSD (admin only)\n @param to Address to send funds to"
                  },
                  "functionSelector": "3f26decd",
                  "id": 1848,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 1822,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 1821,
                        "name": "onlyAdmin",
                        "nameLocations": [
                          "12470:9:6"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 1015,
                        "src": "12470:9:6"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "12470:9:6"
                    }
                  ],
                  "name": "emergencyWithdrawCUSD",
                  "nameLocation": "12427:21:6",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1820,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1819,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "12457:2:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 1848,
                        "src": "12449:10:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1818,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "12449:7:6",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "12448:12:6"
                  },
                  "returnParameters": {
                    "id": 1823,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "12480:0:6"
                  },
                  "scope": 2406,
                  "src": "12418:225:6",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 1954,
                    "nodeType": "Block",
                    "src": "13125:784:6",
                    "statements": [
                      {
                        "assignments": [
                          1862
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1862,
                            "mutability": "mutable",
                            "name": "totalLost",
                            "nameLocation": "13144:9:6",
                            "nodeType": "VariableDeclaration",
                            "scope": 1954,
                            "src": "13136:17:6",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1861,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "13136:7:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1864,
                        "initialValue": {
                          "hexValue": "30",
                          "id": 1863,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "13156:1:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "13136:21:6"
                      },
                      {
                        "assignments": [
                          1866
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1866,
                            "mutability": "mutable",
                            "name": "endIndex",
                            "nameLocation": "13176:8:6",
                            "nodeType": "VariableDeclaration",
                            "scope": 1954,
                            "src": "13168:16:6",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1865,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "13168:7:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1870,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1869,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1867,
                            "name": "startIndex",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1851,
                            "src": "13187:10:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "id": 1868,
                            "name": "maxCount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1853,
                            "src": "13200:8:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "13187:21:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "13168:40:6"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1873,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1871,
                            "name": "endIndex",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1866,
                            "src": "13223:8:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "id": 1872,
                            "name": "nextPetId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 890,
                            "src": "13234:9:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "13223:20:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1878,
                        "nodeType": "IfStatement",
                        "src": "13219:46:6",
                        "trueBody": {
                          "expression": {
                            "id": 1876,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftHandSide": {
                              "id": 1874,
                              "name": "endIndex",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1866,
                              "src": "13245:8:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "Assignment",
                            "operator": "=",
                            "rightHandSide": {
                              "id": 1875,
                              "name": "nextPetId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 890,
                              "src": "13256:9:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "13245:20:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 1877,
                          "nodeType": "ExpressionStatement",
                          "src": "13245:20:6"
                        }
                      },
                      {
                        "body": {
                          "id": 1900,
                          "nodeType": "Block",
                          "src": "13363:129:6",
                          "statements": [
                            {
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_enum$_PetStatus_$911",
                                  "typeString": "enum PetTrace.PetStatus"
                                },
                                "id": 1895,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "baseExpression": {
                                      "id": 1889,
                                      "name": "pets",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 895,
                                      "src": "13433:4:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Pet_$955_storage_$",
                                        "typeString": "mapping(uint256 => struct PetTrace.Pet storage ref)"
                                      }
                                    },
                                    "id": 1891,
                                    "indexExpression": {
                                      "id": 1890,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1880,
                                      "src": "13438:1:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "13433:7:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Pet_$955_storage",
                                      "typeString": "struct PetTrace.Pet storage ref"
                                    }
                                  },
                                  "id": 1892,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "13441:6:6",
                                  "memberName": "status",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 948,
                                  "src": "13433:14:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_enum$_PetStatus_$911",
                                    "typeString": "enum PetTrace.PetStatus"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "==",
                                "rightExpression": {
                                  "expression": {
                                    "id": 1893,
                                    "name": "PetStatus",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 911,
                                    "src": "13451:9:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_enum$_PetStatus_$911_$",
                                      "typeString": "type(enum PetTrace.PetStatus)"
                                    }
                                  },
                                  "id": 1894,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberLocation": "13461:6:6",
                                  "memberName": "Active",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 908,
                                  "src": "13451:16:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_enum$_PetStatus_$911",
                                    "typeString": "enum PetTrace.PetStatus"
                                  }
                                },
                                "src": "13433:34:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 1899,
                              "nodeType": "IfStatement",
                              "src": "13429:51:6",
                              "trueBody": {
                                "expression": {
                                  "id": 1897,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "UnaryOperation",
                                  "operator": "++",
                                  "prefix": false,
                                  "src": "13469:11:6",
                                  "subExpression": {
                                    "id": 1896,
                                    "name": "totalLost",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1862,
                                    "src": "13469:9:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 1898,
                                "nodeType": "ExpressionStatement",
                                "src": "13469:11:6"
                              }
                            }
                          ]
                        },
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1885,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1883,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1880,
                            "src": "13344:1:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "id": 1884,
                            "name": "endIndex",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1866,
                            "src": "13348:8:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "13344:12:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1901,
                        "initializationExpression": {
                          "assignments": [
                            1880
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 1880,
                              "mutability": "mutable",
                              "name": "i",
                              "nameLocation": "13328:1:6",
                              "nodeType": "VariableDeclaration",
                              "scope": 1901,
                              "src": "13320:9:6",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 1879,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "13320:7:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 1882,
                          "initialValue": {
                            "id": 1881,
                            "name": "startIndex",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1851,
                            "src": "13332:10:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "13320:22:6"
                        },
                        "isSimpleCounterLoop": true,
                        "loopExpression": {
                          "expression": {
                            "id": 1887,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "++",
                            "prefix": false,
                            "src": "13358:3:6",
                            "subExpression": {
                              "id": 1886,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1880,
                              "src": "13358:1:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 1888,
                          "nodeType": "ExpressionStatement",
                          "src": "13358:3:6"
                        },
                        "nodeType": "ForStatement",
                        "src": "13315:177:6"
                      },
                      {
                        "expression": {
                          "id": 1908,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1902,
                            "name": "ids",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1857,
                            "src": "13546:3:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 1906,
                                "name": "totalLost",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1862,
                                "src": "13566:9:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 1905,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "NewExpression",
                              "src": "13552:13:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                                "typeString": "function (uint256) pure returns (uint256[] memory)"
                              },
                              "typeName": {
                                "baseType": {
                                  "id": 1903,
                                  "name": "uint256",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "13556:7:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 1904,
                                "nodeType": "ArrayTypeName",
                                "src": "13556:9:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                                  "typeString": "uint256[]"
                                }
                              }
                            },
                            "id": 1907,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "13552:24:6",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            }
                          },
                          "src": "13546:30:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                            "typeString": "uint256[] memory"
                          }
                        },
                        "id": 1909,
                        "nodeType": "ExpressionStatement",
                        "src": "13546:30:6"
                      },
                      {
                        "assignments": [
                          1911
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1911,
                            "mutability": "mutable",
                            "name": "currentIndex",
                            "nameLocation": "13595:12:6",
                            "nodeType": "VariableDeclaration",
                            "scope": 1954,
                            "src": "13587:20:6",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1910,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "13587:7:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1913,
                        "initialValue": {
                          "hexValue": "30",
                          "id": 1912,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "13610:1:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "13587:24:6"
                      },
                      {
                        "body": {
                          "id": 1942,
                          "nodeType": "Block",
                          "src": "13672:155:6",
                          "statements": [
                            {
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_enum$_PetStatus_$911",
                                  "typeString": "enum PetTrace.PetStatus"
                                },
                                "id": 1930,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "baseExpression": {
                                      "id": 1924,
                                      "name": "pets",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 895,
                                      "src": "13691:4:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Pet_$955_storage_$",
                                        "typeString": "mapping(uint256 => struct PetTrace.Pet storage ref)"
                                      }
                                    },
                                    "id": 1926,
                                    "indexExpression": {
                                      "id": 1925,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1915,
                                      "src": "13696:1:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "13691:7:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Pet_$955_storage",
                                      "typeString": "struct PetTrace.Pet storage ref"
                                    }
                                  },
                                  "id": 1927,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "13699:6:6",
                                  "memberName": "status",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 948,
                                  "src": "13691:14:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_enum$_PetStatus_$911",
                                    "typeString": "enum PetTrace.PetStatus"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "==",
                                "rightExpression": {
                                  "expression": {
                                    "id": 1928,
                                    "name": "PetStatus",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 911,
                                    "src": "13709:9:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_enum$_PetStatus_$911_$",
                                      "typeString": "type(enum PetTrace.PetStatus)"
                                    }
                                  },
                                  "id": 1929,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberLocation": "13719:6:6",
                                  "memberName": "Active",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 908,
                                  "src": "13709:16:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_enum$_PetStatus_$911",
                                    "typeString": "enum PetTrace.PetStatus"
                                  }
                                },
                                "src": "13691:34:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 1941,
                              "nodeType": "IfStatement",
                              "src": "13687:129:6",
                              "trueBody": {
                                "id": 1940,
                                "nodeType": "Block",
                                "src": "13727:89:6",
                                "statements": [
                                  {
                                    "expression": {
                                      "id": 1935,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftHandSide": {
                                        "baseExpression": {
                                          "id": 1931,
                                          "name": "ids",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1857,
                                          "src": "13746:3:6",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                            "typeString": "uint256[] memory"
                                          }
                                        },
                                        "id": 1933,
                                        "indexExpression": {
                                          "id": 1932,
                                          "name": "currentIndex",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1911,
                                          "src": "13750:12:6",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": true,
                                        "nodeType": "IndexAccess",
                                        "src": "13746:17:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "Assignment",
                                      "operator": "=",
                                      "rightHandSide": {
                                        "id": 1934,
                                        "name": "i",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1915,
                                        "src": "13766:1:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "13746:21:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 1936,
                                    "nodeType": "ExpressionStatement",
                                    "src": "13746:21:6"
                                  },
                                  {
                                    "expression": {
                                      "id": 1938,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "UnaryOperation",
                                      "operator": "++",
                                      "prefix": false,
                                      "src": "13786:14:6",
                                      "subExpression": {
                                        "id": 1937,
                                        "name": "currentIndex",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1911,
                                        "src": "13786:12:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 1939,
                                    "nodeType": "ExpressionStatement",
                                    "src": "13786:14:6"
                                  }
                                ]
                              }
                            }
                          ]
                        },
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1920,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1918,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1915,
                            "src": "13653:1:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "id": 1919,
                            "name": "endIndex",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1866,
                            "src": "13657:8:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "13653:12:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1943,
                        "initializationExpression": {
                          "assignments": [
                            1915
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 1915,
                              "mutability": "mutable",
                              "name": "i",
                              "nameLocation": "13637:1:6",
                              "nodeType": "VariableDeclaration",
                              "scope": 1943,
                              "src": "13629:9:6",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 1914,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "13629:7:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 1917,
                          "initialValue": {
                            "id": 1916,
                            "name": "startIndex",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1851,
                            "src": "13641:10:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "13629:22:6"
                        },
                        "isSimpleCounterLoop": true,
                        "loopExpression": {
                          "expression": {
                            "id": 1922,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "++",
                            "prefix": false,
                            "src": "13667:3:6",
                            "subExpression": {
                              "id": 1921,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1915,
                              "src": "13667:1:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 1923,
                          "nodeType": "ExpressionStatement",
                          "src": "13667:3:6"
                        },
                        "nodeType": "ForStatement",
                        "src": "13624:203:6"
                      },
                      {
                        "expression": {
                          "id": 1948,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1944,
                            "name": "hasMore",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1859,
                            "src": "13839:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1947,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 1945,
                              "name": "endIndex",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1866,
                              "src": "13849:8:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "<",
                            "rightExpression": {
                              "id": 1946,
                              "name": "nextPetId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 890,
                              "src": "13860:9:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "13849:20:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "13839:30:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1949,
                        "nodeType": "ExpressionStatement",
                        "src": "13839:30:6"
                      },
                      {
                        "expression": {
                          "components": [
                            {
                              "id": 1950,
                              "name": "ids",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1857,
                              "src": "13888:3:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                "typeString": "uint256[] memory"
                              }
                            },
                            {
                              "id": 1951,
                              "name": "hasMore",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1859,
                              "src": "13893:7:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "id": 1952,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "13887:14:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bool_$",
                            "typeString": "tuple(uint256[] memory,bool)"
                          }
                        },
                        "functionReturnParameters": 1860,
                        "id": 1953,
                        "nodeType": "Return",
                        "src": "13880:21:6"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1849,
                    "nodeType": "StructuredDocumentation",
                    "src": "12718:258:6",
                    "text": " @notice Get paginated list of lost pet IDs\n @param startIndex Starting index (0-based)\n @param maxCount Maximum number of IDs to return\n @return ids Array of pet IDs\n @return hasMore Whether more results exist"
                  },
                  "functionSelector": "a06e0061",
                  "id": 1955,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getLostPetIds",
                  "nameLocation": "12991:13:6",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1854,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1851,
                        "mutability": "mutable",
                        "name": "startIndex",
                        "nameLocation": "13023:10:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 1955,
                        "src": "13015:18:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1850,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "13015:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1853,
                        "mutability": "mutable",
                        "name": "maxCount",
                        "nameLocation": "13052:8:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 1955,
                        "src": "13044:16:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1852,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "13044:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "13004:63:6"
                  },
                  "returnParameters": {
                    "id": 1860,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1857,
                        "mutability": "mutable",
                        "name": "ids",
                        "nameLocation": "13106:3:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 1955,
                        "src": "13089:20:6",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 1855,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "13089:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 1856,
                          "nodeType": "ArrayTypeName",
                          "src": "13089:9:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                            "typeString": "uint256[]"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1859,
                        "mutability": "mutable",
                        "name": "hasMore",
                        "nameLocation": "13116:7:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 1955,
                        "src": "13111:12:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 1858,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "13111:4:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "13088:36:6"
                  },
                  "scope": 2406,
                  "src": "12982:927:6",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 2058,
                    "nodeType": "Block",
                    "src": "14720:669:6",
                    "statements": [
                      {
                        "assignments": [
                          2009
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2009,
                            "mutability": "mutable",
                            "name": "pet",
                            "nameLocation": "14743:3:6",
                            "nodeType": "VariableDeclaration",
                            "scope": 2058,
                            "src": "14731:15:6",
                            "stateVariable": false,
                            "storageLocation": "storage",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Pet_$955_storage_ptr",
                              "typeString": "struct PetTrace.Pet"
                            },
                            "typeName": {
                              "id": 2008,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 2007,
                                "name": "Pet",
                                "nameLocations": [
                                  "14731:3:6"
                                ],
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 955,
                                "src": "14731:3:6"
                              },
                              "referencedDeclaration": 955,
                              "src": "14731:3:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Pet_$955_storage_ptr",
                                "typeString": "struct PetTrace.Pet"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2013,
                        "initialValue": {
                          "baseExpression": {
                            "id": 2010,
                            "name": "pets",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 895,
                            "src": "14749:4:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Pet_$955_storage_$",
                              "typeString": "mapping(uint256 => struct PetTrace.Pet storage ref)"
                            }
                          },
                          "id": 2012,
                          "indexExpression": {
                            "id": 2011,
                            "name": "petId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1958,
                            "src": "14754:5:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "14749:11:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Pet_$955_storage",
                            "typeString": "struct PetTrace.Pet storage ref"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "14731:29:6"
                      },
                      {
                        "expression": {
                          "components": [
                            {
                              "expression": {
                                "id": 2014,
                                "name": "pet",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2009,
                                "src": "14793:3:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Pet_$955_storage_ptr",
                                  "typeString": "struct PetTrace.Pet storage pointer"
                                }
                              },
                              "id": 2015,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "14797:2:6",
                              "memberName": "id",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 913,
                              "src": "14793:6:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "expression": {
                                "id": 2016,
                                "name": "pet",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2009,
                                "src": "14814:3:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Pet_$955_storage_ptr",
                                  "typeString": "struct PetTrace.Pet storage pointer"
                                }
                              },
                              "id": 2017,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "14818:5:6",
                              "memberName": "owner",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 915,
                              "src": "14814:9:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            {
                              "expression": {
                                "id": 2018,
                                "name": "pet",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2009,
                                "src": "14838:3:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Pet_$955_storage_ptr",
                                  "typeString": "struct PetTrace.Pet storage pointer"
                                }
                              },
                              "id": 2019,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "14842:4:6",
                              "memberName": "name",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 917,
                              "src": "14838:8:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_storage",
                                "typeString": "string storage ref"
                              }
                            },
                            {
                              "expression": {
                                "id": 2020,
                                "name": "pet",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2009,
                                "src": "14861:3:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Pet_$955_storage_ptr",
                                  "typeString": "struct PetTrace.Pet storage pointer"
                                }
                              },
                              "id": 2021,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "14865:5:6",
                              "memberName": "breed",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 919,
                              "src": "14861:9:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_storage",
                                "typeString": "string storage ref"
                              }
                            },
                            {
                              "expression": {
                                "id": 2022,
                                "name": "pet",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2009,
                                "src": "14885:3:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Pet_$955_storage_ptr",
                                  "typeString": "struct PetTrace.Pet storage pointer"
                                }
                              },
                              "id": 2023,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "14889:6:6",
                              "memberName": "gender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 921,
                              "src": "14885:10:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_storage",
                                "typeString": "string storage ref"
                              }
                            },
                            {
                              "expression": {
                                "id": 2024,
                                "name": "pet",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2009,
                                "src": "14910:3:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Pet_$955_storage_ptr",
                                  "typeString": "struct PetTrace.Pet storage pointer"
                                }
                              },
                              "id": 2025,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "14914:6:6",
                              "memberName": "sizeCm",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 923,
                              "src": "14910:10:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint128",
                                "typeString": "uint128"
                              }
                            },
                            {
                              "expression": {
                                "id": 2026,
                                "name": "pet",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2009,
                                "src": "14935:3:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Pet_$955_storage_ptr",
                                  "typeString": "struct PetTrace.Pet storage pointer"
                                }
                              },
                              "id": 2027,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "14939:9:6",
                              "memberName": "ageMonths",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 925,
                              "src": "14935:13:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint128",
                                "typeString": "uint128"
                              }
                            },
                            {
                              "expression": {
                                "id": 2028,
                                "name": "pet",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2009,
                                "src": "14963:3:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Pet_$955_storage_ptr",
                                  "typeString": "struct PetTrace.Pet storage pointer"
                                }
                              },
                              "id": 2029,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "14967:12:6",
                              "memberName": "dateTimeLost",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 927,
                              "src": "14963:16:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_storage",
                                "typeString": "string storage ref"
                              }
                            },
                            {
                              "expression": {
                                "id": 2030,
                                "name": "pet",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2009,
                                "src": "14994:3:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Pet_$955_storage_ptr",
                                  "typeString": "struct PetTrace.Pet storage pointer"
                                }
                              },
                              "id": 2031,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "14998:11:6",
                              "memberName": "description",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 929,
                              "src": "14994:15:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_storage",
                                "typeString": "string storage ref"
                              }
                            },
                            {
                              "expression": {
                                "id": 2032,
                                "name": "pet",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2009,
                                "src": "15024:3:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Pet_$955_storage_ptr",
                                  "typeString": "struct PetTrace.Pet storage pointer"
                                }
                              },
                              "id": 2033,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "15028:8:6",
                              "memberName": "imageUrl",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 931,
                              "src": "15024:12:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_storage",
                                "typeString": "string storage ref"
                              }
                            },
                            {
                              "expression": {
                                "id": 2034,
                                "name": "pet",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2009,
                                "src": "15051:3:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Pet_$955_storage_ptr",
                                  "typeString": "struct PetTrace.Pet storage pointer"
                                }
                              },
                              "id": 2035,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "15055:16:6",
                              "memberName": "lastSeenLocation",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 933,
                              "src": "15051:20:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_storage",
                                "typeString": "string storage ref"
                              }
                            },
                            {
                              "expression": {
                                "id": 2036,
                                "name": "pet",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2009,
                                "src": "15086:3:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Pet_$955_storage_ptr",
                                  "typeString": "struct PetTrace.Pet storage pointer"
                                }
                              },
                              "id": 2037,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "15090:11:6",
                              "memberName": "contactName",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 935,
                              "src": "15086:15:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_storage",
                                "typeString": "string storage ref"
                              }
                            },
                            {
                              "expression": {
                                "id": 2038,
                                "name": "pet",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2009,
                                "src": "15116:3:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Pet_$955_storage_ptr",
                                  "typeString": "struct PetTrace.Pet storage pointer"
                                }
                              },
                              "id": 2039,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "15120:12:6",
                              "memberName": "contactPhone",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 937,
                              "src": "15116:16:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_storage",
                                "typeString": "string storage ref"
                              }
                            },
                            {
                              "expression": {
                                "id": 2040,
                                "name": "pet",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2009,
                                "src": "15147:3:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Pet_$955_storage_ptr",
                                  "typeString": "struct PetTrace.Pet storage pointer"
                                }
                              },
                              "id": 2041,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "15151:12:6",
                              "memberName": "contactEmail",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 939,
                              "src": "15147:16:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_storage",
                                "typeString": "string storage ref"
                              }
                            },
                            {
                              "expression": {
                                "id": 2042,
                                "name": "pet",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2009,
                                "src": "15178:3:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Pet_$955_storage_ptr",
                                  "typeString": "struct PetTrace.Pet storage pointer"
                                }
                              },
                              "id": 2043,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "15182:10:6",
                              "memberName": "celoBounty",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 941,
                              "src": "15178:14:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint128",
                                "typeString": "uint128"
                              }
                            },
                            {
                              "expression": {
                                "id": 2044,
                                "name": "pet",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2009,
                                "src": "15207:3:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Pet_$955_storage_ptr",
                                  "typeString": "struct PetTrace.Pet storage pointer"
                                }
                              },
                              "id": 2045,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "15211:10:6",
                              "memberName": "cUSDBounty",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 943,
                              "src": "15207:14:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint128",
                                "typeString": "uint128"
                              }
                            },
                            {
                              "expression": {
                                "id": 2046,
                                "name": "pet",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2009,
                                "src": "15236:3:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Pet_$955_storage_ptr",
                                  "typeString": "struct PetTrace.Pet storage pointer"
                                }
                              },
                              "id": 2047,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "15240:13:6",
                              "memberName": "gDollarBounty",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 945,
                              "src": "15236:17:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint128",
                                "typeString": "uint128"
                              }
                            },
                            {
                              "expression": {
                                "id": 2048,
                                "name": "pet",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2009,
                                "src": "15268:3:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Pet_$955_storage_ptr",
                                  "typeString": "struct PetTrace.Pet storage pointer"
                                }
                              },
                              "id": 2049,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "15272:6:6",
                              "memberName": "status",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 948,
                              "src": "15268:10:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_PetStatus_$911",
                                "typeString": "enum PetTrace.PetStatus"
                              }
                            },
                            {
                              "expression": {
                                "id": 2050,
                                "name": "pet",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2009,
                                "src": "15293:3:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Pet_$955_storage_ptr",
                                  "typeString": "struct PetTrace.Pet storage pointer"
                                }
                              },
                              "id": 2051,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "15297:14:6",
                              "memberName": "ownerConfirmed",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 950,
                              "src": "15293:18:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "expression": {
                                "id": 2052,
                                "name": "pet",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2009,
                                "src": "15326:3:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Pet_$955_storage_ptr",
                                  "typeString": "struct PetTrace.Pet storage pointer"
                                }
                              },
                              "id": 2053,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "15330:15:6",
                              "memberName": "finderConfirmed",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 952,
                              "src": "15326:19:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "expression": {
                                "id": 2054,
                                "name": "pet",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2009,
                                "src": "15360:3:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Pet_$955_storage_ptr",
                                  "typeString": "struct PetTrace.Pet storage pointer"
                                }
                              },
                              "id": 2055,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "15364:6:6",
                              "memberName": "finder",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 954,
                              "src": "15360:10:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "id": 2056,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "14778:603:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_uint256_$_t_address_payable_$_t_string_storage_$_t_string_storage_$_t_string_storage_$_t_uint128_$_t_uint128_$_t_string_storage_$_t_string_storage_$_t_string_storage_$_t_string_storage_$_t_string_storage_$_t_string_storage_$_t_string_storage_$_t_uint128_$_t_uint128_$_t_uint128_$_t_enum$_PetStatus_$911_$_t_bool_$_t_bool_$_t_address_$",
                            "typeString": "tuple(uint256,address payable,string storage ref,string storage ref,string storage ref,uint128,uint128,string storage ref,string storage ref,string storage ref,string storage ref,string storage ref,string storage ref,string storage ref,uint128,uint128,uint128,enum PetTrace.PetStatus,bool,bool,address)"
                          }
                        },
                        "functionReturnParameters": 2006,
                        "id": 2057,
                        "nodeType": "Return",
                        "src": "14771:610:6"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1956,
                    "nodeType": "StructuredDocumentation",
                    "src": "13917:135:6",
                    "text": " @notice Get full pet details\n @param petId ID of pet to retrieve\n @return All pet details in a tuple"
                  },
                  "functionSelector": "d89fd4b4",
                  "id": 2059,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "arguments": [
                        {
                          "id": 1961,
                          "name": "petId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1958,
                          "src": "14161:5:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 1962,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 1960,
                        "name": "petExists",
                        "nameLocations": [
                          "14151:9:6"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 1003,
                        "src": "14151:9:6"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "14151:16:6"
                    }
                  ],
                  "name": "getPetDetails",
                  "nameLocation": "14067:13:6",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1959,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1958,
                        "mutability": "mutable",
                        "name": "petId",
                        "nameLocation": "14099:5:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 2059,
                        "src": "14091:13:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1957,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "14091:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "14080:31:6"
                  },
                  "returnParameters": {
                    "id": 2006,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1964,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 2059,
                        "src": "14200:7:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1963,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "14200:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1966,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 2059,
                        "src": "14222:7:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1965,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "14222:7:6",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1968,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 2059,
                        "src": "14244:13:6",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 1967,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "14244:6:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1970,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 2059,
                        "src": "14272:13:6",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 1969,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "14272:6:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1972,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 2059,
                        "src": "14300:13:6",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 1971,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "14300:6:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1974,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 2059,
                        "src": "14328:7:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        "typeName": {
                          "id": 1973,
                          "name": "uint128",
                          "nodeType": "ElementaryTypeName",
                          "src": "14328:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1976,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 2059,
                        "src": "14350:7:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        "typeName": {
                          "id": 1975,
                          "name": "uint128",
                          "nodeType": "ElementaryTypeName",
                          "src": "14350:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1978,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 2059,
                        "src": "14372:13:6",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 1977,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "14372:6:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1980,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 2059,
                        "src": "14400:13:6",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 1979,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "14400:6:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1982,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 2059,
                        "src": "14428:13:6",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 1981,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "14428:6:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1984,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 2059,
                        "src": "14456:13:6",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 1983,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "14456:6:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1986,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 2059,
                        "src": "14484:13:6",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 1985,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "14484:6:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1988,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 2059,
                        "src": "14512:13:6",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 1987,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "14512:6:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1990,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 2059,
                        "src": "14540:13:6",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 1989,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "14540:6:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1992,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 2059,
                        "src": "14568:7:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        "typeName": {
                          "id": 1991,
                          "name": "uint128",
                          "nodeType": "ElementaryTypeName",
                          "src": "14568:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1994,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 2059,
                        "src": "14590:7:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        "typeName": {
                          "id": 1993,
                          "name": "uint128",
                          "nodeType": "ElementaryTypeName",
                          "src": "14590:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1996,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 2059,
                        "src": "14612:7:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        "typeName": {
                          "id": 1995,
                          "name": "uint128",
                          "nodeType": "ElementaryTypeName",
                          "src": "14612:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1999,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 2059,
                        "src": "14634:9:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_PetStatus_$911",
                          "typeString": "enum PetTrace.PetStatus"
                        },
                        "typeName": {
                          "id": 1998,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 1997,
                            "name": "PetStatus",
                            "nameLocations": [
                              "14634:9:6"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 911,
                            "src": "14634:9:6"
                          },
                          "referencedDeclaration": 911,
                          "src": "14634:9:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_PetStatus_$911",
                            "typeString": "enum PetTrace.PetStatus"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2001,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 2059,
                        "src": "14658:4:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 2000,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "14658:4:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2003,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 2059,
                        "src": "14677:4:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 2002,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "14677:4:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2005,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 2059,
                        "src": "14696:7:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2004,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "14696:7:6",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "14185:529:6"
                  },
                  "scope": 2406,
                  "src": "14058:1331:6",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 2166,
                    "nodeType": "Block",
                    "src": "15642:702:6",
                    "statements": [
                      {
                        "assignments": [
                          2071
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2071,
                            "mutability": "mutable",
                            "name": "count",
                            "nameLocation": "15661:5:6",
                            "nodeType": "VariableDeclaration",
                            "scope": 2166,
                            "src": "15653:13:6",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 2070,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "15653:7:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2073,
                        "initialValue": {
                          "hexValue": "30",
                          "id": 2072,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "15669:1:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "15653:17:6"
                      },
                      {
                        "body": {
                          "id": 2095,
                          "nodeType": "Block",
                          "src": "15751:121:6",
                          "statements": [
                            {
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_enum$_PetStatus_$911",
                                  "typeString": "enum PetTrace.PetStatus"
                                },
                                "id": 2090,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "baseExpression": {
                                      "id": 2084,
                                      "name": "pets",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 895,
                                      "src": "15817:4:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Pet_$955_storage_$",
                                        "typeString": "mapping(uint256 => struct PetTrace.Pet storage ref)"
                                      }
                                    },
                                    "id": 2086,
                                    "indexExpression": {
                                      "id": 2085,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2075,
                                      "src": "15822:1:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "15817:7:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Pet_$955_storage",
                                      "typeString": "struct PetTrace.Pet storage ref"
                                    }
                                  },
                                  "id": 2087,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "15825:6:6",
                                  "memberName": "status",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 948,
                                  "src": "15817:14:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_enum$_PetStatus_$911",
                                    "typeString": "enum PetTrace.PetStatus"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "==",
                                "rightExpression": {
                                  "expression": {
                                    "id": 2088,
                                    "name": "PetStatus",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 911,
                                    "src": "15835:9:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_enum$_PetStatus_$911_$",
                                      "typeString": "type(enum PetTrace.PetStatus)"
                                    }
                                  },
                                  "id": 2089,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberLocation": "15845:6:6",
                                  "memberName": "Active",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 908,
                                  "src": "15835:16:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_enum$_PetStatus_$911",
                                    "typeString": "enum PetTrace.PetStatus"
                                  }
                                },
                                "src": "15817:34:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 2094,
                              "nodeType": "IfStatement",
                              "src": "15813:47:6",
                              "trueBody": {
                                "expression": {
                                  "id": 2092,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "UnaryOperation",
                                  "operator": "++",
                                  "prefix": false,
                                  "src": "15853:7:6",
                                  "subExpression": {
                                    "id": 2091,
                                    "name": "count",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2071,
                                    "src": "15853:5:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 2093,
                                "nodeType": "ExpressionStatement",
                                "src": "15853:7:6"
                              }
                            }
                          ]
                        },
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 2080,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 2078,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2075,
                            "src": "15731:1:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "id": 2079,
                            "name": "nextPetId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 890,
                            "src": "15735:9:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "15731:13:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 2096,
                        "initializationExpression": {
                          "assignments": [
                            2075
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 2075,
                              "mutability": "mutable",
                              "name": "i",
                              "nameLocation": "15724:1:6",
                              "nodeType": "VariableDeclaration",
                              "scope": 2096,
                              "src": "15716:9:6",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 2074,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "15716:7:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 2077,
                          "initialValue": {
                            "hexValue": "30",
                            "id": 2076,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "15728:1:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "15716:13:6"
                        },
                        "isSimpleCounterLoop": true,
                        "loopExpression": {
                          "expression": {
                            "id": 2082,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "++",
                            "prefix": false,
                            "src": "15746:3:6",
                            "subExpression": {
                              "id": 2081,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2075,
                              "src": "15746:1:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 2083,
                          "nodeType": "ExpressionStatement",
                          "src": "15746:3:6"
                        },
                        "nodeType": "ForStatement",
                        "src": "15711:161:6"
                      },
                      {
                        "assignments": [
                          2101
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2101,
                            "mutability": "mutable",
                            "name": "ids",
                            "nameLocation": "15931:3:6",
                            "nodeType": "VariableDeclaration",
                            "scope": 2166,
                            "src": "15914:20:6",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[]"
                            },
                            "typeName": {
                              "baseType": {
                                "id": 2099,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "15914:7:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 2100,
                              "nodeType": "ArrayTypeName",
                              "src": "15914:9:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                                "typeString": "uint256[]"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2107,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 2105,
                              "name": "count",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2071,
                              "src": "15951:5:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 2104,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "NewExpression",
                            "src": "15937:13:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                              "typeString": "function (uint256) pure returns (uint256[] memory)"
                            },
                            "typeName": {
                              "baseType": {
                                "id": 2102,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "15941:7:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 2103,
                              "nodeType": "ArrayTypeName",
                              "src": "15941:9:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                                "typeString": "uint256[]"
                              }
                            }
                          },
                          "id": 2106,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "15937:20:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                            "typeString": "uint256[] memory"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "15914:43:6"
                      },
                      {
                        "assignments": [
                          2112
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2112,
                            "mutability": "mutable",
                            "name": "lostPets",
                            "nameLocation": "15981:8:6",
                            "nodeType": "VariableDeclaration",
                            "scope": 2166,
                            "src": "15968:21:6",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_Pet_$955_memory_ptr_$dyn_memory_ptr",
                              "typeString": "struct PetTrace.Pet[]"
                            },
                            "typeName": {
                              "baseType": {
                                "id": 2110,
                                "nodeType": "UserDefinedTypeName",
                                "pathNode": {
                                  "id": 2109,
                                  "name": "Pet",
                                  "nameLocations": [
                                    "15968:3:6"
                                  ],
                                  "nodeType": "IdentifierPath",
                                  "referencedDeclaration": 955,
                                  "src": "15968:3:6"
                                },
                                "referencedDeclaration": 955,
                                "src": "15968:3:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Pet_$955_storage_ptr",
                                  "typeString": "struct PetTrace.Pet"
                                }
                              },
                              "id": 2111,
                              "nodeType": "ArrayTypeName",
                              "src": "15968:5:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_Pet_$955_storage_$dyn_storage_ptr",
                                "typeString": "struct PetTrace.Pet[]"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2119,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 2117,
                              "name": "count",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2071,
                              "src": "16002:5:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 2116,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "NewExpression",
                            "src": "15992:9:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_Pet_$955_memory_ptr_$dyn_memory_ptr_$",
                              "typeString": "function (uint256) pure returns (struct PetTrace.Pet memory[] memory)"
                            },
                            "typeName": {
                              "baseType": {
                                "id": 2114,
                                "nodeType": "UserDefinedTypeName",
                                "pathNode": {
                                  "id": 2113,
                                  "name": "Pet",
                                  "nameLocations": [
                                    "15996:3:6"
                                  ],
                                  "nodeType": "IdentifierPath",
                                  "referencedDeclaration": 955,
                                  "src": "15996:3:6"
                                },
                                "referencedDeclaration": 955,
                                "src": "15996:3:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Pet_$955_storage_ptr",
                                  "typeString": "struct PetTrace.Pet"
                                }
                              },
                              "id": 2115,
                              "nodeType": "ArrayTypeName",
                              "src": "15996:5:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_Pet_$955_storage_$dyn_storage_ptr",
                                "typeString": "struct PetTrace.Pet[]"
                              }
                            }
                          },
                          "id": 2118,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "15992:16:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_Pet_$955_memory_ptr_$dyn_memory_ptr",
                            "typeString": "struct PetTrace.Pet memory[] memory"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "15968:40:6"
                      },
                      {
                        "assignments": [
                          2121
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2121,
                            "mutability": "mutable",
                            "name": "index",
                            "nameLocation": "16027:5:6",
                            "nodeType": "VariableDeclaration",
                            "scope": 2166,
                            "src": "16019:13:6",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 2120,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "16019:7:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2123,
                        "initialValue": {
                          "hexValue": "30",
                          "id": 2122,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "16035:1:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "16019:17:6"
                      },
                      {
                        "body": {
                          "id": 2160,
                          "nodeType": "Block",
                          "src": "16117:185:6",
                          "statements": [
                            {
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_enum$_PetStatus_$911",
                                  "typeString": "enum PetTrace.PetStatus"
                                },
                                "id": 2140,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "baseExpression": {
                                      "id": 2134,
                                      "name": "pets",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 895,
                                      "src": "16136:4:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Pet_$955_storage_$",
                                        "typeString": "mapping(uint256 => struct PetTrace.Pet storage ref)"
                                      }
                                    },
                                    "id": 2136,
                                    "indexExpression": {
                                      "id": 2135,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2125,
                                      "src": "16141:1:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "16136:7:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Pet_$955_storage",
                                      "typeString": "struct PetTrace.Pet storage ref"
                                    }
                                  },
                                  "id": 2137,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "16144:6:6",
                                  "memberName": "status",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 948,
                                  "src": "16136:14:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_enum$_PetStatus_$911",
                                    "typeString": "enum PetTrace.PetStatus"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "==",
                                "rightExpression": {
                                  "expression": {
                                    "id": 2138,
                                    "name": "PetStatus",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 911,
                                    "src": "16154:9:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_enum$_PetStatus_$911_$",
                                      "typeString": "type(enum PetTrace.PetStatus)"
                                    }
                                  },
                                  "id": 2139,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberLocation": "16164:6:6",
                                  "memberName": "Active",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 908,
                                  "src": "16154:16:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_enum$_PetStatus_$911",
                                    "typeString": "enum PetTrace.PetStatus"
                                  }
                                },
                                "src": "16136:34:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 2159,
                              "nodeType": "IfStatement",
                              "src": "16132:159:6",
                              "trueBody": {
                                "id": 2158,
                                "nodeType": "Block",
                                "src": "16172:119:6",
                                "statements": [
                                  {
                                    "expression": {
                                      "id": 2145,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftHandSide": {
                                        "baseExpression": {
                                          "id": 2141,
                                          "name": "ids",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 2101,
                                          "src": "16191:3:6",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                            "typeString": "uint256[] memory"
                                          }
                                        },
                                        "id": 2143,
                                        "indexExpression": {
                                          "id": 2142,
                                          "name": "index",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 2121,
                                          "src": "16195:5:6",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": true,
                                        "nodeType": "IndexAccess",
                                        "src": "16191:10:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "Assignment",
                                      "operator": "=",
                                      "rightHandSide": {
                                        "id": 2144,
                                        "name": "i",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2125,
                                        "src": "16204:1:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "16191:14:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 2146,
                                    "nodeType": "ExpressionStatement",
                                    "src": "16191:14:6"
                                  },
                                  {
                                    "expression": {
                                      "id": 2153,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftHandSide": {
                                        "baseExpression": {
                                          "id": 2147,
                                          "name": "lostPets",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 2112,
                                          "src": "16224:8:6",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_array$_t_struct$_Pet_$955_memory_ptr_$dyn_memory_ptr",
                                            "typeString": "struct PetTrace.Pet memory[] memory"
                                          }
                                        },
                                        "id": 2149,
                                        "indexExpression": {
                                          "id": 2148,
                                          "name": "index",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 2121,
                                          "src": "16233:5:6",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": true,
                                        "nodeType": "IndexAccess",
                                        "src": "16224:15:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_Pet_$955_memory_ptr",
                                          "typeString": "struct PetTrace.Pet memory"
                                        }
                                      },
                                      "nodeType": "Assignment",
                                      "operator": "=",
                                      "rightHandSide": {
                                        "baseExpression": {
                                          "id": 2150,
                                          "name": "pets",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 895,
                                          "src": "16242:4:6",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Pet_$955_storage_$",
                                            "typeString": "mapping(uint256 => struct PetTrace.Pet storage ref)"
                                          }
                                        },
                                        "id": 2152,
                                        "indexExpression": {
                                          "id": 2151,
                                          "name": "i",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 2125,
                                          "src": "16247:1:6",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "IndexAccess",
                                        "src": "16242:7:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_Pet_$955_storage",
                                          "typeString": "struct PetTrace.Pet storage ref"
                                        }
                                      },
                                      "src": "16224:25:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Pet_$955_memory_ptr",
                                        "typeString": "struct PetTrace.Pet memory"
                                      }
                                    },
                                    "id": 2154,
                                    "nodeType": "ExpressionStatement",
                                    "src": "16224:25:6"
                                  },
                                  {
                                    "expression": {
                                      "id": 2156,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "UnaryOperation",
                                      "operator": "++",
                                      "prefix": false,
                                      "src": "16268:7:6",
                                      "subExpression": {
                                        "id": 2155,
                                        "name": "index",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2121,
                                        "src": "16268:5:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 2157,
                                    "nodeType": "ExpressionStatement",
                                    "src": "16268:7:6"
                                  }
                                ]
                              }
                            }
                          ]
                        },
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 2130,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 2128,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2125,
                            "src": "16097:1:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "id": 2129,
                            "name": "nextPetId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 890,
                            "src": "16101:9:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "16097:13:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 2161,
                        "initializationExpression": {
                          "assignments": [
                            2125
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 2125,
                              "mutability": "mutable",
                              "name": "i",
                              "nameLocation": "16090:1:6",
                              "nodeType": "VariableDeclaration",
                              "scope": 2161,
                              "src": "16082:9:6",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 2124,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "16082:7:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 2127,
                          "initialValue": {
                            "hexValue": "30",
                            "id": 2126,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "16094:1:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "16082:13:6"
                        },
                        "isSimpleCounterLoop": true,
                        "loopExpression": {
                          "expression": {
                            "id": 2132,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "++",
                            "prefix": false,
                            "src": "16112:3:6",
                            "subExpression": {
                              "id": 2131,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2125,
                              "src": "16112:1:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 2133,
                          "nodeType": "ExpressionStatement",
                          "src": "16112:3:6"
                        },
                        "nodeType": "ForStatement",
                        "src": "16077:225:6"
                      },
                      {
                        "expression": {
                          "components": [
                            {
                              "id": 2162,
                              "name": "ids",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2101,
                              "src": "16322:3:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                "typeString": "uint256[] memory"
                              }
                            },
                            {
                              "id": 2163,
                              "name": "lostPets",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2112,
                              "src": "16327:8:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_Pet_$955_memory_ptr_$dyn_memory_ptr",
                                "typeString": "struct PetTrace.Pet memory[] memory"
                              }
                            }
                          ],
                          "id": 2164,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "16321:15:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_struct$_Pet_$955_memory_ptr_$dyn_memory_ptr_$",
                            "typeString": "tuple(uint256[] memory,struct PetTrace.Pet memory[] memory)"
                          }
                        },
                        "functionReturnParameters": 2069,
                        "id": 2165,
                        "nodeType": "Return",
                        "src": "16314:22:6"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 2060,
                    "nodeType": "StructuredDocumentation",
                    "src": "15397:128:6",
                    "text": " @notice Get all lost pets (caution: may hit gas limits)\n @return Two arrays: pet IDs and Pet structs"
                  },
                  "functionSelector": "543df5a3",
                  "id": 2167,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getAllLostPets",
                  "nameLocation": "15540:14:6",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2061,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "15554:2:6"
                  },
                  "returnParameters": {
                    "id": 2069,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2064,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 2167,
                        "src": "15605:16:6",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 2062,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "15605:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 2063,
                          "nodeType": "ArrayTypeName",
                          "src": "15605:9:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                            "typeString": "uint256[]"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2068,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 2167,
                        "src": "15623:12:6",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Pet_$955_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct PetTrace.Pet[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 2066,
                            "nodeType": "UserDefinedTypeName",
                            "pathNode": {
                              "id": 2065,
                              "name": "Pet",
                              "nameLocations": [
                                "15623:3:6"
                              ],
                              "nodeType": "IdentifierPath",
                              "referencedDeclaration": 955,
                              "src": "15623:3:6"
                            },
                            "referencedDeclaration": 955,
                            "src": "15623:3:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Pet_$955_storage_ptr",
                              "typeString": "struct PetTrace.Pet"
                            }
                          },
                          "id": 2067,
                          "nodeType": "ArrayTypeName",
                          "src": "15623:5:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_Pet_$955_storage_$dyn_storage_ptr",
                            "typeString": "struct PetTrace.Pet[]"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "15604:32:6"
                  },
                  "scope": 2406,
                  "src": "15531:813:6",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 2208,
                    "nodeType": "Block",
                    "src": "16409:181:6",
                    "statements": [
                      {
                        "assignments": [
                          2178
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2178,
                            "mutability": "mutable",
                            "name": "result",
                            "nameLocation": "16433:6:6",
                            "nodeType": "VariableDeclaration",
                            "scope": 2208,
                            "src": "16420:19:6",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_Pet_$955_memory_ptr_$dyn_memory_ptr",
                              "typeString": "struct PetTrace.Pet[]"
                            },
                            "typeName": {
                              "baseType": {
                                "id": 2176,
                                "nodeType": "UserDefinedTypeName",
                                "pathNode": {
                                  "id": 2175,
                                  "name": "Pet",
                                  "nameLocations": [
                                    "16420:3:6"
                                  ],
                                  "nodeType": "IdentifierPath",
                                  "referencedDeclaration": 955,
                                  "src": "16420:3:6"
                                },
                                "referencedDeclaration": 955,
                                "src": "16420:3:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Pet_$955_storage_ptr",
                                  "typeString": "struct PetTrace.Pet"
                                }
                              },
                              "id": 2177,
                              "nodeType": "ArrayTypeName",
                              "src": "16420:5:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_Pet_$955_storage_$dyn_storage_ptr",
                                "typeString": "struct PetTrace.Pet[]"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2185,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 2183,
                              "name": "nextPetId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 890,
                              "src": "16452:9:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 2182,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "NewExpression",
                            "src": "16442:9:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_Pet_$955_memory_ptr_$dyn_memory_ptr_$",
                              "typeString": "function (uint256) pure returns (struct PetTrace.Pet memory[] memory)"
                            },
                            "typeName": {
                              "baseType": {
                                "id": 2180,
                                "nodeType": "UserDefinedTypeName",
                                "pathNode": {
                                  "id": 2179,
                                  "name": "Pet",
                                  "nameLocations": [
                                    "16446:3:6"
                                  ],
                                  "nodeType": "IdentifierPath",
                                  "referencedDeclaration": 955,
                                  "src": "16446:3:6"
                                },
                                "referencedDeclaration": 955,
                                "src": "16446:3:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Pet_$955_storage_ptr",
                                  "typeString": "struct PetTrace.Pet"
                                }
                              },
                              "id": 2181,
                              "nodeType": "ArrayTypeName",
                              "src": "16446:5:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_Pet_$955_storage_$dyn_storage_ptr",
                                "typeString": "struct PetTrace.Pet[]"
                              }
                            }
                          },
                          "id": 2184,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "16442:20:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_Pet_$955_memory_ptr_$dyn_memory_ptr",
                            "typeString": "struct PetTrace.Pet memory[] memory"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "16420:42:6"
                      },
                      {
                        "body": {
                          "id": 2204,
                          "nodeType": "Block",
                          "src": "16513:46:6",
                          "statements": [
                            {
                              "expression": {
                                "id": 2202,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "baseExpression": {
                                    "id": 2196,
                                    "name": "result",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2178,
                                    "src": "16528:6:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_struct$_Pet_$955_memory_ptr_$dyn_memory_ptr",
                                      "typeString": "struct PetTrace.Pet memory[] memory"
                                    }
                                  },
                                  "id": 2198,
                                  "indexExpression": {
                                    "id": 2197,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2187,
                                    "src": "16535:1:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "16528:9:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Pet_$955_memory_ptr",
                                    "typeString": "struct PetTrace.Pet memory"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "baseExpression": {
                                    "id": 2199,
                                    "name": "pets",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 895,
                                    "src": "16540:4:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Pet_$955_storage_$",
                                      "typeString": "mapping(uint256 => struct PetTrace.Pet storage ref)"
                                    }
                                  },
                                  "id": 2201,
                                  "indexExpression": {
                                    "id": 2200,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2187,
                                    "src": "16545:1:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "16540:7:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Pet_$955_storage",
                                    "typeString": "struct PetTrace.Pet storage ref"
                                  }
                                },
                                "src": "16528:19:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Pet_$955_memory_ptr",
                                  "typeString": "struct PetTrace.Pet memory"
                                }
                              },
                              "id": 2203,
                              "nodeType": "ExpressionStatement",
                              "src": "16528:19:6"
                            }
                          ]
                        },
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 2192,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 2190,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2187,
                            "src": "16493:1:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "id": 2191,
                            "name": "nextPetId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 890,
                            "src": "16497:9:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "16493:13:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 2205,
                        "initializationExpression": {
                          "assignments": [
                            2187
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 2187,
                              "mutability": "mutable",
                              "name": "i",
                              "nameLocation": "16486:1:6",
                              "nodeType": "VariableDeclaration",
                              "scope": 2205,
                              "src": "16478:9:6",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 2186,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "16478:7:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 2189,
                          "initialValue": {
                            "hexValue": "30",
                            "id": 2188,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "16490:1:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "16478:13:6"
                        },
                        "isSimpleCounterLoop": true,
                        "loopExpression": {
                          "expression": {
                            "id": 2194,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "++",
                            "prefix": false,
                            "src": "16508:3:6",
                            "subExpression": {
                              "id": 2193,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2187,
                              "src": "16508:1:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 2195,
                          "nodeType": "ExpressionStatement",
                          "src": "16508:3:6"
                        },
                        "nodeType": "ForStatement",
                        "src": "16473:86:6"
                      },
                      {
                        "expression": {
                          "id": 2206,
                          "name": "result",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2178,
                          "src": "16576:6:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_Pet_$955_memory_ptr_$dyn_memory_ptr",
                            "typeString": "struct PetTrace.Pet memory[] memory"
                          }
                        },
                        "functionReturnParameters": 2173,
                        "id": 2207,
                        "nodeType": "Return",
                        "src": "16569:13:6"
                      }
                    ]
                  },
                  "functionSelector": "5b236d97",
                  "id": 2209,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getAllPets",
                  "nameLocation": "16361:10:6",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2168,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "16371:2:6"
                  },
                  "returnParameters": {
                    "id": 2173,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2172,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 2209,
                        "src": "16395:12:6",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Pet_$955_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct PetTrace.Pet[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 2170,
                            "nodeType": "UserDefinedTypeName",
                            "pathNode": {
                              "id": 2169,
                              "name": "Pet",
                              "nameLocations": [
                                "16395:3:6"
                              ],
                              "nodeType": "IdentifierPath",
                              "referencedDeclaration": 955,
                              "src": "16395:3:6"
                            },
                            "referencedDeclaration": 955,
                            "src": "16395:3:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Pet_$955_storage_ptr",
                              "typeString": "struct PetTrace.Pet"
                            }
                          },
                          "id": 2171,
                          "nodeType": "ArrayTypeName",
                          "src": "16395:5:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_Pet_$955_storage_$dyn_storage_ptr",
                            "typeString": "struct PetTrace.Pet[]"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "16394:14:6"
                  },
                  "scope": 2406,
                  "src": "16352:238:6",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 2244,
                    "nodeType": "Block",
                    "src": "16754:189:6",
                    "statements": [
                      {
                        "assignments": [
                          2216
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2216,
                            "mutability": "mutable",
                            "name": "counter",
                            "nameLocation": "16773:7:6",
                            "nodeType": "VariableDeclaration",
                            "scope": 2244,
                            "src": "16765:15:6",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 2215,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "16765:7:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2218,
                        "initialValue": {
                          "hexValue": "30",
                          "id": 2217,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "16783:1:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "16765:19:6"
                      },
                      {
                        "body": {
                          "id": 2240,
                          "nodeType": "Block",
                          "src": "16835:76:6",
                          "statements": [
                            {
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_enum$_PetStatus_$911",
                                  "typeString": "enum PetTrace.PetStatus"
                                },
                                "id": 2235,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "baseExpression": {
                                      "id": 2229,
                                      "name": "pets",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 895,
                                      "src": "16854:4:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Pet_$955_storage_$",
                                        "typeString": "mapping(uint256 => struct PetTrace.Pet storage ref)"
                                      }
                                    },
                                    "id": 2231,
                                    "indexExpression": {
                                      "id": 2230,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2220,
                                      "src": "16859:1:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "16854:7:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Pet_$955_storage",
                                      "typeString": "struct PetTrace.Pet storage ref"
                                    }
                                  },
                                  "id": 2232,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "16862:6:6",
                                  "memberName": "status",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 948,
                                  "src": "16854:14:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_enum$_PetStatus_$911",
                                    "typeString": "enum PetTrace.PetStatus"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "==",
                                "rightExpression": {
                                  "expression": {
                                    "id": 2233,
                                    "name": "PetStatus",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 911,
                                    "src": "16872:9:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_enum$_PetStatus_$911_$",
                                      "typeString": "type(enum PetTrace.PetStatus)"
                                    }
                                  },
                                  "id": 2234,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberLocation": "16882:6:6",
                                  "memberName": "Active",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 908,
                                  "src": "16872:16:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_enum$_PetStatus_$911",
                                    "typeString": "enum PetTrace.PetStatus"
                                  }
                                },
                                "src": "16854:34:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 2239,
                              "nodeType": "IfStatement",
                              "src": "16850:49:6",
                              "trueBody": {
                                "expression": {
                                  "id": 2237,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "UnaryOperation",
                                  "operator": "++",
                                  "prefix": false,
                                  "src": "16890:9:6",
                                  "subExpression": {
                                    "id": 2236,
                                    "name": "counter",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2216,
                                    "src": "16890:7:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 2238,
                                "nodeType": "ExpressionStatement",
                                "src": "16890:9:6"
                              }
                            }
                          ]
                        },
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 2225,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 2223,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2220,
                            "src": "16815:1:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "id": 2224,
                            "name": "nextPetId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 890,
                            "src": "16819:9:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "16815:13:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 2241,
                        "initializationExpression": {
                          "assignments": [
                            2220
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 2220,
                              "mutability": "mutable",
                              "name": "i",
                              "nameLocation": "16808:1:6",
                              "nodeType": "VariableDeclaration",
                              "scope": 2241,
                              "src": "16800:9:6",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 2219,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "16800:7:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 2222,
                          "initialValue": {
                            "hexValue": "30",
                            "id": 2221,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "16812:1:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "16800:13:6"
                        },
                        "isSimpleCounterLoop": true,
                        "loopExpression": {
                          "expression": {
                            "id": 2227,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "++",
                            "prefix": false,
                            "src": "16830:3:6",
                            "subExpression": {
                              "id": 2226,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2220,
                              "src": "16830:1:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 2228,
                          "nodeType": "ExpressionStatement",
                          "src": "16830:3:6"
                        },
                        "nodeType": "ForStatement",
                        "src": "16795:116:6"
                      },
                      {
                        "expression": {
                          "id": 2242,
                          "name": "counter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2216,
                          "src": "16928:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 2214,
                        "id": 2243,
                        "nodeType": "Return",
                        "src": "16921:14:6"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 2210,
                    "nodeType": "StructuredDocumentation",
                    "src": "16598:92:6",
                    "text": " @notice Get count of lost pets\n @return Number of pets not found"
                  },
                  "functionSelector": "8b504c17",
                  "id": 2245,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getLostPetsCount",
                  "nameLocation": "16705:16:6",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2211,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "16721:2:6"
                  },
                  "returnParameters": {
                    "id": 2214,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2213,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 2245,
                        "src": "16745:7:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2212,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "16745:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "16744:9:6"
                  },
                  "scope": 2406,
                  "src": "16696:247:6",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 2298,
                    "nodeType": "Block",
                    "src": "17164:311:6",
                    "statements": [
                      {
                        "assignments": [
                          2257
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2257,
                            "mutability": "mutable",
                            "name": "b",
                            "nameLocation": "17188:1:6",
                            "nodeType": "VariableDeclaration",
                            "scope": 2298,
                            "src": "17175:14:6",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes"
                            },
                            "typeName": {
                              "id": 2256,
                              "name": "bytes",
                              "nodeType": "ElementaryTypeName",
                              "src": "17175:5:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_storage_ptr",
                                "typeString": "bytes"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2262,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 2260,
                              "name": "str",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2247,
                              "src": "17198:3:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_calldata_ptr",
                                "typeString": "string calldata"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_string_calldata_ptr",
                                "typeString": "string calldata"
                              }
                            ],
                            "id": 2259,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "17192:5:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                              "typeString": "type(bytes storage pointer)"
                            },
                            "typeName": {
                              "id": 2258,
                              "name": "bytes",
                              "nodeType": "ElementaryTypeName",
                              "src": "17192:5:6",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 2261,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "17192:10:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_calldata_ptr",
                            "typeString": "bytes calldata"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "17175:27:6"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 2272,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 2267,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "id": 2264,
                                    "name": "b",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2257,
                                    "src": "17235:1:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  },
                                  "id": 2265,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "17237:6:6",
                                  "memberName": "length",
                                  "nodeType": "MemberAccess",
                                  "src": "17235:8:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": ">=",
                                "rightExpression": {
                                  "id": 2266,
                                  "name": "min",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2249,
                                  "src": "17247:3:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "17235:15:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "&&",
                              "rightExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 2271,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "id": 2268,
                                    "name": "b",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2257,
                                    "src": "17254:1:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  },
                                  "id": 2269,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "17256:6:6",
                                  "memberName": "length",
                                  "nodeType": "MemberAccess",
                                  "src": "17254:8:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "<=",
                                "rightExpression": {
                                  "id": 2270,
                                  "name": "max",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2251,
                                  "src": "17266:3:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "17254:15:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "src": "17235:34:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "id": 2277,
                                      "name": "field",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2253,
                                      "src": "17308:5:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_string_memory_ptr",
                                        "typeString": "string memory"
                                      }
                                    },
                                    {
                                      "hexValue": "206c656e67746820696e76616c6964",
                                      "id": 2278,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "string",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "17315:17:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_stringliteral_eb9d57ae31cc67a4cca0d62d6e00760b6e3da7c949170324e6592524e9e27772",
                                        "typeString": "literal_string \" length invalid\""
                                      },
                                      "value": " length invalid"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_string_memory_ptr",
                                        "typeString": "string memory"
                                      },
                                      {
                                        "typeIdentifier": "t_stringliteral_eb9d57ae31cc67a4cca0d62d6e00760b6e3da7c949170324e6592524e9e27772",
                                        "typeString": "literal_string \" length invalid\""
                                      }
                                    ],
                                    "expression": {
                                      "id": 2275,
                                      "name": "abi",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -1,
                                      "src": "17291:3:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_abi",
                                        "typeString": "abi"
                                      }
                                    },
                                    "id": 2276,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "memberLocation": "17295:12:6",
                                    "memberName": "encodePacked",
                                    "nodeType": "MemberAccess",
                                    "src": "17291:16:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                      "typeString": "function () pure returns (bytes memory)"
                                    }
                                  },
                                  "id": 2279,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "17291:42:6",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                ],
                                "id": 2274,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "17284:6:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_string_storage_ptr_$",
                                  "typeString": "type(string storage pointer)"
                                },
                                "typeName": {
                                  "id": 2273,
                                  "name": "string",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "17284:6:6",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 2280,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "17284:50:6",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            ],
                            "id": 2263,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "17213:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 2281,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "17213:132:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2282,
                        "nodeType": "ExpressionStatement",
                        "src": "17213:132:6"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 2287,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "UnaryOperation",
                              "operator": "!",
                              "prefix": true,
                              "src": "17378:12:6",
                              "subExpression": {
                                "arguments": [
                                  {
                                    "id": 2285,
                                    "name": "b",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2257,
                                    "src": "17388:1:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  ],
                                  "id": 2284,
                                  "name": "_isBlank",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2330,
                                  "src": "17379:8:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_bool_$",
                                    "typeString": "function (bytes memory) pure returns (bool)"
                                  }
                                },
                                "id": 2286,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "17379:11:6",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "id": 2292,
                                      "name": "field",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2253,
                                      "src": "17429:5:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_string_memory_ptr",
                                        "typeString": "string memory"
                                      }
                                    },
                                    {
                                      "hexValue": "2063616e6e6f7420626520626c616e6b",
                                      "id": 2293,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "string",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "17436:18:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_stringliteral_0bb1cb631d0d40a55f7c285ae4eaedad98c33f7f814ea994f959bcf63822f2c5",
                                        "typeString": "literal_string \" cannot be blank\""
                                      },
                                      "value": " cannot be blank"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_string_memory_ptr",
                                        "typeString": "string memory"
                                      },
                                      {
                                        "typeIdentifier": "t_stringliteral_0bb1cb631d0d40a55f7c285ae4eaedad98c33f7f814ea994f959bcf63822f2c5",
                                        "typeString": "literal_string \" cannot be blank\""
                                      }
                                    ],
                                    "expression": {
                                      "id": 2290,
                                      "name": "abi",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -1,
                                      "src": "17412:3:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_abi",
                                        "typeString": "abi"
                                      }
                                    },
                                    "id": 2291,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "memberLocation": "17416:12:6",
                                    "memberName": "encodePacked",
                                    "nodeType": "MemberAccess",
                                    "src": "17412:16:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                      "typeString": "function () pure returns (bytes memory)"
                                    }
                                  },
                                  "id": 2294,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "17412:43:6",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                ],
                                "id": 2289,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "17405:6:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_string_storage_ptr_$",
                                  "typeString": "type(string storage pointer)"
                                },
                                "typeName": {
                                  "id": 2288,
                                  "name": "string",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "17405:6:6",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 2295,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "17405:51:6",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            ],
                            "id": 2283,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "17356:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 2296,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "17356:111:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2297,
                        "nodeType": "ExpressionStatement",
                        "src": "17356:111:6"
                      }
                    ]
                  },
                  "id": 2299,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_validateString",
                  "nameLocation": "17029:15:6",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2254,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2247,
                        "mutability": "mutable",
                        "name": "str",
                        "nameLocation": "17071:3:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 2299,
                        "src": "17055:19:6",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 2246,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "17055:6:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2249,
                        "mutability": "mutable",
                        "name": "min",
                        "nameLocation": "17090:3:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 2299,
                        "src": "17085:8:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2248,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "17085:4:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2251,
                        "mutability": "mutable",
                        "name": "max",
                        "nameLocation": "17109:3:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 2299,
                        "src": "17104:8:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2250,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "17104:4:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2253,
                        "mutability": "mutable",
                        "name": "field",
                        "nameLocation": "17137:5:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 2299,
                        "src": "17123:19:6",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 2252,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "17123:6:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "17044:105:6"
                  },
                  "returnParameters": {
                    "id": 2255,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "17164:0:6"
                  },
                  "scope": 2406,
                  "src": "17020:455:6",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 2329,
                    "nodeType": "Block",
                    "src": "17546:132:6",
                    "statements": [
                      {
                        "body": {
                          "id": 2325,
                          "nodeType": "Block",
                          "src": "17593:56:6",
                          "statements": [
                            {
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_bytes1",
                                  "typeString": "bytes1"
                                },
                                "id": 2321,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "baseExpression": {
                                    "id": 2317,
                                    "name": "b",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2301,
                                    "src": "17612:1:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  },
                                  "id": 2319,
                                  "indexExpression": {
                                    "id": 2318,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2307,
                                    "src": "17614:1:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "17612:4:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes1",
                                    "typeString": "bytes1"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "!=",
                                "rightExpression": {
                                  "hexValue": "20",
                                  "id": 2320,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "string",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "17620:3:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_stringliteral_681afa780d17da29203322b473d3f210a7d621259a4e6ce9e403f5a266ff719a",
                                    "typeString": "literal_string \" \""
                                  },
                                  "value": " "
                                },
                                "src": "17612:11:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 2324,
                              "nodeType": "IfStatement",
                              "src": "17608:29:6",
                              "trueBody": {
                                "expression": {
                                  "hexValue": "66616c7365",
                                  "id": 2322,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "bool",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "17632:5:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  "value": "false"
                                },
                                "functionReturnParameters": 2305,
                                "id": 2323,
                                "nodeType": "Return",
                                "src": "17625:12:6"
                              }
                            }
                          ]
                        },
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 2313,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 2310,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2307,
                            "src": "17574:1:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "expression": {
                              "id": 2311,
                              "name": "b",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2301,
                              "src": "17578:1:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            "id": 2312,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "17580:6:6",
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "17578:8:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "17574:12:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 2326,
                        "initializationExpression": {
                          "assignments": [
                            2307
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 2307,
                              "mutability": "mutable",
                              "name": "i",
                              "nameLocation": "17567:1:6",
                              "nodeType": "VariableDeclaration",
                              "scope": 2326,
                              "src": "17562:6:6",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 2306,
                                "name": "uint",
                                "nodeType": "ElementaryTypeName",
                                "src": "17562:4:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 2309,
                          "initialValue": {
                            "hexValue": "30",
                            "id": 2308,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "17571:1:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "17562:10:6"
                        },
                        "isSimpleCounterLoop": true,
                        "loopExpression": {
                          "expression": {
                            "id": 2315,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "++",
                            "prefix": false,
                            "src": "17588:3:6",
                            "subExpression": {
                              "id": 2314,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2307,
                              "src": "17588:1:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 2316,
                          "nodeType": "ExpressionStatement",
                          "src": "17588:3:6"
                        },
                        "nodeType": "ForStatement",
                        "src": "17557:92:6"
                      },
                      {
                        "expression": {
                          "hexValue": "74727565",
                          "id": 2327,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "17666:4:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "functionReturnParameters": 2305,
                        "id": 2328,
                        "nodeType": "Return",
                        "src": "17659:11:6"
                      }
                    ]
                  },
                  "id": 2330,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_isBlank",
                  "nameLocation": "17492:8:6",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2302,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2301,
                        "mutability": "mutable",
                        "name": "b",
                        "nameLocation": "17514:1:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 2330,
                        "src": "17501:14:6",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 2300,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "17501:5:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "17500:16:6"
                  },
                  "returnParameters": {
                    "id": 2305,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2304,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 2330,
                        "src": "17540:4:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 2303,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "17540:4:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "17539:6:6"
                  },
                  "scope": 2406,
                  "src": "17483:195:6",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 2404,
                    "nodeType": "Block",
                    "src": "17759:462:6",
                    "statements": [
                      {
                        "assignments": [
                          2338
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2338,
                            "mutability": "mutable",
                            "name": "b",
                            "nameLocation": "17783:1:6",
                            "nodeType": "VariableDeclaration",
                            "scope": 2404,
                            "src": "17770:14:6",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes"
                            },
                            "typeName": {
                              "id": 2337,
                              "name": "bytes",
                              "nodeType": "ElementaryTypeName",
                              "src": "17770:5:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_storage_ptr",
                                "typeString": "bytes"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2343,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 2341,
                              "name": "email",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2332,
                              "src": "17793:5:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            ],
                            "id": 2340,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "17787:5:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                              "typeString": "type(bytes storage pointer)"
                            },
                            "typeName": {
                              "id": 2339,
                              "name": "bytes",
                              "nodeType": "ElementaryTypeName",
                              "src": "17787:5:6",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 2342,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "17787:12:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "17770:29:6"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 2347,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 2344,
                              "name": "b",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2338,
                              "src": "17814:1:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            "id": 2345,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "17816:6:6",
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "17814:8:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "hexValue": "35",
                            "id": 2346,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "17825:1:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_5_by_1",
                              "typeString": "int_const 5"
                            },
                            "value": "5"
                          },
                          "src": "17814:12:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 2350,
                        "nodeType": "IfStatement",
                        "src": "17810:30:6",
                        "trueBody": {
                          "expression": {
                            "hexValue": "66616c7365",
                            "id": 2348,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "17835:5:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "false"
                          },
                          "functionReturnParameters": 2336,
                          "id": 2349,
                          "nodeType": "Return",
                          "src": "17828:12:6"
                        }
                      },
                      {
                        "assignments": [
                          2352
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2352,
                            "mutability": "mutable",
                            "name": "hasAt",
                            "nameLocation": "17858:5:6",
                            "nodeType": "VariableDeclaration",
                            "scope": 2404,
                            "src": "17853:10:6",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "typeName": {
                              "id": 2351,
                              "name": "bool",
                              "nodeType": "ElementaryTypeName",
                              "src": "17853:4:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2354,
                        "initialValue": {
                          "hexValue": "66616c7365",
                          "id": 2353,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "17866:5:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "17853:18:6"
                      },
                      {
                        "assignments": [
                          2356
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2356,
                            "mutability": "mutable",
                            "name": "hasDotAfterAt",
                            "nameLocation": "17887:13:6",
                            "nodeType": "VariableDeclaration",
                            "scope": 2404,
                            "src": "17882:18:6",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "typeName": {
                              "id": 2355,
                              "name": "bool",
                              "nodeType": "ElementaryTypeName",
                              "src": "17882:4:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2358,
                        "initialValue": {
                          "hexValue": "66616c7365",
                          "id": 2357,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "17903:5:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "17882:26:6"
                      },
                      {
                        "body": {
                          "id": 2398,
                          "nodeType": "Block",
                          "src": "17955:219:6",
                          "statements": [
                            {
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_bytes1",
                                  "typeString": "bytes1"
                                },
                                "id": 2374,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "baseExpression": {
                                    "id": 2370,
                                    "name": "b",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2338,
                                    "src": "17974:1:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  },
                                  "id": 2372,
                                  "indexExpression": {
                                    "id": 2371,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2360,
                                    "src": "17976:1:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "17974:4:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes1",
                                    "typeString": "bytes1"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "==",
                                "rightExpression": {
                                  "hexValue": "40",
                                  "id": 2373,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "string",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "17982:3:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_stringliteral_e724d40619441ced66a271e59627b7bcd39c77447a4315561b4d21e7b7c9321c",
                                    "typeString": "literal_string \"@\""
                                  },
                                  "value": "@"
                                },
                                "src": "17974:11:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "falseBody": {
                                "condition": {
                                  "commonType": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  "id": 2390,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 2384,
                                    "name": "hasAt",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2352,
                                    "src": "18086:5:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "&&",
                                  "rightExpression": {
                                    "commonType": {
                                      "typeIdentifier": "t_bytes1",
                                      "typeString": "bytes1"
                                    },
                                    "id": 2389,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "baseExpression": {
                                        "id": 2385,
                                        "name": "b",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2338,
                                        "src": "18095:1:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bytes_memory_ptr",
                                          "typeString": "bytes memory"
                                        }
                                      },
                                      "id": 2387,
                                      "indexExpression": {
                                        "id": 2386,
                                        "name": "i",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2360,
                                        "src": "18097:1:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "18095:4:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes1",
                                        "typeString": "bytes1"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "==",
                                    "rightExpression": {
                                      "hexValue": "2e",
                                      "id": 2388,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "string",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "18103:3:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_stringliteral_6f010af653ebe3cb07d297a4ef13366103d392ceffa68dd48232e6e9ff2187bf",
                                        "typeString": "literal_string \".\""
                                      },
                                      "value": "."
                                    },
                                    "src": "18095:11:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "src": "18086:20:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "id": 2396,
                                "nodeType": "IfStatement",
                                "src": "18082:81:6",
                                "trueBody": {
                                  "id": 2395,
                                  "nodeType": "Block",
                                  "src": "18108:55:6",
                                  "statements": [
                                    {
                                      "expression": {
                                        "id": 2393,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftHandSide": {
                                          "id": 2391,
                                          "name": "hasDotAfterAt",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 2356,
                                          "src": "18127:13:6",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                          }
                                        },
                                        "nodeType": "Assignment",
                                        "operator": "=",
                                        "rightHandSide": {
                                          "hexValue": "74727565",
                                          "id": 2392,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "kind": "bool",
                                          "lValueRequested": false,
                                          "nodeType": "Literal",
                                          "src": "18143:4:6",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                          },
                                          "value": "true"
                                        },
                                        "src": "18127:20:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        }
                                      },
                                      "id": 2394,
                                      "nodeType": "ExpressionStatement",
                                      "src": "18127:20:6"
                                    }
                                  ]
                                }
                              },
                              "id": 2397,
                              "nodeType": "IfStatement",
                              "src": "17970:193:6",
                              "trueBody": {
                                "id": 2383,
                                "nodeType": "Block",
                                "src": "17987:89:6",
                                "statements": [
                                  {
                                    "condition": {
                                      "id": 2375,
                                      "name": "hasAt",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2352,
                                      "src": "18010:5:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    "id": 2378,
                                    "nodeType": "IfStatement",
                                    "src": "18006:23:6",
                                    "trueBody": {
                                      "expression": {
                                        "hexValue": "66616c7365",
                                        "id": 2376,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "bool",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "18024:5:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        },
                                        "value": "false"
                                      },
                                      "functionReturnParameters": 2336,
                                      "id": 2377,
                                      "nodeType": "Return",
                                      "src": "18017:12:6"
                                    }
                                  },
                                  {
                                    "expression": {
                                      "id": 2381,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftHandSide": {
                                        "id": 2379,
                                        "name": "hasAt",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2352,
                                        "src": "18048:5:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        }
                                      },
                                      "nodeType": "Assignment",
                                      "operator": "=",
                                      "rightHandSide": {
                                        "hexValue": "74727565",
                                        "id": 2380,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "bool",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "18056:4:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        },
                                        "value": "true"
                                      },
                                      "src": "18048:12:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    "id": 2382,
                                    "nodeType": "ExpressionStatement",
                                    "src": "18048:12:6"
                                  }
                                ]
                              }
                            }
                          ]
                        },
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 2366,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 2363,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2360,
                            "src": "17936:1:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "expression": {
                              "id": 2364,
                              "name": "b",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2338,
                              "src": "17940:1:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            "id": 2365,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "17942:6:6",
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "17940:8:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "17936:12:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 2399,
                        "initializationExpression": {
                          "assignments": [
                            2360
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 2360,
                              "mutability": "mutable",
                              "name": "i",
                              "nameLocation": "17929:1:6",
                              "nodeType": "VariableDeclaration",
                              "scope": 2399,
                              "src": "17924:6:6",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 2359,
                                "name": "uint",
                                "nodeType": "ElementaryTypeName",
                                "src": "17924:4:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 2362,
                          "initialValue": {
                            "hexValue": "30",
                            "id": 2361,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "17933:1:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "17924:10:6"
                        },
                        "isSimpleCounterLoop": true,
                        "loopExpression": {
                          "expression": {
                            "id": 2368,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "++",
                            "prefix": false,
                            "src": "17950:3:6",
                            "subExpression": {
                              "id": 2367,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2360,
                              "src": "17950:1:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 2369,
                          "nodeType": "ExpressionStatement",
                          "src": "17950:3:6"
                        },
                        "nodeType": "ForStatement",
                        "src": "17919:255:6"
                      },
                      {
                        "expression": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 2402,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 2400,
                            "name": "hasAt",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2352,
                            "src": "18191:5:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "&&",
                          "rightExpression": {
                            "id": 2401,
                            "name": "hasDotAfterAt",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2356,
                            "src": "18200:13:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "18191:22:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "functionReturnParameters": 2336,
                        "id": 2403,
                        "nodeType": "Return",
                        "src": "18184:29:6"
                      }
                    ]
                  },
                  "id": 2405,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_isValidEmail",
                  "nameLocation": "17695:13:6",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2333,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2332,
                        "mutability": "mutable",
                        "name": "email",
                        "nameLocation": "17723:5:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 2405,
                        "src": "17709:19:6",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 2331,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "17709:6:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "17708:21:6"
                  },
                  "returnParameters": {
                    "id": 2336,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2335,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 2405,
                        "src": "17753:4:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 2334,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "17753:4:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "17752:6:6"
                  },
                  "scope": 2406,
                  "src": "17686:535:6",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "internal"
                }
              ],
              "scope": 2407,
              "src": "994:17230:6",
              "usedErrors": [],
              "usedEvents": [
                1021,
                1027,
                1039,
                1047,
                1059,
                1063
              ]
            }
          ],
          "src": "33:18193:6"
        },
        "id": 6
      }
    },
    "contracts": {
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
        "IERC1155Errors": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "balance",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "needed",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                }
              ],
              "name": "ERC1155InsufficientBalance",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "approver",
                  "type": "address"
                }
              ],
              "name": "ERC1155InvalidApprover",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "idsLength",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "valuesLength",
                  "type": "uint256"
                }
              ],
              "name": "ERC1155InvalidArrayLength",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "operator",
                  "type": "address"
                }
              ],
              "name": "ERC1155InvalidOperator",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "receiver",
                  "type": "address"
                }
              ],
              "name": "ERC1155InvalidReceiver",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                }
              ],
              "name": "ERC1155InvalidSender",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "operator",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                }
              ],
              "name": "ERC1155MissingApprovalForAll",
              "type": "error"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {}
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]}},\"version\":1}"
        },
        "IERC20Errors": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "allowance",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "needed",
                  "type": "uint256"
                }
              ],
              "name": "ERC20InsufficientAllowance",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "balance",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "needed",
                  "type": "uint256"
                }
              ],
              "name": "ERC20InsufficientBalance",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "approver",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidApprover",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "receiver",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidReceiver",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidSender",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidSpender",
              "type": "error"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {}
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]}},\"version\":1}"
        },
        "IERC721Errors": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                }
              ],
              "name": "ERC721IncorrectOwner",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "operator",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                }
              ],
              "name": "ERC721InsufficientApproval",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "approver",
                  "type": "address"
                }
              ],
              "name": "ERC721InvalidApprover",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "operator",
                  "type": "address"
                }
              ],
              "name": "ERC721InvalidOperator",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                }
              ],
              "name": "ERC721InvalidOwner",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "receiver",
                  "type": "address"
                }
              ],
              "name": "ERC721InvalidReceiver",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                }
              ],
              "name": "ERC721InvalidSender",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                }
              ],
              "name": "ERC721NonexistentToken",
              "type": "error"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {}
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]}},\"version\":1}"
        }
      },
      "@openzeppelin/contracts/token/ERC20/ERC20.sol": {
        "ERC20": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "allowance",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "needed",
                  "type": "uint256"
                }
              ],
              "name": "ERC20InsufficientAllowance",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "balance",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "needed",
                  "type": "uint256"
                }
              ],
              "name": "ERC20InsufficientBalance",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "approver",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidApprover",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "receiver",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidReceiver",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidSender",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidSpender",
              "type": "error"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Approval",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Transfer",
              "type": "event"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                }
              ],
              "name": "allowance",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "approve",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "balanceOf",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "decimals",
              "outputs": [
                {
                  "internalType": "uint8",
                  "name": "",
                  "type": "uint8"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "name",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "symbol",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "totalSupply",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "transfer",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "transferFrom",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "allowance(address,address)": "dd62ed3e",
              "approve(address,uint256)": "095ea7b3",
              "balanceOf(address)": "70a08231",
              "decimals()": "313ce567",
              "name()": "06fdde03",
              "symbol()": "95d89b41",
              "totalSupply()": "18160ddd",
              "transfer(address,uint256)": "a9059cbb",
              "transferFrom(address,address,uint256)": "23b872dd"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. Both values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x86b7b71a6aedefdad89b607378eeab1dcc5389b9ea7d17346d08af01d7190994\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1dc2db8d94a21eac8efe03adf574c419b08536409b416057a2b5b95cb772c43c\",\"dweb:/ipfs/QmZfqJCKVU1ScuX2A7s8WZdQEaikwJbDH5JBrBdKTUT4Gu\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xd6fa4088198f04eef10c5bce8a2f4d60554b7ec4b987f684393c01bf79b94d9f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f95ee0bbd4dd3ac730d066ba3e785ded4565e890dbec2fa7d3b9fe3bad9d0d6e\",\"dweb:/ipfs/QmSLr6bHkPFWT7ntj34jmwfyskpwo97T9jZUrk5sz3sdtR\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}"
        }
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol": {
        "IERC20": {
          "abi": [
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Approval",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Transfer",
              "type": "event"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                }
              ],
              "name": "allowance",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "approve",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "balanceOf",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "totalSupply",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "transfer",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "transferFrom",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "allowance(address,address)": "dd62ed3e",
              "approve(address,uint256)": "095ea7b3",
              "balanceOf(address)": "70a08231",
              "totalSupply()": "18160ddd",
              "transfer(address,uint256)": "a9059cbb",
              "transferFrom(address,address,uint256)": "23b872dd"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]}},\"version\":1}"
        }
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
        "IERC20Metadata": {
          "abi": [
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Approval",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Transfer",
              "type": "event"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                }
              ],
              "name": "allowance",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "approve",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "balanceOf",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "decimals",
              "outputs": [
                {
                  "internalType": "uint8",
                  "name": "",
                  "type": "uint8"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "name",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "symbol",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "totalSupply",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "transfer",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "transferFrom",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "allowance(address,address)": "dd62ed3e",
              "approve(address,uint256)": "095ea7b3",
              "balanceOf(address)": "70a08231",
              "decimals()": "313ce567",
              "name()": "06fdde03",
              "symbol()": "95d89b41",
              "totalSupply()": "18160ddd",
              "transfer(address,uint256)": "a9059cbb",
              "transferFrom(address,address,uint256)": "23b872dd"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC-20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xd6fa4088198f04eef10c5bce8a2f4d60554b7ec4b987f684393c01bf79b94d9f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f95ee0bbd4dd3ac730d066ba3e785ded4565e890dbec2fa7d3b9fe3bad9d0d6e\",\"dweb:/ipfs/QmSLr6bHkPFWT7ntj34jmwfyskpwo97T9jZUrk5sz3sdtR\"]}},\"version\":1}"
        }
      },
      "@openzeppelin/contracts/utils/Context.sol": {
        "Context": {
          "abi": [],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {}
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}"
        }
      },
      "contracts/ERC20Mock.sol": {
        "ERC20Mock": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "string",
                  "name": "name",
                  "type": "string"
                },
                {
                  "internalType": "string",
                  "name": "symbol",
                  "type": "string"
                },
                {
                  "internalType": "address",
                  "name": "initialAccount",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "initialBalance",
                  "type": "uint256"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "constructor"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "allowance",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "needed",
                  "type": "uint256"
                }
              ],
              "name": "ERC20InsufficientAllowance",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "balance",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "needed",
                  "type": "uint256"
                }
              ],
              "name": "ERC20InsufficientBalance",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "approver",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidApprover",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "receiver",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidReceiver",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidSender",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidSpender",
              "type": "error"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Approval",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Transfer",
              "type": "event"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                }
              ],
              "name": "allowance",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "approve",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "balanceOf",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "decimals",
              "outputs": [
                {
                  "internalType": "uint8",
                  "name": "",
                  "type": "uint8"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "name",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "symbol",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "totalSupply",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "transfer",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "transferFrom",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {
                "abi_decode_string_fromMemory": {
                  "entryPoint": 1009,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "allocate_memory": {
                  "entryPoint": 972,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                }
              },
              "generatedSources": [],
              "linkReferences": {},
              "object": "6080604052346103c757610ab180380380610019816103cc565b9283398101906080818303126103c75780516001600160401b0381116103c757826100459183016103f1565b602082015190926001600160401b0382116103c7576100659183016103f1565b604082015190916001600160a01b038216918290036103c7576060015183516001600160401b0381116102d057600354600181811c911680156103bd575b60208210146102b057601f8111610358575b50602094601f82116001146102f1579481929394956000926102e6575b50508160011b916000199060031b1c1916176003555b82516001600160401b0381116102d057600454600181811c911680156102c6575b60208210146102b057601f811161024b575b506020601f82116001146101e457819293946000926101d9575b50508160011b916000199060031b1c1916176004555b81156101c3576002548181018091116101ad576002557fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef602060009284845283825260408420818154019055604051908152a3604051610654908161045d8239f35b634e487b7160e01b600052601160045260246000fd5b63ec442f0560e01b600052600060045260246000fd5b015190503880610135565b601f198216906004600052806000209160005b8181106102335750958360019596971061021a575b505050811b0160045561014b565b015160001960f88460031b161c1916905538808061020c565b9192602060018192868b0151815501940192016101f7565b60046000527f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b601f830160051c810191602084106102a6575b601f0160051c01905b81811061029a575061011b565b6000815560010161028d565b9091508190610284565b634e487b7160e01b600052602260045260246000fd5b90607f1690610109565b634e487b7160e01b600052604160045260246000fd5b0151905038806100d2565b601f198216956003600052806000209160005b88811061034057508360019596979810610327575b505050811b016003556100e8565b015160001960f88460031b161c19169055388080610319565b91926020600181928685015181550194019201610304565b60036000527fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b601f830160051c810191602084106103b3575b601f0160051c01905b8181106103a757506100b5565b6000815560010161039a565b9091508190610391565b90607f16906100a3565b600080fd5b6040519190601f01601f191682016001600160401b038111838210176102d057604052565b81601f820112156103c7578051906001600160401b0382116102d057610420601f8301601f19166020016103cc565b92828452602083830101116103c75760005b82811061044757505060206000918301015290565b8060208092840101518282870101520161043256fe608080604052600436101561001357600080fd5b60003560e01c90816306fdde031461041157508063095ea7b31461038b57806318160ddd1461036d57806323b872dd14610280578063313ce5671461026457806370a082311461022a57806395d89b4114610109578063a9059cbb146100d85763dd62ed3e1461008257600080fd5b346100d35760403660031901126100d35761009b61052d565b6100a3610543565b6001600160a01b039182166000908152600160209081526040808320949093168252928352819020549051908152f35b600080fd5b346100d35760403660031901126100d3576100fe6100f461052d565b6024359033610559565b602060405160018152f35b346100d35760003660031901126100d35760405160006004548060011c90600181168015610220575b60208310811461020c578285529081156101f05750600114610199575b50819003601f01601f191681019067ffffffffffffffff8211818310176101835761017f829182604052826104e4565b0390f35b634e487b7160e01b600052604160045260246000fd5b905060046000527f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b6000905b8282106101da5750602091508201018261014f565b60018160209254838588010152019101906101c5565b90506020925060ff191682840152151560051b8201018261014f565b634e487b7160e01b84526022600452602484fd5b91607f1691610132565b346100d35760203660031901126100d3576001600160a01b0361024b61052d565b1660005260006020526020604060002054604051908152f35b346100d35760003660031901126100d357602060405160128152f35b346100d35760603660031901126100d35761029961052d565b6102a1610543565b6001600160a01b03821660008181526001602090815260408083203384529091529020549092604435929160001981106102e1575b506100fe9350610559565b83811061035057841561033a573315610324576100fe946000526001602052604060002060018060a01b03331660005260205283604060002091039055846102d6565b634a1406b160e11b600052600060045260246000fd5b63e602df0560e01b600052600060045260246000fd5b8390637dc7a0d960e11b6000523360045260245260445260646000fd5b346100d35760003660031901126100d3576020600254604051908152f35b346100d35760403660031901126100d3576103a461052d565b60243590331561033a576001600160a01b031690811561032457336000526001602052604060002082600052602052806040600020556040519081527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560203392a3602060405160018152f35b346100d35760003660031901126100d35760006003548060011c906001811680156104da575b60208310811461020c578285529081156101f057506001146104835750819003601f01601f191681019067ffffffffffffffff8211818310176101835761017f829182604052826104e4565b905060036000527fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b6000905b8282106104c45750602091508201018261014f565b60018160209254838588010152019101906104af565b91607f1691610437565b91909160208152825180602083015260005b818110610517575060409293506000838284010152601f8019910116010190565b80602080928701015160408286010152016104f6565b600435906001600160a01b03821682036100d357565b602435906001600160a01b03821682036100d357565b6001600160a01b0316908115610608576001600160a01b03169182156105f25760008281528060205260408120548281106105d85791604082827fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef958760209652828652038282205586815280845220818154019055604051908152a3565b916064928463391434e360e21b8452600452602452604452fd5b63ec442f0560e01b600052600060045260246000fd5b634b637e8f60e11b600052600060045260246000fdfea2646970667358221220b36603cb0786ff795dcc2b0c9579efb30a27c0695738fc1260129a3fc8b4749f64736f6c634300081c0033",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE PUSH2 0x3C7 JUMPI PUSH2 0xAB1 DUP1 CODESIZE SUB DUP1 PUSH2 0x19 DUP2 PUSH2 0x3CC JUMP JUMPDEST SWAP3 DUP4 CODECOPY DUP2 ADD SWAP1 PUSH1 0x80 DUP2 DUP4 SUB SLT PUSH2 0x3C7 JUMPI DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x3C7 JUMPI DUP3 PUSH2 0x45 SWAP2 DUP4 ADD PUSH2 0x3F1 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD MLOAD SWAP1 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x3C7 JUMPI PUSH2 0x65 SWAP2 DUP4 ADD PUSH2 0x3F1 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD MLOAD SWAP1 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP2 DUP3 SWAP1 SUB PUSH2 0x3C7 JUMPI PUSH1 0x60 ADD MLOAD DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x2D0 JUMPI PUSH1 0x3 SLOAD PUSH1 0x1 DUP2 DUP2 SHR SWAP2 AND DUP1 ISZERO PUSH2 0x3BD JUMPI JUMPDEST PUSH1 0x20 DUP3 LT EQ PUSH2 0x2B0 JUMPI PUSH1 0x1F DUP2 GT PUSH2 0x358 JUMPI JUMPDEST POP PUSH1 0x20 SWAP5 PUSH1 0x1F DUP3 GT PUSH1 0x1 EQ PUSH2 0x2F1 JUMPI SWAP5 DUP2 SWAP3 SWAP4 SWAP5 SWAP6 PUSH1 0x0 SWAP3 PUSH2 0x2E6 JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0x3 SSTORE JUMPDEST DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x2D0 JUMPI PUSH1 0x4 SLOAD PUSH1 0x1 DUP2 DUP2 SHR SWAP2 AND DUP1 ISZERO PUSH2 0x2C6 JUMPI JUMPDEST PUSH1 0x20 DUP3 LT EQ PUSH2 0x2B0 JUMPI PUSH1 0x1F DUP2 GT PUSH2 0x24B JUMPI JUMPDEST POP PUSH1 0x20 PUSH1 0x1F DUP3 GT PUSH1 0x1 EQ PUSH2 0x1E4 JUMPI DUP2 SWAP3 SWAP4 SWAP5 PUSH1 0x0 SWAP3 PUSH2 0x1D9 JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0x4 SSTORE JUMPDEST DUP2 ISZERO PUSH2 0x1C3 JUMPI PUSH1 0x2 SLOAD DUP2 DUP2 ADD DUP1 SWAP2 GT PUSH2 0x1AD JUMPI PUSH1 0x2 SSTORE PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x20 PUSH1 0x0 SWAP3 DUP5 DUP5 MSTORE DUP4 DUP3 MSTORE PUSH1 0x40 DUP5 KECCAK256 DUP2 DUP2 SLOAD ADD SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG3 PUSH1 0x40 MLOAD PUSH2 0x654 SWAP1 DUP2 PUSH2 0x45D DUP3 CODECOPY RETURN JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0xEC442F05 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADD MLOAD SWAP1 POP CODESIZE DUP1 PUSH2 0x135 JUMP JUMPDEST PUSH1 0x1F NOT DUP3 AND SWAP1 PUSH1 0x4 PUSH1 0x0 MSTORE DUP1 PUSH1 0x0 KECCAK256 SWAP2 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x233 JUMPI POP SWAP6 DUP4 PUSH1 0x1 SWAP6 SWAP7 SWAP8 LT PUSH2 0x21A JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0x4 SSTORE PUSH2 0x14B JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH2 0x20C JUMP JUMPDEST SWAP2 SWAP3 PUSH1 0x20 PUSH1 0x1 DUP2 SWAP3 DUP7 DUP12 ADD MLOAD DUP2 SSTORE ADD SWAP5 ADD SWAP3 ADD PUSH2 0x1F7 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 MSTORE PUSH32 0x8A35ACFBC15FF81A39AE7D344FD709F28E8600B4AA8C65C6B64BFE7FE36BD19B PUSH1 0x1F DUP4 ADD PUSH1 0x5 SHR DUP2 ADD SWAP2 PUSH1 0x20 DUP5 LT PUSH2 0x2A6 JUMPI JUMPDEST PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP1 JUMPDEST DUP2 DUP2 LT PUSH2 0x29A JUMPI POP PUSH2 0x11B JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x28D JUMP JUMPDEST SWAP1 SWAP2 POP DUP2 SWAP1 PUSH2 0x284 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x7F AND SWAP1 PUSH2 0x109 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADD MLOAD SWAP1 POP CODESIZE DUP1 PUSH2 0xD2 JUMP JUMPDEST PUSH1 0x1F NOT DUP3 AND SWAP6 PUSH1 0x3 PUSH1 0x0 MSTORE DUP1 PUSH1 0x0 KECCAK256 SWAP2 PUSH1 0x0 JUMPDEST DUP9 DUP2 LT PUSH2 0x340 JUMPI POP DUP4 PUSH1 0x1 SWAP6 SWAP7 SWAP8 SWAP9 LT PUSH2 0x327 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0x3 SSTORE PUSH2 0xE8 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH2 0x319 JUMP JUMPDEST SWAP2 SWAP3 PUSH1 0x20 PUSH1 0x1 DUP2 SWAP3 DUP7 DUP6 ADD MLOAD DUP2 SSTORE ADD SWAP5 ADD SWAP3 ADD PUSH2 0x304 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 MSTORE PUSH32 0xC2575A0E9E593C00F959F8C92F12DB2869C3395A3B0502D05E2516446F71F85B PUSH1 0x1F DUP4 ADD PUSH1 0x5 SHR DUP2 ADD SWAP2 PUSH1 0x20 DUP5 LT PUSH2 0x3B3 JUMPI JUMPDEST PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP1 JUMPDEST DUP2 DUP2 LT PUSH2 0x3A7 JUMPI POP PUSH2 0xB5 JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x39A JUMP JUMPDEST SWAP1 SWAP2 POP DUP2 SWAP1 PUSH2 0x391 JUMP JUMPDEST SWAP1 PUSH1 0x7F AND SWAP1 PUSH2 0xA3 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP2 SWAP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP4 DUP3 LT OR PUSH2 0x2D0 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST DUP2 PUSH1 0x1F DUP3 ADD SLT ISZERO PUSH2 0x3C7 JUMPI DUP1 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x2D0 JUMPI PUSH2 0x420 PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD PUSH2 0x3CC JUMP JUMPDEST SWAP3 DUP3 DUP5 MSTORE PUSH1 0x20 DUP4 DUP4 ADD ADD GT PUSH2 0x3C7 JUMPI PUSH1 0x0 JUMPDEST DUP3 DUP2 LT PUSH2 0x447 JUMPI POP POP PUSH1 0x20 PUSH1 0x0 SWAP2 DUP4 ADD ADD MSTORE SWAP1 JUMP JUMPDEST DUP1 PUSH1 0x20 DUP1 SWAP3 DUP5 ADD ADD MLOAD DUP3 DUP3 DUP8 ADD ADD MSTORE ADD PUSH2 0x432 JUMP INVALID PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x13 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x6FDDE03 EQ PUSH2 0x411 JUMPI POP DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x38B JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x36D JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x280 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x264 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x22A JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x109 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0xD8 JUMPI PUSH4 0xDD62ED3E EQ PUSH2 0x82 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0xD3 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xD3 JUMPI PUSH2 0x9B PUSH2 0x52D JUMP JUMPDEST PUSH2 0xA3 PUSH2 0x543 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 SWAP1 SWAP4 AND DUP3 MSTORE SWAP3 DUP4 MSTORE DUP2 SWAP1 KECCAK256 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0xD3 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xD3 JUMPI PUSH2 0xFE PUSH2 0xF4 PUSH2 0x52D JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 CALLER PUSH2 0x559 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0xD3 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xD3 JUMPI PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x4 SLOAD DUP1 PUSH1 0x1 SHR SWAP1 PUSH1 0x1 DUP2 AND DUP1 ISZERO PUSH2 0x220 JUMPI JUMPDEST PUSH1 0x20 DUP4 LT DUP2 EQ PUSH2 0x20C JUMPI DUP3 DUP6 MSTORE SWAP1 DUP2 ISZERO PUSH2 0x1F0 JUMPI POP PUSH1 0x1 EQ PUSH2 0x199 JUMPI JUMPDEST POP DUP2 SWAP1 SUB PUSH1 0x1F ADD PUSH1 0x1F NOT AND DUP2 ADD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT DUP2 DUP4 LT OR PUSH2 0x183 JUMPI PUSH2 0x17F DUP3 SWAP2 DUP3 PUSH1 0x40 MSTORE DUP3 PUSH2 0x4E4 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 POP PUSH1 0x4 PUSH1 0x0 MSTORE PUSH32 0x8A35ACFBC15FF81A39AE7D344FD709F28E8600B4AA8C65C6B64BFE7FE36BD19B PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x1DA JUMPI POP PUSH1 0x20 SWAP2 POP DUP3 ADD ADD DUP3 PUSH2 0x14F JUMP JUMPDEST PUSH1 0x1 DUP2 PUSH1 0x20 SWAP3 SLOAD DUP4 DUP6 DUP9 ADD ADD MSTORE ADD SWAP2 ADD SWAP1 PUSH2 0x1C5 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 SWAP3 POP PUSH1 0xFF NOT AND DUP3 DUP5 ADD MSTORE ISZERO ISZERO PUSH1 0x5 SHL DUP3 ADD ADD DUP3 PUSH2 0x14F JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP5 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 DUP5 REVERT JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0x132 JUMP JUMPDEST CALLVALUE PUSH2 0xD3 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xD3 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x24B PUSH2 0x52D JUMP JUMPDEST AND PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0xD3 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xD3 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0xD3 JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xD3 JUMPI PUSH2 0x299 PUSH2 0x52D JUMP JUMPDEST PUSH2 0x2A1 PUSH2 0x543 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD SWAP1 SWAP3 PUSH1 0x44 CALLDATALOAD SWAP3 SWAP2 PUSH1 0x0 NOT DUP2 LT PUSH2 0x2E1 JUMPI JUMPDEST POP PUSH2 0xFE SWAP4 POP PUSH2 0x559 JUMP JUMPDEST DUP4 DUP2 LT PUSH2 0x350 JUMPI DUP5 ISZERO PUSH2 0x33A JUMPI CALLER ISZERO PUSH2 0x324 JUMPI PUSH2 0xFE SWAP5 PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB CALLER AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE DUP4 PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP2 SUB SWAP1 SSTORE DUP5 PUSH2 0x2D6 JUMP JUMPDEST PUSH4 0x4A1406B1 PUSH1 0xE1 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0xE602DF05 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP4 SWAP1 PUSH4 0x7DC7A0D9 PUSH1 0xE1 SHL PUSH1 0x0 MSTORE CALLER PUSH1 0x4 MSTORE PUSH1 0x24 MSTORE PUSH1 0x44 MSTORE PUSH1 0x64 PUSH1 0x0 REVERT JUMPDEST CALLVALUE PUSH2 0xD3 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xD3 JUMPI PUSH1 0x20 PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0xD3 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xD3 JUMPI PUSH2 0x3A4 PUSH2 0x52D JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 CALLER ISZERO PUSH2 0x33A JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 ISZERO PUSH2 0x324 JUMPI CALLER PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP3 PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE DUP1 PUSH1 0x40 PUSH1 0x0 KECCAK256 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x20 CALLER SWAP3 LOG3 PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0xD3 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xD3 JUMPI PUSH1 0x0 PUSH1 0x3 SLOAD DUP1 PUSH1 0x1 SHR SWAP1 PUSH1 0x1 DUP2 AND DUP1 ISZERO PUSH2 0x4DA JUMPI JUMPDEST PUSH1 0x20 DUP4 LT DUP2 EQ PUSH2 0x20C JUMPI DUP3 DUP6 MSTORE SWAP1 DUP2 ISZERO PUSH2 0x1F0 JUMPI POP PUSH1 0x1 EQ PUSH2 0x483 JUMPI POP DUP2 SWAP1 SUB PUSH1 0x1F ADD PUSH1 0x1F NOT AND DUP2 ADD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT DUP2 DUP4 LT OR PUSH2 0x183 JUMPI PUSH2 0x17F DUP3 SWAP2 DUP3 PUSH1 0x40 MSTORE DUP3 PUSH2 0x4E4 JUMP JUMPDEST SWAP1 POP PUSH1 0x3 PUSH1 0x0 MSTORE PUSH32 0xC2575A0E9E593C00F959F8C92F12DB2869C3395A3B0502D05E2516446F71F85B PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x4C4 JUMPI POP PUSH1 0x20 SWAP2 POP DUP3 ADD ADD DUP3 PUSH2 0x14F JUMP JUMPDEST PUSH1 0x1 DUP2 PUSH1 0x20 SWAP3 SLOAD DUP4 DUP6 DUP9 ADD ADD MSTORE ADD SWAP2 ADD SWAP1 PUSH2 0x4AF JUMP JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0x437 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 PUSH1 0x20 DUP2 MSTORE DUP3 MLOAD DUP1 PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x517 JUMPI POP PUSH1 0x40 SWAP3 SWAP4 POP PUSH1 0x0 DUP4 DUP3 DUP5 ADD ADD MSTORE PUSH1 0x1F DUP1 NOT SWAP2 ADD AND ADD ADD SWAP1 JUMP JUMPDEST DUP1 PUSH1 0x20 DUP1 SWAP3 DUP8 ADD ADD MLOAD PUSH1 0x40 DUP3 DUP7 ADD ADD MSTORE ADD PUSH2 0x4F6 JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0xD3 JUMPI JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0xD3 JUMPI JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 ISZERO PUSH2 0x608 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 DUP3 ISZERO PUSH2 0x5F2 JUMPI PUSH1 0x0 DUP3 DUP2 MSTORE DUP1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP3 DUP2 LT PUSH2 0x5D8 JUMPI SWAP2 PUSH1 0x40 DUP3 DUP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP6 DUP8 PUSH1 0x20 SWAP7 MSTORE DUP3 DUP7 MSTORE SUB DUP3 DUP3 KECCAK256 SSTORE DUP7 DUP2 MSTORE DUP1 DUP5 MSTORE KECCAK256 DUP2 DUP2 SLOAD ADD SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG3 JUMP JUMPDEST SWAP2 PUSH1 0x64 SWAP3 DUP5 PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP5 MSTORE PUSH1 0x4 MSTORE PUSH1 0x24 MSTORE PUSH1 0x44 MSTORE REVERT JUMPDEST PUSH4 0xEC442F05 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4B637E8F PUSH1 0xE1 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB3 PUSH7 0x3CB0786FF795D 0xCC 0x2B 0xC SWAP6 PUSH26 0xEFB30A27C0695738FC1260129A3FC8B4749F64736F6C63430008 SHR STOP CALLER ",
              "sourceMap": "120:259:5:-:0;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;120:259:5;;;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;120:259:5;;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;120:259:5;;;;;;;;;;;;;-1:-1:-1;;;;;120:259:5;;;;1648:13:1;120:259:5;;;;;;;;;;;-1:-1:-1;120:259:5;;;;;;;;;;;-1:-1:-1;120:259:5;;;;;;;;;;;;;;;;-1:-1:-1;120:259:5;;;;;;;;;;;;;1648:13:1;120:259:5;;;;;1648:13:1;120:259:5;;;;-1:-1:-1;;;;;120:259:5;;;;1671:17:1;120:259:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;120:259:5;;;;;;;;;;;;;1648:13:1;120:259:5;;;;;1671:17:1;120:259:5;;7432:21:1;;7428:91;;6137:21;120:259:5;;;;;;;;;6137:21:1;120:259:5;6987:25:1;120:259:5;-1:-1:-1;120:259:5;;;;;;;;;;;;;;;;;;;;;6987:25:1;120:259:5;;;;;;;;;;;;;-1:-1:-1;120:259:5;;1671:17:1;120:259:5;;-1:-1:-1;120:259:5;7428:91:1;7476:32;;;-1:-1:-1;7476:32:1;-1:-1:-1;1671:17:1;120:259:5;;-1:-1:-1;7476:32:1;120:259:5;;;;-1:-1:-1;120:259:5;;;;;;;;;;1671:17:1;-1:-1:-1;120:259:5;;-1:-1:-1;120:259:5;;-1:-1:-1;120:259:5;;;;;;;;;;;;;;;;;;;;;;;1671:17:1;120:259:5;;;;;;;;;;1648:13:1;120:259:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1671:17:1;-1:-1:-1;120:259:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;120:259:5;;;;;;;;;-1:-1:-1;120:259:5;;;;;;;;-1:-1:-1;120:259:5;;1671:17:1;120:259:5;;-1:-1:-1;120:259:5;;;;;;;;;;;;-1:-1:-1;120:259:5;;1671:17:1;120:259:5;;-1:-1:-1;120:259:5;;;;;-1:-1:-1;120:259:5;;;;;;;;;;1648:13:1;-1:-1:-1;120:259:5;;-1:-1:-1;120:259:5;;-1:-1:-1;120:259:5;;;;;;;;;;;;;;;;;;;;;;;1648:13:1;120:259:5;;;;;;;;;;1648:13:1;120:259:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1648:13:1;-1:-1:-1;120:259:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;120:259:5;;;;;;;;;-1:-1:-1;120:259:5;;;;;;;;;;;;-1:-1:-1;120:259:5;;;;;;;;;-1:-1:-1;;120:259:5;;;-1:-1:-1;;;;;120:259:5;;;;;;;;;;:::o;:::-;;;;;;;;;;;;-1:-1:-1;;;;;120:259:5;;;;;;;;-1:-1:-1;;120:259:5;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;120:259:5;;;;;;;;;-1:-1:-1;120:259:5;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;"
            },
            "deployedBytecode": {
              "functionDebugData": {
                "abi_decode_address": {
                  "entryPoint": 1347,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "abi_decode_address_3378": {
                  "entryPoint": 1325,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "abi_encode_string": {
                  "entryPoint": 1252,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "fun_transfer": {
                  "entryPoint": 1369,
                  "id": 381,
                  "parameterSlots": 3,
                  "returnSlots": 0
                }
              },
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "608080604052600436101561001357600080fd5b60003560e01c90816306fdde031461041157508063095ea7b31461038b57806318160ddd1461036d57806323b872dd14610280578063313ce5671461026457806370a082311461022a57806395d89b4114610109578063a9059cbb146100d85763dd62ed3e1461008257600080fd5b346100d35760403660031901126100d35761009b61052d565b6100a3610543565b6001600160a01b039182166000908152600160209081526040808320949093168252928352819020549051908152f35b600080fd5b346100d35760403660031901126100d3576100fe6100f461052d565b6024359033610559565b602060405160018152f35b346100d35760003660031901126100d35760405160006004548060011c90600181168015610220575b60208310811461020c578285529081156101f05750600114610199575b50819003601f01601f191681019067ffffffffffffffff8211818310176101835761017f829182604052826104e4565b0390f35b634e487b7160e01b600052604160045260246000fd5b905060046000527f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b6000905b8282106101da5750602091508201018261014f565b60018160209254838588010152019101906101c5565b90506020925060ff191682840152151560051b8201018261014f565b634e487b7160e01b84526022600452602484fd5b91607f1691610132565b346100d35760203660031901126100d3576001600160a01b0361024b61052d565b1660005260006020526020604060002054604051908152f35b346100d35760003660031901126100d357602060405160128152f35b346100d35760603660031901126100d35761029961052d565b6102a1610543565b6001600160a01b03821660008181526001602090815260408083203384529091529020549092604435929160001981106102e1575b506100fe9350610559565b83811061035057841561033a573315610324576100fe946000526001602052604060002060018060a01b03331660005260205283604060002091039055846102d6565b634a1406b160e11b600052600060045260246000fd5b63e602df0560e01b600052600060045260246000fd5b8390637dc7a0d960e11b6000523360045260245260445260646000fd5b346100d35760003660031901126100d3576020600254604051908152f35b346100d35760403660031901126100d3576103a461052d565b60243590331561033a576001600160a01b031690811561032457336000526001602052604060002082600052602052806040600020556040519081527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560203392a3602060405160018152f35b346100d35760003660031901126100d35760006003548060011c906001811680156104da575b60208310811461020c578285529081156101f057506001146104835750819003601f01601f191681019067ffffffffffffffff8211818310176101835761017f829182604052826104e4565b905060036000527fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b6000905b8282106104c45750602091508201018261014f565b60018160209254838588010152019101906104af565b91607f1691610437565b91909160208152825180602083015260005b818110610517575060409293506000838284010152601f8019910116010190565b80602080928701015160408286010152016104f6565b600435906001600160a01b03821682036100d357565b602435906001600160a01b03821682036100d357565b6001600160a01b0316908115610608576001600160a01b03169182156105f25760008281528060205260408120548281106105d85791604082827fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef958760209652828652038282205586815280845220818154019055604051908152a3565b916064928463391434e360e21b8452600452602452604452fd5b63ec442f0560e01b600052600060045260246000fd5b634b637e8f60e11b600052600060045260246000fdfea2646970667358221220b36603cb0786ff795dcc2b0c9579efb30a27c0695738fc1260129a3fc8b4749f64736f6c634300081c0033",
              "opcodes": "PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x13 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x6FDDE03 EQ PUSH2 0x411 JUMPI POP DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x38B JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x36D JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x280 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x264 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x22A JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x109 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0xD8 JUMPI PUSH4 0xDD62ED3E EQ PUSH2 0x82 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0xD3 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xD3 JUMPI PUSH2 0x9B PUSH2 0x52D JUMP JUMPDEST PUSH2 0xA3 PUSH2 0x543 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 SWAP1 SWAP4 AND DUP3 MSTORE SWAP3 DUP4 MSTORE DUP2 SWAP1 KECCAK256 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0xD3 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xD3 JUMPI PUSH2 0xFE PUSH2 0xF4 PUSH2 0x52D JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 CALLER PUSH2 0x559 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0xD3 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xD3 JUMPI PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x4 SLOAD DUP1 PUSH1 0x1 SHR SWAP1 PUSH1 0x1 DUP2 AND DUP1 ISZERO PUSH2 0x220 JUMPI JUMPDEST PUSH1 0x20 DUP4 LT DUP2 EQ PUSH2 0x20C JUMPI DUP3 DUP6 MSTORE SWAP1 DUP2 ISZERO PUSH2 0x1F0 JUMPI POP PUSH1 0x1 EQ PUSH2 0x199 JUMPI JUMPDEST POP DUP2 SWAP1 SUB PUSH1 0x1F ADD PUSH1 0x1F NOT AND DUP2 ADD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT DUP2 DUP4 LT OR PUSH2 0x183 JUMPI PUSH2 0x17F DUP3 SWAP2 DUP3 PUSH1 0x40 MSTORE DUP3 PUSH2 0x4E4 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 POP PUSH1 0x4 PUSH1 0x0 MSTORE PUSH32 0x8A35ACFBC15FF81A39AE7D344FD709F28E8600B4AA8C65C6B64BFE7FE36BD19B PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x1DA JUMPI POP PUSH1 0x20 SWAP2 POP DUP3 ADD ADD DUP3 PUSH2 0x14F JUMP JUMPDEST PUSH1 0x1 DUP2 PUSH1 0x20 SWAP3 SLOAD DUP4 DUP6 DUP9 ADD ADD MSTORE ADD SWAP2 ADD SWAP1 PUSH2 0x1C5 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 SWAP3 POP PUSH1 0xFF NOT AND DUP3 DUP5 ADD MSTORE ISZERO ISZERO PUSH1 0x5 SHL DUP3 ADD ADD DUP3 PUSH2 0x14F JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP5 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 DUP5 REVERT JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0x132 JUMP JUMPDEST CALLVALUE PUSH2 0xD3 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xD3 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x24B PUSH2 0x52D JUMP JUMPDEST AND PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0xD3 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xD3 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0xD3 JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xD3 JUMPI PUSH2 0x299 PUSH2 0x52D JUMP JUMPDEST PUSH2 0x2A1 PUSH2 0x543 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD SWAP1 SWAP3 PUSH1 0x44 CALLDATALOAD SWAP3 SWAP2 PUSH1 0x0 NOT DUP2 LT PUSH2 0x2E1 JUMPI JUMPDEST POP PUSH2 0xFE SWAP4 POP PUSH2 0x559 JUMP JUMPDEST DUP4 DUP2 LT PUSH2 0x350 JUMPI DUP5 ISZERO PUSH2 0x33A JUMPI CALLER ISZERO PUSH2 0x324 JUMPI PUSH2 0xFE SWAP5 PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB CALLER AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE DUP4 PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP2 SUB SWAP1 SSTORE DUP5 PUSH2 0x2D6 JUMP JUMPDEST PUSH4 0x4A1406B1 PUSH1 0xE1 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0xE602DF05 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP4 SWAP1 PUSH4 0x7DC7A0D9 PUSH1 0xE1 SHL PUSH1 0x0 MSTORE CALLER PUSH1 0x4 MSTORE PUSH1 0x24 MSTORE PUSH1 0x44 MSTORE PUSH1 0x64 PUSH1 0x0 REVERT JUMPDEST CALLVALUE PUSH2 0xD3 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xD3 JUMPI PUSH1 0x20 PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0xD3 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xD3 JUMPI PUSH2 0x3A4 PUSH2 0x52D JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 CALLER ISZERO PUSH2 0x33A JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 ISZERO PUSH2 0x324 JUMPI CALLER PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP3 PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE DUP1 PUSH1 0x40 PUSH1 0x0 KECCAK256 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x20 CALLER SWAP3 LOG3 PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0xD3 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xD3 JUMPI PUSH1 0x0 PUSH1 0x3 SLOAD DUP1 PUSH1 0x1 SHR SWAP1 PUSH1 0x1 DUP2 AND DUP1 ISZERO PUSH2 0x4DA JUMPI JUMPDEST PUSH1 0x20 DUP4 LT DUP2 EQ PUSH2 0x20C JUMPI DUP3 DUP6 MSTORE SWAP1 DUP2 ISZERO PUSH2 0x1F0 JUMPI POP PUSH1 0x1 EQ PUSH2 0x483 JUMPI POP DUP2 SWAP1 SUB PUSH1 0x1F ADD PUSH1 0x1F NOT AND DUP2 ADD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT DUP2 DUP4 LT OR PUSH2 0x183 JUMPI PUSH2 0x17F DUP3 SWAP2 DUP3 PUSH1 0x40 MSTORE DUP3 PUSH2 0x4E4 JUMP JUMPDEST SWAP1 POP PUSH1 0x3 PUSH1 0x0 MSTORE PUSH32 0xC2575A0E9E593C00F959F8C92F12DB2869C3395A3B0502D05E2516446F71F85B PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x4C4 JUMPI POP PUSH1 0x20 SWAP2 POP DUP3 ADD ADD DUP3 PUSH2 0x14F JUMP JUMPDEST PUSH1 0x1 DUP2 PUSH1 0x20 SWAP3 SLOAD DUP4 DUP6 DUP9 ADD ADD MSTORE ADD SWAP2 ADD SWAP1 PUSH2 0x4AF JUMP JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0x437 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 PUSH1 0x20 DUP2 MSTORE DUP3 MLOAD DUP1 PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x517 JUMPI POP PUSH1 0x40 SWAP3 SWAP4 POP PUSH1 0x0 DUP4 DUP3 DUP5 ADD ADD MSTORE PUSH1 0x1F DUP1 NOT SWAP2 ADD AND ADD ADD SWAP1 JUMP JUMPDEST DUP1 PUSH1 0x20 DUP1 SWAP3 DUP8 ADD ADD MLOAD PUSH1 0x40 DUP3 DUP7 ADD ADD MSTORE ADD PUSH2 0x4F6 JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0xD3 JUMPI JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0xD3 JUMPI JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 ISZERO PUSH2 0x608 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 DUP3 ISZERO PUSH2 0x5F2 JUMPI PUSH1 0x0 DUP3 DUP2 MSTORE DUP1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP3 DUP2 LT PUSH2 0x5D8 JUMPI SWAP2 PUSH1 0x40 DUP3 DUP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP6 DUP8 PUSH1 0x20 SWAP7 MSTORE DUP3 DUP7 MSTORE SUB DUP3 DUP3 KECCAK256 SSTORE DUP7 DUP2 MSTORE DUP1 DUP5 MSTORE KECCAK256 DUP2 DUP2 SLOAD ADD SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG3 JUMP JUMPDEST SWAP2 PUSH1 0x64 SWAP3 DUP5 PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP5 MSTORE PUSH1 0x4 MSTORE PUSH1 0x24 MSTORE PUSH1 0x44 MSTORE REVERT JUMPDEST PUSH4 0xEC442F05 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4B637E8F PUSH1 0xE1 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB3 PUSH7 0x3CB0786FF795D 0xCC 0x2B 0xC SWAP6 PUSH26 0xEFB30A27C0695738FC1260129A3FC8B4749F64736F6C63430008 SHR STOP CALLER ",
              "sourceMap": "120:259:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;120:259:5;;;;;;:::i;:::-;;;:::i;:::-;-1:-1:-1;;;;;120:259:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;120:259:5;;;;3388:5:1;120:259:5;;:::i;:::-;;;735:10:4;;3388:5:1;:::i;:::-;120:259:5;;;;;;;;;;;;;-1:-1:-1;;120:259:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;120:259:5;;;;;-1:-1:-1;;120:259:5;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;120:259:5;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;120:259:5;;;;-1:-1:-1;;;;;120:259:5;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;120:259:5;;;;;;;2761:2:1;120:259:5;;;;;;;;;-1:-1:-1;;120:259:5;;;;;;:::i;:::-;;;:::i;:::-;-1:-1:-1;;;;;120:259:5;;;;;;;;;;;;;;;735:10:4;120:259:5;;;;;;;;;;;;;;-1:-1:-1;;10484:36:1;;10480:309;;120:259:5;4890:5:1;;;;;:::i;10480:309::-;10540:24;;;10536:130;;9717:19;;9713:89;;735:10:4;9815:21:1;9811:90;;4890:5;120:259:5;;;;;;;;;;;;;;735:10:4;120:259:5;-1:-1:-1;120:259:5;;;;;-1:-1:-1;120:259:5;;;;;10480:309:1;;;9811:90;9859:31;;;120:259:5;9859:31:1;120:259:5;;;;;9859:31:1;9713:89;9759:32;;;120:259:5;9759:32:1;120:259:5;;;;;9759:32:1;10536:130;10591:60;;;;;120:259:5;10591:60:1;735:10:4;120:259:5;;;;;;;;10591:60:1;120:259:5;;;;;;-1:-1:-1;;120:259:5;;;;;2881:12:1;120:259:5;;;;;;;;;;;;;-1:-1:-1;;120:259:5;;;;;;:::i;:::-;;;735:10:4;;9717:19:1;9713:89;;-1:-1:-1;;;;;120:259:5;;9815:21:1;;9811:90;;735:10:4;120:259:5;;;;;;;;;-1:-1:-1;120:259:5;;;;;-1:-1:-1;120:259:5;;;;;;;9989:31:1;120:259:5;735:10:4;9989:31:1;;120:259:5;;;;;;;;;;;;;-1:-1:-1;;120:259:5;;;;;1837:5:1;120:259:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;120:259:5;;;;;-1:-1:-1;;120:259:5;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;1837:5:1;120:259:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;120:259:5;;;;;;:::o;:::-;;;;-1:-1:-1;;;;;120:259:5;;;;;;:::o;5297:300:1:-;-1:-1:-1;;;;;120:259:5;;5380:18:1;;5376:86;;-1:-1:-1;;;;;120:259:5;;5475:16:1;;5471:86;;5396:1;120:259:5;;;;;;;;;;6244:19:1;;;6240:115;;120:259:5;;;;6987:25:1;120:259:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6987:25:1;5297:300::o;6240:115::-;6290:50;120:259:5;6290:50:1;;;;;;;;120:259:5;;;;;6290:50:1;5471:86;5514:32;;;5396:1;5514:32;5396:1;5514:32;120:259:5;;5396:1:1;5514:32;5376:86;5421:30;;;5396:1;5421:30;5396:1;5421:30;120:259:5;;5396:1:1;5421:30"
            },
            "methodIdentifiers": {
              "allowance(address,address)": "dd62ed3e",
              "approve(address,uint256)": "095ea7b3",
              "balanceOf(address)": "70a08231",
              "decimals()": "313ce567",
              "name()": "06fdde03",
              "symbol()": "95d89b41",
              "totalSupply()": "18160ddd",
              "transfer(address,uint256)": "a9059cbb",
              "transferFrom(address,address,uint256)": "23b872dd"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"initialAccount\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"initialBalance\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/ERC20Mock.sol\":\"ERC20Mock\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x86b7b71a6aedefdad89b607378eeab1dcc5389b9ea7d17346d08af01d7190994\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1dc2db8d94a21eac8efe03adf574c419b08536409b416057a2b5b95cb772c43c\",\"dweb:/ipfs/QmZfqJCKVU1ScuX2A7s8WZdQEaikwJbDH5JBrBdKTUT4Gu\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xd6fa4088198f04eef10c5bce8a2f4d60554b7ec4b987f684393c01bf79b94d9f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f95ee0bbd4dd3ac730d066ba3e785ded4565e890dbec2fa7d3b9fe3bad9d0d6e\",\"dweb:/ipfs/QmSLr6bHkPFWT7ntj34jmwfyskpwo97T9jZUrk5sz3sdtR\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"contracts/ERC20Mock.sol\":{\"keccak256\":\"0xde4b9fc15eae55da18b0e3d6b38c1d2fd5ca07c6b6a1162ce3fed8fa3205aaeb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ae2115804fd3ca49c92ccc13f7955565ac796b1ddd3b59e58619f8fa20e9c0ba\",\"dweb:/ipfs/QmVWy2zWi8wAkNr72V7HwVxTMrVgciX8ARkZPuBAFvLUtG\"]}},\"version\":1}"
        }
      },
      "contracts/PetTrace.sol": {
        "IERC20": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                }
              ],
              "name": "allowance",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "balanceOf",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "transfer",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "transferFrom",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "allowance(address,address)": "dd62ed3e",
              "balanceOf(address)": "70a08231",
              "transfer(address,uint256)": "a9059cbb",
              "transferFrom(address,address,uint256)": "23b872dd"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Standard ERC20 interface with required functions for token interactions\",\"kind\":\"dev\",\"methods\":{},\"title\":\"IERC20 Interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/PetTrace.sol\":\"IERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/PetTrace.sol\":{\"keccak256\":\"0x35acb61ee1cd5c13ab7b01b236cdb0ea0b42aedc11f5b8f3e74a0532d60579f6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ae71cb763c19c38dae2c07a9f25dc365ee552cec7531c02f6aafd7dcdbbacd6b\",\"dweb:/ipfs/QmRCZGZPsnrFGF9yK63KsDnWxbmTcTnXbvx3tWtyMEepTr\"]}},\"version\":1}"
        },
        "IERC677": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                }
              ],
              "name": "allowance",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "balanceOf",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "transfer",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "data",
                  "type": "bytes"
                }
              ],
              "name": "transferAndCall",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "transferFrom",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "allowance(address,address)": "dd62ed3e",
              "balanceOf(address)": "70a08231",
              "transfer(address,uint256)": "a9059cbb",
              "transferAndCall(address,uint256,bytes)": "4000aea0",
              "transferFrom(address,address,uint256)": "23b872dd"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"transferAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/PetTrace.sol\":\"IERC677\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/PetTrace.sol\":{\"keccak256\":\"0x35acb61ee1cd5c13ab7b01b236cdb0ea0b42aedc11f5b8f3e74a0532d60579f6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ae71cb763c19c38dae2c07a9f25dc365ee552cec7531c02f6aafd7dcdbbacd6b\",\"dweb:/ipfs/QmRCZGZPsnrFGF9yK63KsDnWxbmTcTnXbvx3tWtyMEepTr\"]}},\"version\":1}"
        },
        "PetTrace": {
          "abi": [
            {
              "inputs": [],
              "stateMutability": "nonpayable",
              "type": "constructor"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "newAdmin",
                  "type": "address"
                }
              ],
              "name": "AdminChanged",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "uint256",
                  "name": "petId",
                  "type": "uint256"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "finder",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "celoAmount",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "cUSDAmount",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "gDollarAmount",
                  "type": "uint256"
                }
              ],
              "name": "BountyClaimed",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "uint256",
                  "name": "petId",
                  "type": "uint256"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "celoAmount",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "cUSDAmount",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "gDollarAmount",
                  "type": "uint256"
                }
              ],
              "name": "BountyRefunded",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "uint256",
                  "name": "petId",
                  "type": "uint256"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "confirmer",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "bool",
                  "name": "isOwner",
                  "type": "bool"
                }
              ],
              "name": "ConfirmationAdded",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "uint256",
                  "name": "petId",
                  "type": "uint256"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "finder",
                  "type": "address"
                }
              ],
              "name": "PetFound",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "uint256",
                  "name": "petId",
                  "type": "uint256"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                }
              ],
              "name": "PetPosted",
              "type": "event"
            },
            {
              "inputs": [],
              "name": "BOUNTY_TIMEOUT",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "CUSD_ADDRESS",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "GDOLLAR_ADDRESS",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "MAX_CELO_BOUNTY",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "MAX_CUSD_BOUNTY",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "admin",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "petId",
                  "type": "uint256"
                }
              ],
              "name": "cancelAndRefund",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "petId",
                  "type": "uint256"
                }
              ],
              "name": "claimBounty",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "petId",
                  "type": "uint256"
                }
              ],
              "name": "confirmFoundByOwner",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                }
              ],
              "name": "emergencyWithdrawCUSD",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "name": "escrowedCUSD",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "name": "escrowedGDOLLAR",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "getAllLostPets",
              "outputs": [
                {
                  "internalType": "uint256[]",
                  "name": "",
                  "type": "uint256[]"
                },
                {
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "id",
                      "type": "uint256"
                    },
                    {
                      "internalType": "address payable",
                      "name": "owner",
                      "type": "address"
                    },
                    {
                      "internalType": "string",
                      "name": "name",
                      "type": "string"
                    },
                    {
                      "internalType": "string",
                      "name": "breed",
                      "type": "string"
                    },
                    {
                      "internalType": "string",
                      "name": "gender",
                      "type": "string"
                    },
                    {
                      "internalType": "uint128",
                      "name": "sizeCm",
                      "type": "uint128"
                    },
                    {
                      "internalType": "uint128",
                      "name": "ageMonths",
                      "type": "uint128"
                    },
                    {
                      "internalType": "string",
                      "name": "dateTimeLost",
                      "type": "string"
                    },
                    {
                      "internalType": "string",
                      "name": "description",
                      "type": "string"
                    },
                    {
                      "internalType": "string",
                      "name": "imageUrl",
                      "type": "string"
                    },
                    {
                      "internalType": "string",
                      "name": "lastSeenLocation",
                      "type": "string"
                    },
                    {
                      "internalType": "string",
                      "name": "contactName",
                      "type": "string"
                    },
                    {
                      "internalType": "string",
                      "name": "contactPhone",
                      "type": "string"
                    },
                    {
                      "internalType": "string",
                      "name": "contactEmail",
                      "type": "string"
                    },
                    {
                      "internalType": "uint128",
                      "name": "celoBounty",
                      "type": "uint128"
                    },
                    {
                      "internalType": "uint128",
                      "name": "cUSDBounty",
                      "type": "uint128"
                    },
                    {
                      "internalType": "uint128",
                      "name": "gDollarBounty",
                      "type": "uint128"
                    },
                    {
                      "internalType": "enum PetTrace.PetStatus",
                      "name": "status",
                      "type": "uint8"
                    },
                    {
                      "internalType": "bool",
                      "name": "ownerConfirmed",
                      "type": "bool"
                    },
                    {
                      "internalType": "bool",
                      "name": "finderConfirmed",
                      "type": "bool"
                    },
                    {
                      "internalType": "address",
                      "name": "finder",
                      "type": "address"
                    }
                  ],
                  "internalType": "struct PetTrace.Pet[]",
                  "name": "",
                  "type": "tuple[]"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "getAllPets",
              "outputs": [
                {
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "id",
                      "type": "uint256"
                    },
                    {
                      "internalType": "address payable",
                      "name": "owner",
                      "type": "address"
                    },
                    {
                      "internalType": "string",
                      "name": "name",
                      "type": "string"
                    },
                    {
                      "internalType": "string",
                      "name": "breed",
                      "type": "string"
                    },
                    {
                      "internalType": "string",
                      "name": "gender",
                      "type": "string"
                    },
                    {
                      "internalType": "uint128",
                      "name": "sizeCm",
                      "type": "uint128"
                    },
                    {
                      "internalType": "uint128",
                      "name": "ageMonths",
                      "type": "uint128"
                    },
                    {
                      "internalType": "string",
                      "name": "dateTimeLost",
                      "type": "string"
                    },
                    {
                      "internalType": "string",
                      "name": "description",
                      "type": "string"
                    },
                    {
                      "internalType": "string",
                      "name": "imageUrl",
                      "type": "string"
                    },
                    {
                      "internalType": "string",
                      "name": "lastSeenLocation",
                      "type": "string"
                    },
                    {
                      "internalType": "string",
                      "name": "contactName",
                      "type": "string"
                    },
                    {
                      "internalType": "string",
                      "name": "contactPhone",
                      "type": "string"
                    },
                    {
                      "internalType": "string",
                      "name": "contactEmail",
                      "type": "string"
                    },
                    {
                      "internalType": "uint128",
                      "name": "celoBounty",
                      "type": "uint128"
                    },
                    {
                      "internalType": "uint128",
                      "name": "cUSDBounty",
                      "type": "uint128"
                    },
                    {
                      "internalType": "uint128",
                      "name": "gDollarBounty",
                      "type": "uint128"
                    },
                    {
                      "internalType": "enum PetTrace.PetStatus",
                      "name": "status",
                      "type": "uint8"
                    },
                    {
                      "internalType": "bool",
                      "name": "ownerConfirmed",
                      "type": "bool"
                    },
                    {
                      "internalType": "bool",
                      "name": "finderConfirmed",
                      "type": "bool"
                    },
                    {
                      "internalType": "address",
                      "name": "finder",
                      "type": "address"
                    }
                  ],
                  "internalType": "struct PetTrace.Pet[]",
                  "name": "",
                  "type": "tuple[]"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "startIndex",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "maxCount",
                  "type": "uint256"
                }
              ],
              "name": "getLostPetIds",
              "outputs": [
                {
                  "internalType": "uint256[]",
                  "name": "ids",
                  "type": "uint256[]"
                },
                {
                  "internalType": "bool",
                  "name": "hasMore",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "getLostPetsCount",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "petId",
                  "type": "uint256"
                }
              ],
              "name": "getPetDetails",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                },
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                },
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                },
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                },
                {
                  "internalType": "uint128",
                  "name": "",
                  "type": "uint128"
                },
                {
                  "internalType": "uint128",
                  "name": "",
                  "type": "uint128"
                },
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                },
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                },
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                },
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                },
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                },
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                },
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                },
                {
                  "internalType": "uint128",
                  "name": "",
                  "type": "uint128"
                },
                {
                  "internalType": "uint128",
                  "name": "",
                  "type": "uint128"
                },
                {
                  "internalType": "uint128",
                  "name": "",
                  "type": "uint128"
                },
                {
                  "internalType": "enum PetTrace.PetStatus",
                  "name": "",
                  "type": "uint8"
                },
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                },
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "petId",
                  "type": "uint256"
                }
              ],
              "name": "markAsFound",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "nextPetId",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "name": "pets",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "id",
                  "type": "uint256"
                },
                {
                  "internalType": "address payable",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "internalType": "string",
                  "name": "name",
                  "type": "string"
                },
                {
                  "internalType": "string",
                  "name": "breed",
                  "type": "string"
                },
                {
                  "internalType": "string",
                  "name": "gender",
                  "type": "string"
                },
                {
                  "internalType": "uint128",
                  "name": "sizeCm",
                  "type": "uint128"
                },
                {
                  "internalType": "uint128",
                  "name": "ageMonths",
                  "type": "uint128"
                },
                {
                  "internalType": "string",
                  "name": "dateTimeLost",
                  "type": "string"
                },
                {
                  "internalType": "string",
                  "name": "description",
                  "type": "string"
                },
                {
                  "internalType": "string",
                  "name": "imageUrl",
                  "type": "string"
                },
                {
                  "internalType": "string",
                  "name": "lastSeenLocation",
                  "type": "string"
                },
                {
                  "internalType": "string",
                  "name": "contactName",
                  "type": "string"
                },
                {
                  "internalType": "string",
                  "name": "contactPhone",
                  "type": "string"
                },
                {
                  "internalType": "string",
                  "name": "contactEmail",
                  "type": "string"
                },
                {
                  "internalType": "uint128",
                  "name": "celoBounty",
                  "type": "uint128"
                },
                {
                  "internalType": "uint128",
                  "name": "cUSDBounty",
                  "type": "uint128"
                },
                {
                  "internalType": "uint128",
                  "name": "gDollarBounty",
                  "type": "uint128"
                },
                {
                  "internalType": "enum PetTrace.PetStatus",
                  "name": "status",
                  "type": "uint8"
                },
                {
                  "internalType": "bool",
                  "name": "ownerConfirmed",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "finderConfirmed",
                  "type": "bool"
                },
                {
                  "internalType": "address",
                  "name": "finder",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "string",
                  "name": "name",
                  "type": "string"
                },
                {
                  "internalType": "string",
                  "name": "breed",
                  "type": "string"
                },
                {
                  "internalType": "string",
                  "name": "gender",
                  "type": "string"
                },
                {
                  "internalType": "uint128",
                  "name": "sizeCm",
                  "type": "uint128"
                },
                {
                  "internalType": "uint128",
                  "name": "ageMonths",
                  "type": "uint128"
                },
                {
                  "internalType": "string",
                  "name": "dateTimeLost",
                  "type": "string"
                },
                {
                  "internalType": "string",
                  "name": "description",
                  "type": "string"
                },
                {
                  "internalType": "string",
                  "name": "imageUrl",
                  "type": "string"
                },
                {
                  "internalType": "string",
                  "name": "lastSeenLocation",
                  "type": "string"
                },
                {
                  "internalType": "string",
                  "name": "contactName",
                  "type": "string"
                },
                {
                  "internalType": "string",
                  "name": "contactPhone",
                  "type": "string"
                },
                {
                  "internalType": "string",
                  "name": "contactEmail",
                  "type": "string"
                },
                {
                  "internalType": "uint128",
                  "name": "cUSDBounty",
                  "type": "uint128"
                },
                {
                  "internalType": "uint128",
                  "name": "gDollarBounty",
                  "type": "uint128"
                }
              ],
              "name": "postLostPet",
              "outputs": [],
              "stateMutability": "payable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "name": "postTime",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "newAdmin",
                  "type": "address"
                }
              ],
              "name": "transferAdmin",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x35 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH2 0x100 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT AND CALLER PUSH1 0x8 SHL PUSH2 0x100 PUSH1 0x1 PUSH1 0xA8 SHL SUB AND OR SWAP1 SSTORE PUSH2 0x3C0A SWAP1 DUP2 PUSH2 0x3B DUP3 CODECOPY RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH2 0x460 DUP1 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x14 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0xB5D39FA EQ PUSH2 0x323E JUMPI POP DUP1 PUSH4 0x1850E3A7 EQ PUSH2 0x3212 JUMPI DUP1 PUSH4 0x3F26DECD EQ PUSH2 0x30AF JUMPI DUP1 PUSH4 0x3FA8BE32 EQ PUSH2 0x308C JUMPI DUP1 PUSH4 0x403F8CC7 EQ PUSH2 0x306E JUMPI DUP1 PUSH4 0x44021AD7 EQ PUSH2 0x2D32 JUMPI DUP1 PUSH4 0x465C66E9 EQ PUSH2 0x2D03 JUMPI DUP1 PUSH4 0x543DF5A3 EQ PUSH2 0x2A84 JUMPI DUP1 PUSH4 0x5B236D97 EQ PUSH2 0x28B4 JUMPI DUP1 PUSH4 0x5E23985B EQ PUSH2 0x2744 JUMPI DUP1 PUSH4 0x75829DEF EQ PUSH2 0x267C JUMPI DUP1 PUSH4 0x8B504C17 EQ PUSH2 0x260E JUMPI DUP1 PUSH4 0x9DC5AC72 EQ PUSH2 0x25E9 JUMPI DUP1 PUSH4 0xA06E0061 EQ PUSH2 0x24C6 JUMPI DUP1 PUSH4 0xB3035B64 EQ PUSH2 0x2362 JUMPI DUP1 PUSH4 0xCE2ED0E2 EQ PUSH2 0xA16 JUMPI DUP1 PUSH4 0xCFB869BF EQ PUSH2 0x79C JUMPI DUP1 PUSH4 0xD25A6F05 EQ PUSH2 0x770 JUMPI DUP1 PUSH4 0xD32BFB6C EQ PUSH2 0x437 JUMPI DUP1 PUSH4 0xD74A48A4 EQ PUSH2 0x40B JUMPI DUP1 PUSH4 0xD89FD4B4 EQ PUSH2 0x17E JUMPI DUP1 PUSH4 0xEE7AFB1C EQ PUSH2 0x14F JUMPI PUSH4 0xF851A440 EQ PUSH2 0x11D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x14A JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x14A JUMPI PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD PUSH1 0x8 SWAP2 SWAP1 SWAP2 SHR PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x14A JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x14A JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH20 0x62B8B11039FCFE5AB0C56E502B1C372A3D2A9C7A DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x14A JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x14A JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 SLOAD DUP2 LT PUSH2 0x1A0 SWAP1 PUSH2 0x3681 JUMP JUMPDEST PUSH1 0x0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL PUSH1 0x1 SWAP1 SUB PUSH1 0x1 DUP4 ADD SLOAD AND PUSH1 0x5 DUP4 ADD SLOAD SWAP2 PUSH1 0xD DUP5 ADD SLOAD SWAP4 PUSH1 0xE DUP2 ADD SLOAD SWAP3 PUSH1 0x1 PUSH1 0xA0 SHL PUSH1 0x1 SWAP1 SUB PUSH1 0xF DUP4 ADD SLOAD AND SWAP5 PUSH1 0x2 DUP4 ADD PUSH2 0x1ED SWAP1 PUSH2 0x358D JUMP JUMPDEST SWAP1 PUSH2 0x1FA PUSH1 0x3 DUP6 ADD PUSH2 0x358D JUMP JUMPDEST SWAP1 PUSH2 0x207 PUSH1 0x4 DUP7 ADD PUSH2 0x358D JUMP JUMPDEST SWAP1 PUSH2 0x214 PUSH1 0x6 DUP8 ADD PUSH2 0x358D JUMP JUMPDEST SWAP1 PUSH2 0x221 PUSH1 0x7 DUP9 ADD PUSH2 0x358D JUMP JUMPDEST SWAP3 PUSH2 0x22E PUSH1 0x8 DUP10 ADD PUSH2 0x358D JUMP JUMPDEST SWAP5 PUSH2 0x23B PUSH1 0x9 DUP11 ADD PUSH2 0x358D JUMP JUMPDEST SWAP7 PUSH2 0x248 PUSH1 0xA DUP12 ADD PUSH2 0x358D JUMP JUMPDEST SWAP9 PUSH2 0x255 PUSH1 0xB DUP13 ADD PUSH2 0x358D JUMP JUMPDEST SWAP11 PUSH1 0xC ADD PUSH2 0x262 SWAP1 PUSH2 0x358D JUMP JUMPDEST SWAP12 PUSH1 0x40 MLOAD PUSH2 0x420 MSTORE PUSH2 0x420 MLOAD MSTORE PUSH2 0x420 MLOAD PUSH1 0x20 ADD MSTORE PUSH2 0x420 MLOAD PUSH1 0x40 ADD PUSH2 0x2A0 SWAP1 MSTORE PUSH2 0x420 MLOAD PUSH2 0x2A0 ADD PUSH2 0x294 SWAP2 PUSH2 0x32B1 JUMP JUMPDEST PUSH2 0x420 MLOAD DUP2 SUB PUSH2 0x420 MLOAD PUSH1 0x60 ADD MSTORE PUSH2 0x2AB SWAP2 PUSH2 0x32B1 JUMP JUMPDEST PUSH2 0x420 MLOAD DUP2 SUB PUSH2 0x420 MLOAD PUSH1 0x80 ADD MSTORE PUSH2 0x2C2 SWAP2 PUSH2 0x32B1 JUMP JUMPDEST SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP2 AND PUSH2 0x420 MLOAD PUSH1 0xA0 ADD MSTORE PUSH1 0x80 SHR PUSH2 0x420 MLOAD PUSH1 0xC0 ADD MSTORE PUSH2 0x420 MLOAD DUP2 SUB PUSH2 0x420 MLOAD PUSH1 0xE0 ADD MSTORE PUSH2 0x2F7 SWAP2 PUSH2 0x32B1 JUMP JUMPDEST PUSH2 0x420 MLOAD DUP2 SUB PUSH2 0x420 MLOAD PUSH2 0x100 ADD MSTORE PUSH2 0x30F SWAP2 PUSH2 0x32B1 JUMP JUMPDEST PUSH2 0x420 MLOAD DUP2 SUB PUSH2 0x420 MLOAD PUSH2 0x120 ADD MSTORE PUSH2 0x327 SWAP2 PUSH2 0x32B1 JUMP JUMPDEST PUSH2 0x420 MLOAD DUP2 SUB PUSH2 0x420 MLOAD PUSH2 0x140 ADD MSTORE PUSH2 0x33F SWAP2 PUSH2 0x32B1 JUMP JUMPDEST PUSH2 0x420 MLOAD DUP2 SUB PUSH2 0x420 MLOAD PUSH2 0x160 ADD MSTORE PUSH2 0x357 SWAP2 PUSH2 0x32B1 JUMP JUMPDEST PUSH2 0x420 MLOAD DUP2 SUB PUSH2 0x420 MLOAD PUSH2 0x180 ADD MSTORE PUSH2 0x36F SWAP2 PUSH2 0x32B1 JUMP JUMPDEST PUSH2 0x420 MLOAD DUP2 SUB PUSH2 0x420 MLOAD PUSH2 0x1A0 ADD MSTORE PUSH2 0x387 SWAP2 PUSH2 0x32B1 JUMP JUMPDEST SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP2 AND PUSH2 0x420 MLOAD PUSH2 0x1C0 ADD MSTORE PUSH1 0x80 SHR PUSH2 0x420 MLOAD PUSH2 0x1E0 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP2 AND PUSH2 0x420 MLOAD PUSH2 0x200 ADD MSTORE PUSH2 0x420 MLOAD PUSH2 0x220 ADD DUP2 PUSH1 0x80 SHR PUSH1 0xFF AND SWAP1 PUSH2 0x3D3 SWAP2 PUSH2 0x32D6 JUMP JUMPDEST DUP1 PUSH1 0x88 SHR PUSH1 0xFF AND ISZERO ISZERO PUSH2 0x420 MLOAD PUSH2 0x240 ADD MSTORE PUSH1 0x90 SHR PUSH1 0xFF AND ISZERO ISZERO PUSH2 0x420 MLOAD PUSH2 0x260 ADD MSTORE PUSH2 0x420 MLOAD PUSH2 0x280 ADD MSTORE PUSH2 0x420 MLOAD SWAP1 SUB PUSH2 0x420 MLOAD RETURN JUMPDEST CALLVALUE PUSH2 0x14A JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x14A JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x14A JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x14A JUMPI PUSH1 0x4 CALLDATALOAD DUP1 PUSH1 0x0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH2 0x46F PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x1 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD AND CALLER EQ PUSH2 0x390F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SLOAD PUSH2 0x481 PUSH1 0xFF DUP3 AND ISZERO PUSH2 0x36C2 JUMP JUMPDEST PUSH1 0xFF NOT AND OR PUSH1 0x0 SSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0xE DUP3 ADD DUP1 SLOAD SWAP3 PUSH1 0xFF DUP5 PUSH1 0x80 SHR AND PUSH1 0x3 DUP2 LT ISZERO PUSH2 0x75A JUMPI PUSH2 0x4B9 SWAP1 ISZERO PUSH2 0x394B JUMP JUMPDEST PUSH1 0xF DUP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x715 JUMPI PUSH1 0xD ADD DUP1 SLOAD PUSH1 0x0 SWAP2 DUP3 SWAP1 SSTORE DUP3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB NOT AND DUP4 SSTORE DUP4 DUP3 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 DUP5 SWAP1 SSTORE PUSH1 0x4 SWAP1 SWAP2 MSTORE DUP3 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP1 DUP3 AND SWAP5 AND SWAP1 PUSH1 0x80 SHR DUP5 DUP1 ISZERO DUP1 ISZERO PUSH2 0x6EE JUMPI JUMPDEST POP POP DUP1 PUSH2 0x648 JUMPI JUMPDEST DUP2 PUSH2 0x588 JUMPI JUMPDEST DUP3 SLOAD PUSH1 0xFF PUSH1 0x80 SHL NOT AND PUSH1 0x1 PUSH1 0x81 SHL OR SWAP1 SWAP3 SSTORE PUSH1 0x40 DUP1 MLOAD SWAP5 DUP6 MSTORE PUSH1 0x20 DUP6 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP1 DUP4 ADD MSTORE CALLER SWAP2 PUSH32 0x5A15FED544596F86AB10D13CE99DFEB4E13095D939B5749AE220FBC4F0584636 SWAP1 DUP1 PUSH1 0x60 DUP2 ADD JUMPDEST SUB SWAP1 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE STOP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x20 DUP2 PUSH1 0x44 DUP2 PUSH1 0x0 PUSH20 0x62B8B11039FCFE5AB0C56E502B1C372A3D2A9C7A GAS CALL SWAP1 DUP2 ISZERO PUSH2 0x63C JUMPI PUSH1 0x0 SWAP2 PUSH2 0x60D JUMPI JUMPDEST POP PUSH2 0x52A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x11C9081C99599D5B990819985A5B1959 PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH2 0x62F SWAP2 POP PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x635 JUMPI JUMPDEST PUSH2 0x627 DUP2 DUP4 PUSH2 0x356C JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x3669 JUMP JUMPDEST DUP7 PUSH2 0x5D0 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x61D JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x20 DUP2 PUSH1 0x44 DUP2 PUSH1 0x0 PUSH20 0x765DE816845861E75A25FCA122BB6898B8B1282A GAS CALL SWAP1 DUP2 ISZERO PUSH2 0x63C JUMPI PUSH1 0x0 SWAP2 PUSH2 0x6CF JUMPI JUMPDEST POP PUSH2 0x524 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x18D554D1081C99599D5B990819985A5B1959 PUSH1 0x72 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH2 0x6E8 SWAP2 POP PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x635 JUMPI PUSH2 0x627 DUP2 DUP4 PUSH2 0x356C JUMP JUMPDEST DUP7 PUSH2 0x690 JUMP JUMPDEST PUSH1 0x0 SWAP1 PUSH2 0x70C JUMPI JUMPDEST PUSH1 0x0 DUP1 DUP1 SWAP4 DUP2 SWAP4 CALLER SWAP1 CALL ISZERO PUSH2 0x63C JUMPI DUP5 DUP7 PUSH2 0x51C JUMP JUMPDEST POP PUSH2 0x8FC PUSH2 0x6F6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x46696E64657220616C72656164792061737369676E6564000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST CALLVALUE PUSH2 0x14A JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x14A JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x14A JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x14A JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL PUSH1 0x1 SWAP1 SUB PUSH1 0x1 DUP4 ADD SLOAD AND SWAP2 PUSH1 0x2 DUP2 ADD PUSH2 0x7DC SWAP1 PUSH2 0x358D JUMP JUMPDEST PUSH2 0x7E8 PUSH1 0x3 DUP4 ADD PUSH2 0x358D JUMP JUMPDEST PUSH2 0x7F4 PUSH1 0x4 DUP5 ADD PUSH2 0x358D JUMP JUMPDEST PUSH1 0x5 DUP5 ADD SLOAD PUSH2 0x805 PUSH1 0x6 DUP7 ADD PUSH2 0x358D JUMP JUMPDEST PUSH2 0x811 PUSH1 0x7 DUP8 ADD PUSH2 0x358D JUMP JUMPDEST PUSH2 0x81D PUSH1 0x8 DUP9 ADD PUSH2 0x358D JUMP JUMPDEST SWAP2 PUSH2 0x82A PUSH1 0x9 DUP10 ADD PUSH2 0x358D JUMP JUMPDEST SWAP4 PUSH2 0x837 PUSH1 0xA DUP11 ADD PUSH2 0x358D JUMP JUMPDEST SWAP6 PUSH2 0x844 PUSH1 0xB DUP12 ADD PUSH2 0x358D JUMP JUMPDEST SWAP8 PUSH2 0x851 PUSH1 0xC DUP13 ADD PUSH2 0x358D JUMP JUMPDEST SWAP10 PUSH1 0xD DUP13 ADD SLOAD SWAP14 PUSH1 0xE DUP14 ADD SLOAD SWAP13 PUSH1 0x1 PUSH1 0xA0 SHL PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0xF ADD SLOAD AND SWAP14 PUSH1 0x40 MLOAD PUSH2 0x440 MSTORE PUSH2 0x440 MLOAD MSTORE PUSH2 0x440 MLOAD PUSH1 0x20 ADD MSTORE PUSH2 0x440 MLOAD PUSH1 0x40 ADD PUSH2 0x2A0 SWAP1 MSTORE PUSH2 0x440 MLOAD PUSH2 0x2A0 ADD PUSH2 0x89F SWAP2 PUSH2 0x32B1 JUMP JUMPDEST PUSH2 0x440 MLOAD DUP2 SUB PUSH2 0x440 MLOAD PUSH1 0x60 ADD MSTORE PUSH2 0x8B6 SWAP2 PUSH2 0x32B1 JUMP JUMPDEST PUSH2 0x440 MLOAD DUP2 SUB PUSH2 0x440 MLOAD PUSH1 0x80 ADD MSTORE PUSH2 0x8CD SWAP2 PUSH2 0x32B1 JUMP JUMPDEST SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP2 AND PUSH2 0x440 MLOAD PUSH1 0xA0 ADD MSTORE PUSH1 0x80 SHR PUSH2 0x440 MLOAD PUSH1 0xC0 ADD MSTORE PUSH2 0x440 MLOAD DUP2 SUB PUSH2 0x440 MLOAD PUSH1 0xE0 ADD MSTORE PUSH2 0x902 SWAP2 PUSH2 0x32B1 JUMP JUMPDEST PUSH2 0x440 MLOAD DUP2 SUB PUSH2 0x440 MLOAD PUSH2 0x100 ADD MSTORE PUSH2 0x91A SWAP2 PUSH2 0x32B1 JUMP JUMPDEST PUSH2 0x440 MLOAD DUP2 SUB PUSH2 0x440 MLOAD PUSH2 0x120 ADD MSTORE PUSH2 0x932 SWAP2 PUSH2 0x32B1 JUMP JUMPDEST PUSH2 0x440 MLOAD DUP2 SUB PUSH2 0x440 MLOAD PUSH2 0x140 ADD MSTORE PUSH2 0x94A SWAP2 PUSH2 0x32B1 JUMP JUMPDEST PUSH2 0x440 MLOAD DUP2 SUB PUSH2 0x440 MLOAD PUSH2 0x160 ADD MSTORE PUSH2 0x962 SWAP2 PUSH2 0x32B1 JUMP JUMPDEST PUSH2 0x440 MLOAD DUP2 SUB PUSH2 0x440 MLOAD PUSH2 0x180 ADD MSTORE PUSH2 0x97A SWAP2 PUSH2 0x32B1 JUMP JUMPDEST PUSH2 0x440 MLOAD DUP2 SUB PUSH2 0x440 MLOAD PUSH2 0x1A0 ADD MSTORE PUSH2 0x992 SWAP2 PUSH2 0x32B1 JUMP JUMPDEST SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP2 AND PUSH2 0x440 MLOAD PUSH2 0x1C0 ADD MSTORE PUSH1 0x80 SHR PUSH2 0x440 MLOAD PUSH2 0x1E0 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP2 AND PUSH2 0x440 MLOAD PUSH2 0x200 ADD MSTORE PUSH2 0x440 MLOAD PUSH2 0x220 ADD DUP2 PUSH1 0x80 SHR PUSH1 0xFF AND SWAP1 PUSH2 0x9DE SWAP2 PUSH2 0x32D6 JUMP JUMPDEST DUP1 PUSH1 0x88 SHR PUSH1 0xFF AND ISZERO ISZERO PUSH2 0x440 MLOAD PUSH2 0x240 ADD MSTORE PUSH1 0x90 SHR PUSH1 0xFF AND ISZERO ISZERO PUSH2 0x440 MLOAD PUSH2 0x260 ADD MSTORE PUSH2 0x440 MLOAD PUSH2 0x280 ADD MSTORE PUSH2 0x440 MLOAD SWAP1 SUB PUSH2 0x440 MLOAD RETURN JUMPDEST PUSH2 0x1C0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x14A JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x14A JUMPI PUSH2 0xA42 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x34E9 JUMP JUMPDEST PUSH2 0x2C0 MSTORE PUSH2 0x3A0 MSTORE PUSH1 0x24 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x14A JUMPI PUSH2 0xA69 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x34E9 JUMP JUMPDEST PUSH2 0x320 MSTORE PUSH2 0x400 MSTORE PUSH1 0x44 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x14A JUMPI PUSH2 0xA90 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x34E9 JUMP JUMPDEST PUSH2 0x120 MSTORE PUSH2 0x160 MSTORE PUSH1 0x64 CALLDATALOAD PUSH2 0x1A0 DUP2 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP2 AND SWAP1 SUB PUSH2 0x14A JUMPI PUSH1 0x84 CALLDATALOAD PUSH2 0x1C0 DUP2 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP2 AND SWAP1 SUB PUSH2 0x14A JUMPI PUSH1 0xA4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x14A JUMPI PUSH2 0xAE9 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x34E9 JUMP JUMPDEST PUSH2 0x220 MSTORE PUSH2 0x240 MSTORE PUSH1 0xC4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x14A JUMPI PUSH2 0xB10 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x34E9 JUMP JUMPDEST PUSH2 0x280 MSTORE PUSH2 0x2A0 MSTORE PUSH1 0xE4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x14A JUMPI PUSH2 0xB37 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x34E9 JUMP JUMPDEST PUSH2 0x3E0 MSTORE PUSH2 0x340 MSTORE PUSH2 0x104 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x14A JUMPI PUSH2 0xB5F SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x34E9 JUMP JUMPDEST PUSH2 0x3C0 MSTORE PUSH2 0x380 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB PUSH2 0x124 CALLDATALOAD GT PUSH2 0x14A JUMPI PUSH2 0xB88 CALLDATASIZE PUSH2 0x124 CALLDATALOAD PUSH1 0x4 ADD PUSH2 0x34E9 JUMP JUMPDEST PUSH2 0x360 MSTORE PUSH2 0x300 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB PUSH2 0x144 CALLDATALOAD GT PUSH2 0x14A JUMPI PUSH2 0xBB1 CALLDATASIZE PUSH2 0x144 CALLDATALOAD PUSH1 0x4 ADD PUSH2 0x34E9 JUMP JUMPDEST PUSH2 0x2E0 MSTORE PUSH2 0x260 MSTORE PUSH2 0x164 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x14A JUMPI PUSH2 0xBD9 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x34E9 JUMP JUMPDEST PUSH2 0x200 MSTORE PUSH2 0x1E0 MSTORE PUSH2 0x184 CALLDATALOAD PUSH2 0x180 DUP2 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP2 AND SWAP1 SUB PUSH2 0x14A JUMPI PUSH2 0x1A4 CALLDATALOAD PUSH2 0x140 DUP2 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP2 AND SWAP1 SUB PUSH2 0x14A JUMPI PUSH1 0x1 PUSH1 0x0 SLOAD PUSH2 0xC27 PUSH1 0xFF DUP3 AND ISZERO PUSH2 0x36C2 JUMP JUMPDEST PUSH1 0xFF NOT AND OR PUSH1 0x0 SSTORE PUSH8 0x8AC7230489E80000 CALLVALUE GT PUSH2 0x2325 JUMPI PUSH10 0x21E19E0C9BAB2400000 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB PUSH2 0x180 MLOAD AND GT PUSH2 0x22E8 JUMPI PUSH10 0x21E19E0C9BAB2400000 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB PUSH2 0x140 MLOAD AND GT PUSH2 0x22AD JUMPI CALLVALUE ISZERO DUP1 ISZERO SWAP1 PUSH2 0x2298 JUMPI JUMPDEST DUP1 ISZERO PUSH2 0x2283 JUMPI JUMPDEST ISZERO PUSH2 0x224C JUMPI PUSH1 0x40 PUSH2 0x100 DUP2 SWAP1 MSTORE DUP1 MLOAD PUSH2 0xCC4 SWAP2 PUSH2 0xCA6 SWAP1 DUP3 PUSH2 0x356C JUMP JUMPDEST PUSH1 0x4 DUP2 MSTORE PUSH4 0x4E616D65 PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0x2C0 MLOAD PUSH2 0x3A0 MLOAD PUSH2 0x39FE JUMP JUMPDEST PUSH2 0x100 MLOAD DUP1 MLOAD PUSH2 0xCF7 SWAP2 PUSH2 0xCD8 SWAP1 DUP3 PUSH2 0x356C JUMP JUMPDEST PUSH1 0x5 DUP2 MSTORE PUSH5 0x109C995959 PUSH1 0xDA SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0x320 MLOAD PUSH2 0x400 MLOAD PUSH2 0x39FE JUMP JUMPDEST PUSH2 0x100 MLOAD DUP1 MLOAD PUSH2 0xDE2 SWAP2 PUSH2 0xD0B SWAP1 DUP3 PUSH2 0x356C JUMP JUMPDEST PUSH1 0x6 DUP2 MSTORE PUSH6 0x23B2B73232B9 PUSH1 0xD1 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0xD97 PUSH2 0xD32 CALLDATASIZE PUSH2 0x120 MLOAD PUSH2 0x160 MLOAD PUSH2 0x3988 JUMP JUMPDEST PUSH2 0xD92 DUP2 MLOAD PUSH1 0x1 DUP2 LT ISZERO SWAP1 DUP2 PUSH2 0x2240 JUMPI JUMPDEST POP PUSH2 0x100 MLOAD MLOAD SWAP1 PUSH2 0xD8D PUSH1 0xF PUSH1 0x20 DUP5 DUP10 MLOAD PUSH2 0xD64 DUP2 DUP13 DUP6 DUP1 DUP7 ADD SWAP2 ADD PUSH2 0x328E JUMP JUMPDEST DUP2 ADD PUSH15 0x81B195B99DD1A081A5B9D985B1A59 PUSH1 0x8A SHL DUP4 DUP3 ADD MSTORE SUB ADD PUSH1 0x10 NOT DUP2 ADD DUP6 MSTORE ADD DUP4 PUSH2 0x356C JUMP JUMPDEST PUSH2 0x39CE JUMP JUMPDEST PUSH2 0x3B93 JUMP JUMPDEST ISZERO PUSH2 0xD8D PUSH1 0x10 PUSH1 0x20 PUSH2 0x100 MLOAD MLOAD DUP6 PUSH2 0xDB8 DUP3 SWAP8 MLOAD DUP1 SWAP3 DUP6 DUP1 DUP7 ADD SWAP2 ADD PUSH2 0x328E JUMP JUMPDEST DUP2 ADD PUSH16 0x2063616E6E6F7420626520626C616E6B PUSH1 0x80 SHL DUP4 DUP3 ADD MSTORE SUB ADD PUSH1 0xF NOT DUP2 ADD DUP6 MSTORE ADD DUP4 PUSH2 0x356C JUMP JUMPDEST PUSH2 0x100 MLOAD POP PUSH2 0xEA1 PUSH2 0xDB8 PUSH2 0x100 MLOAD MLOAD PUSH2 0xDFF PUSH2 0x100 MLOAD DUP3 PUSH2 0x356C JUMP JUMPDEST PUSH1 0xB DUP2 MSTORE PUSH2 0xD8D PUSH1 0x10 PUSH1 0x20 DUP1 DUP5 ADD SWAP4 PUSH11 0x2232B9B1B934B83A34B7B7 PUSH1 0xA9 SHL DUP6 MSTORE PUSH2 0xE8B PUSH2 0xE33 CALLDATASIZE PUSH2 0x280 MLOAD PUSH2 0x2A0 MLOAD PUSH2 0x3988 JUMP JUMPDEST PUSH2 0xD92 DUP2 MLOAD PUSH1 0xA DUP2 LT ISZERO SWAP1 DUP2 PUSH2 0x2233 JUMPI JUMPDEST POP PUSH2 0x100 MLOAD MLOAD SWAP1 PUSH2 0xD8D PUSH1 0xF DUP9 DUP5 DUP14 PUSH2 0xE63 DUP12 MLOAD DUP1 SWAP3 DUP6 DUP6 ADD SWAP1 PUSH2 0x328E JUMP JUMPDEST DUP2 ADD PUSH15 0x81B195B99DD1A081A5B9D985B1A59 PUSH1 0x8A SHL DUP4 DUP3 ADD MSTORE SUB ADD DUP11 NOT DUP2 ADD DUP6 MSTORE ADD DUP4 PUSH2 0x356C JUMP JUMPDEST ISZERO SWAP5 PUSH2 0x100 MLOAD MLOAD SWAP7 DUP8 SWAP3 MLOAD DUP1 SWAP3 DUP6 DUP6 ADD SWAP1 PUSH2 0x328E JUMP JUMPDEST PUSH2 0x100 MLOAD POP PUSH2 0xF1F PUSH2 0xDB8 PUSH2 0x100 MLOAD MLOAD PUSH2 0xEBE PUSH2 0x100 MLOAD DUP3 PUSH2 0x356C JUMP JUMPDEST PUSH1 0x9 DUP2 MSTORE PUSH2 0xD8D PUSH1 0x10 PUSH1 0x20 DUP1 DUP5 ADD SWAP4 PUSH9 0x125B5859D948155493 PUSH1 0xBA SHL DUP6 MSTORE PUSH2 0xE8B PUSH2 0xEF0 CALLDATASIZE PUSH2 0x3E0 MLOAD PUSH2 0x340 MLOAD PUSH2 0x3988 JUMP JUMPDEST PUSH2 0xD92 DUP2 MLOAD PUSH1 0xA DUP2 LT ISZERO SWAP1 DUP2 PUSH2 0x2227 JUMPI POP PUSH2 0x100 MLOAD MLOAD SWAP1 PUSH2 0xD8D PUSH1 0xF DUP9 DUP5 DUP14 PUSH2 0xE63 DUP12 MLOAD DUP1 SWAP3 DUP6 DUP6 ADD SWAP1 PUSH2 0x328E JUMP JUMPDEST PUSH2 0x100 MLOAD POP PUSH2 0xF9C PUSH2 0xDB8 PUSH2 0x100 MLOAD MLOAD PUSH2 0xF3C PUSH2 0x100 MLOAD DUP3 PUSH2 0x356C JUMP JUMPDEST PUSH1 0x8 DUP2 MSTORE PUSH2 0xD8D PUSH1 0x10 PUSH1 0x20 DUP1 DUP5 ADD SWAP4 PUSH8 0x2637B1B0BA34B7B7 PUSH1 0xC1 SHL DUP6 MSTORE PUSH2 0xE8B PUSH2 0xF6D CALLDATASIZE PUSH2 0x3C0 MLOAD PUSH2 0x380 MLOAD PUSH2 0x3988 JUMP JUMPDEST PUSH2 0xD92 DUP2 MLOAD PUSH1 0x5 DUP2 LT ISZERO SWAP1 DUP2 PUSH2 0x2227 JUMPI POP PUSH2 0x100 MLOAD MLOAD SWAP1 PUSH2 0xD8D PUSH1 0xF DUP9 DUP5 DUP14 PUSH2 0xE63 DUP12 MLOAD DUP1 SWAP3 DUP6 DUP6 ADD SWAP1 PUSH2 0x328E JUMP JUMPDEST PUSH2 0x100 MLOAD POP PUSH2 0x101D PUSH2 0xDB8 PUSH2 0x100 MLOAD MLOAD PUSH2 0xFB9 PUSH2 0x100 MLOAD DUP3 PUSH2 0x356C JUMP JUMPDEST PUSH1 0xC DUP2 MSTORE PUSH2 0xD8D PUSH1 0x10 PUSH1 0x20 DUP1 DUP5 ADD SWAP4 PUSH12 0x436F6E74616374206E616D65 PUSH1 0xA0 SHL DUP6 MSTORE PUSH2 0xE8B PUSH2 0xFEE CALLDATASIZE PUSH2 0x360 MLOAD PUSH2 0x300 MLOAD PUSH2 0x3988 JUMP JUMPDEST PUSH2 0xD92 DUP2 MLOAD PUSH1 0x2 DUP2 LT ISZERO SWAP1 DUP2 PUSH2 0x221B JUMPI POP PUSH2 0x100 MLOAD MLOAD SWAP1 PUSH2 0xD8D PUSH1 0xF DUP9 DUP5 DUP14 PUSH2 0xE63 DUP12 MLOAD DUP1 SWAP3 DUP6 DUP6 ADD SWAP1 PUSH2 0x328E JUMP JUMPDEST PUSH2 0x100 MLOAD POP PUSH2 0x109F PUSH2 0xDB8 PUSH2 0x100 MLOAD MLOAD PUSH2 0x103A PUSH2 0x100 MLOAD DUP3 PUSH2 0x356C JUMP JUMPDEST PUSH1 0xD DUP2 MSTORE PUSH2 0xD8D PUSH1 0x10 PUSH1 0x20 DUP1 DUP5 ADD SWAP4 PUSH13 0x436F6E746163742070686F6E65 PUSH1 0x98 SHL DUP6 MSTORE PUSH2 0xE8B PUSH2 0x1070 CALLDATASIZE PUSH2 0x2E0 MLOAD PUSH2 0x260 MLOAD PUSH2 0x3988 JUMP JUMPDEST PUSH2 0xD92 DUP2 MLOAD PUSH1 0x5 DUP2 LT ISZERO SWAP1 DUP2 PUSH2 0x220F JUMPI POP PUSH2 0x100 MLOAD MLOAD SWAP1 PUSH2 0xD8D PUSH1 0xF DUP9 DUP5 DUP14 PUSH2 0xE63 DUP12 MLOAD DUP1 SWAP3 DUP6 DUP6 ADD SWAP1 PUSH2 0x328E JUMP JUMPDEST PUSH1 0xA PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB PUSH2 0x1A0 MLOAD AND LT ISZERO DUP1 PUSH2 0x21F8 JUMPI JUMPDEST ISZERO PUSH2 0x21C2 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB PUSH2 0x1C0 MLOAD AND LT ISZERO DUP1 PUSH2 0x21AB JUMPI JUMPDEST ISZERO PUSH2 0x2176 JUMPI PUSH2 0x10F0 PUSH2 0x10EB CALLDATASIZE PUSH2 0x200 MLOAD PUSH2 0x1E0 MLOAD PUSH2 0x3988 JUMP JUMPDEST PUSH2 0x3AED JUMP JUMPDEST ISZERO PUSH2 0x213F JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB PUSH2 0x140 MLOAD AND PUSH2 0x2097 JUMPI JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB PUSH2 0x180 MLOAD AND PUSH2 0x1FB6 JUMPI JUMPDEST PUSH1 0x1 SLOAD PUSH1 0xE0 MSTORE PUSH2 0x100 MLOAD MLOAD PUSH1 0xC0 MSTORE PUSH2 0x1132 PUSH1 0xC0 MLOAD PUSH2 0x3550 JUMP JUMPDEST PUSH1 0xE0 MLOAD PUSH1 0xC0 MLOAD MSTORE CALLER PUSH1 0x20 PUSH1 0xC0 MLOAD ADD MSTORE PUSH2 0x1152 CALLDATASIZE PUSH2 0x2C0 MLOAD PUSH2 0x3A0 MLOAD PUSH2 0x3988 JUMP JUMPDEST PUSH2 0x100 MLOAD PUSH1 0xC0 MLOAD ADD MSTORE PUSH2 0x116C CALLDATASIZE PUSH2 0x320 MLOAD PUSH2 0x400 MLOAD PUSH2 0x3988 JUMP JUMPDEST PUSH1 0x60 PUSH1 0xC0 MLOAD ADD MSTORE PUSH2 0x1184 CALLDATASIZE PUSH2 0x120 MLOAD PUSH2 0x160 MLOAD PUSH2 0x3988 JUMP JUMPDEST PUSH1 0x80 PUSH1 0xC0 MLOAD ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB PUSH2 0x1A0 MLOAD AND PUSH1 0xA0 PUSH1 0xC0 MLOAD ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB PUSH2 0x1C0 MLOAD AND PUSH1 0xC0 DUP1 MLOAD ADD MSTORE PUSH2 0x11C3 CALLDATASIZE PUSH2 0x220 MLOAD PUSH2 0x240 MLOAD PUSH2 0x3988 JUMP JUMPDEST PUSH1 0xE0 PUSH1 0xC0 MLOAD ADD MSTORE PUSH2 0x11DB CALLDATASIZE PUSH2 0x280 MLOAD PUSH2 0x2A0 MLOAD PUSH2 0x3988 JUMP JUMPDEST PUSH2 0x100 PUSH1 0xC0 MLOAD ADD MSTORE PUSH2 0x11F4 CALLDATASIZE PUSH2 0x3E0 MLOAD PUSH2 0x340 MLOAD PUSH2 0x3988 JUMP JUMPDEST PUSH2 0x120 PUSH1 0xC0 MLOAD ADD MSTORE PUSH2 0x120D CALLDATASIZE PUSH2 0x3C0 MLOAD PUSH2 0x380 MLOAD PUSH2 0x3988 JUMP JUMPDEST PUSH2 0x140 PUSH1 0xC0 MLOAD ADD MSTORE PUSH2 0x1226 CALLDATASIZE PUSH2 0x360 MLOAD PUSH2 0x300 MLOAD PUSH2 0x3988 JUMP JUMPDEST PUSH2 0x160 PUSH1 0xC0 MLOAD ADD MSTORE PUSH2 0x123F CALLDATASIZE PUSH2 0x2E0 MLOAD PUSH2 0x260 MLOAD PUSH2 0x3988 JUMP JUMPDEST PUSH2 0x180 PUSH1 0xC0 MLOAD ADD MSTORE PUSH2 0x1258 CALLDATASIZE PUSH2 0x200 MLOAD PUSH2 0x1E0 MLOAD PUSH2 0x3988 JUMP JUMPDEST PUSH2 0x1A0 PUSH1 0xC0 MLOAD ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB CALLVALUE AND PUSH2 0x1C0 PUSH1 0xC0 MLOAD ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB PUSH2 0x180 MLOAD AND PUSH2 0x1E0 PUSH1 0xC0 MLOAD ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB PUSH2 0x140 MLOAD AND PUSH2 0x200 PUSH1 0xC0 MLOAD ADD MSTORE PUSH1 0x0 PUSH2 0x220 PUSH1 0xC0 MLOAD ADD MSTORE PUSH1 0x0 PUSH2 0x240 PUSH1 0xC0 MLOAD ADD MSTORE PUSH1 0x0 PUSH2 0x260 PUSH1 0xC0 MLOAD ADD MSTORE PUSH1 0x0 PUSH2 0x280 PUSH1 0xC0 MLOAD ADD MSTORE PUSH1 0xE0 MLOAD PUSH1 0x0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH2 0x100 MLOAD PUSH1 0x0 KECCAK256 PUSH1 0xC0 MLOAD MLOAD DUP2 SSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x20 PUSH1 0xC0 MLOAD ADD MLOAD AND PUSH1 0x1 DUP3 ADD SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0xA0 SHL DUP3 SLOAD AND OR SWAP1 SSTORE PUSH2 0x100 MLOAD PUSH1 0xC0 MLOAD ADD MLOAD DUP1 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x18E3 JUMPI DUP2 SWAP1 PUSH2 0x1337 PUSH1 0x2 DUP6 ADD SLOAD PUSH2 0x3516 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x1F63 JUMPI JUMPDEST POP PUSH1 0x20 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x1EF2 JUMPI PUSH1 0x0 SWAP3 PUSH2 0x1EE7 JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0x2 DUP3 ADD SSTORE JUMPDEST PUSH1 0x60 PUSH1 0xC0 MLOAD ADD MLOAD DUP1 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x18E3 JUMPI DUP2 SWAP1 PUSH2 0x1396 PUSH1 0x3 DUP6 ADD SLOAD PUSH2 0x3516 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x1E94 JUMPI JUMPDEST POP PUSH1 0x20 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x1E23 JUMPI PUSH1 0x0 SWAP3 PUSH2 0x1E18 JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0x3 DUP3 ADD SSTORE JUMPDEST PUSH1 0x80 PUSH1 0xC0 MLOAD ADD MLOAD DUP1 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x18E3 JUMPI DUP2 SWAP1 PUSH2 0x13F5 PUSH1 0x4 DUP6 ADD SLOAD PUSH2 0x3516 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x1DC5 JUMPI JUMPDEST POP PUSH1 0x20 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x1D54 JUMPI PUSH1 0x0 SWAP3 PUSH2 0x1D49 JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0x4 DUP3 ADD SSTORE JUMPDEST PUSH1 0xC0 DUP1 MLOAD PUSH1 0xA0 DUP2 ADD MLOAD SWAP2 ADD MLOAD PUSH1 0x80 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB SWAP2 SWAP1 SWAP2 AND OR PUSH1 0x5 DUP3 ADD SSTORE PUSH1 0x6 DUP2 ADD SWAP1 PUSH1 0xE0 PUSH1 0xC0 MLOAD ADD MLOAD SWAP2 DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x18E3 JUMPI PUSH2 0x147F DUP3 SLOAD PUSH2 0x3516 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x1D01 JUMPI JUMPDEST POP PUSH1 0x20 PUSH1 0x1F DUP3 GT PUSH1 0x1 EQ PUSH2 0x1C9C JUMPI DUP2 SWAP3 SWAP4 SWAP5 PUSH1 0x0 SWAP3 PUSH2 0x1C91 JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR SWAP1 SSTORE JUMPDEST PUSH1 0x7 DUP2 ADD SWAP1 PUSH2 0x100 PUSH1 0xC0 MLOAD ADD MLOAD SWAP2 DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x18E3 JUMPI PUSH2 0x14DF DUP3 SLOAD PUSH2 0x3516 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x1C49 JUMPI JUMPDEST POP PUSH1 0x20 PUSH1 0x1F DUP3 GT PUSH1 0x1 EQ PUSH2 0x1BE4 JUMPI DUP2 SWAP3 SWAP4 SWAP5 PUSH1 0x0 SWAP3 PUSH2 0x1BD9 JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR SWAP1 SSTORE JUMPDEST PUSH1 0x8 DUP2 ADD SWAP1 PUSH2 0x120 PUSH1 0xC0 MLOAD ADD MLOAD SWAP2 DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x18E3 JUMPI PUSH2 0x153F DUP3 SLOAD PUSH2 0x3516 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x1B91 JUMPI JUMPDEST POP PUSH1 0x20 PUSH1 0x1F DUP3 GT PUSH1 0x1 EQ PUSH2 0x1B2C JUMPI DUP2 SWAP3 SWAP4 SWAP5 PUSH1 0x0 SWAP3 PUSH2 0x1B21 JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR SWAP1 SSTORE JUMPDEST PUSH1 0x9 DUP2 ADD SWAP1 PUSH2 0x140 PUSH1 0xC0 MLOAD ADD MLOAD SWAP2 DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x18E3 JUMPI PUSH2 0x159F DUP3 SLOAD PUSH2 0x3516 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x1AD9 JUMPI JUMPDEST POP PUSH1 0x20 PUSH1 0x1F DUP3 GT PUSH1 0x1 EQ PUSH2 0x1A74 JUMPI DUP2 SWAP3 SWAP4 SWAP5 PUSH1 0x0 SWAP3 PUSH2 0x1A69 JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR SWAP1 SSTORE JUMPDEST PUSH1 0xA DUP2 ADD SWAP1 PUSH2 0x160 PUSH1 0xC0 MLOAD ADD MLOAD SWAP2 DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x18E3 JUMPI PUSH2 0x15FF DUP3 SLOAD PUSH2 0x3516 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x1A21 JUMPI JUMPDEST POP PUSH1 0x20 PUSH1 0x1F DUP3 GT PUSH1 0x1 EQ PUSH2 0x19BC JUMPI DUP2 SWAP3 SWAP4 SWAP5 PUSH1 0x0 SWAP3 PUSH2 0x19B1 JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR SWAP1 SSTORE JUMPDEST PUSH1 0xB DUP2 ADD SWAP1 PUSH2 0x180 PUSH1 0xC0 MLOAD ADD MLOAD SWAP2 DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x18E3 JUMPI PUSH2 0x165F DUP3 SLOAD PUSH2 0x3516 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x1969 JUMPI JUMPDEST POP PUSH1 0x20 PUSH1 0x1F DUP3 GT PUSH1 0x1 EQ PUSH2 0x1904 JUMPI DUP2 SWAP3 SWAP4 SWAP5 PUSH1 0x0 SWAP3 PUSH2 0x18F9 JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR SWAP1 SSTORE JUMPDEST PUSH1 0xC DUP2 ADD SWAP1 PUSH2 0x1A0 PUSH1 0xC0 MLOAD ADD MLOAD SWAP2 DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x18E3 JUMPI PUSH2 0x16BF DUP3 SLOAD PUSH2 0x3516 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x189B JUMPI JUMPDEST POP PUSH1 0x20 PUSH1 0x1F DUP3 GT PUSH1 0x1 EQ PUSH2 0x1836 JUMPI DUP2 SWAP3 SWAP4 SWAP5 PUSH1 0x0 SWAP3 PUSH2 0x182B JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR SWAP1 SSTORE JUMPDEST PUSH1 0xC0 MLOAD PUSH2 0x1C0 DUP2 ADD MLOAD PUSH2 0x1E0 SWAP1 SWAP2 ADD MLOAD PUSH1 0x80 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB SWAP2 SWAP1 SWAP2 AND OR PUSH1 0xD DUP3 ADD SSTORE PUSH1 0xE DUP2 ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP1 PUSH2 0x200 PUSH1 0xC0 MLOAD ADD MLOAD AND AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB NOT DUP4 SLOAD AND OR DUP3 SSTORE PUSH2 0x220 PUSH1 0xC0 MLOAD ADD MLOAD SWAP2 PUSH1 0x3 DUP4 LT ISZERO PUSH2 0x75A JUMPI DUP1 SLOAD PUSH1 0xC0 MLOAD PUSH2 0x240 DUP2 ADD MLOAD PUSH2 0x260 DUP3 ADD MLOAD PUSH3 0xFFFFFF PUSH1 0x80 SHL NOT SWAP1 SWAP4 AND PUSH1 0x80 SWAP7 SWAP1 SWAP7 SHL PUSH1 0xFF PUSH1 0x80 SHL AND SWAP6 SWAP1 SWAP6 OR SWAP5 ISZERO ISZERO PUSH1 0x88 SHL PUSH1 0xFF PUSH1 0x88 SHL AND SWAP5 SWAP1 SWAP5 OR SWAP1 ISZERO ISZERO PUSH1 0x90 SHL PUSH1 0xFF PUSH1 0x90 SHL AND OR SWAP1 SSTORE PUSH2 0x280 SWAP1 SWAP2 ADD MLOAD PUSH1 0xF SWAP2 SWAP1 SWAP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x1 DUP1 SLOAD PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH2 0x100 MLOAD DUP2 KECCAK256 TIMESTAMP SWAP1 SSTORE SWAP1 SLOAD PUSH2 0x181D SWAP1 CALLER DUP2 PUSH32 0xF6BE169E9242DB299E4065F846C02E09B60F1421201248FE94D6F552E8C8BD44 DUP6 DUP1 LOG3 PUSH2 0x3792 JUMP JUMPDEST PUSH1 0x1 SSTORE DUP1 SLOAD PUSH1 0xFF NOT AND DUP2 SSTORE DUP1 RETURN JUMPDEST ADD MLOAD SWAP1 POP DUP5 DUP1 PUSH2 0x16E2 JUMP JUMPDEST PUSH1 0x1F NOT DUP3 AND SWAP1 DUP4 PUSH1 0x0 MSTORE DUP1 PUSH1 0x0 KECCAK256 SWAP2 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x1883 JUMPI POP SWAP6 DUP4 PUSH1 0x1 SWAP6 SWAP7 SWAP8 LT PUSH2 0x186A JUMPI JUMPDEST POP POP POP DUP2 SHL ADD SWAP1 SSTORE PUSH2 0x16F7 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP5 DUP1 DUP1 PUSH2 0x185D JUMP JUMPDEST SWAP2 SWAP3 PUSH1 0x20 PUSH1 0x1 DUP2 SWAP3 DUP7 DUP12 ADD MLOAD DUP2 SSTORE ADD SWAP5 ADD SWAP3 ADD PUSH2 0x1848 JUMP JUMPDEST DUP3 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP4 ADD PUSH1 0x5 SHR DUP2 ADD SWAP2 PUSH1 0x20 DUP5 LT PUSH2 0x18D9 JUMPI JUMPDEST PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP1 JUMPDEST DUP2 DUP2 LT PUSH2 0x18CD JUMPI POP PUSH2 0x16C8 JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x18C0 JUMP JUMPDEST SWAP1 SWAP2 POP DUP2 SWAP1 PUSH2 0x18B7 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADD MLOAD SWAP1 POP DUP5 DUP1 PUSH2 0x1682 JUMP JUMPDEST PUSH1 0x1F NOT DUP3 AND SWAP1 DUP4 PUSH1 0x0 MSTORE DUP1 PUSH1 0x0 KECCAK256 SWAP2 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x1951 JUMPI POP SWAP6 DUP4 PUSH1 0x1 SWAP6 SWAP7 SWAP8 LT PUSH2 0x1938 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD SWAP1 SSTORE PUSH2 0x1697 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP5 DUP1 DUP1 PUSH2 0x192B JUMP JUMPDEST SWAP2 SWAP3 PUSH1 0x20 PUSH1 0x1 DUP2 SWAP3 DUP7 DUP12 ADD MLOAD DUP2 SSTORE ADD SWAP5 ADD SWAP3 ADD PUSH2 0x1916 JUMP JUMPDEST DUP3 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP4 ADD PUSH1 0x5 SHR DUP2 ADD SWAP2 PUSH1 0x20 DUP5 LT PUSH2 0x19A7 JUMPI JUMPDEST PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP1 JUMPDEST DUP2 DUP2 LT PUSH2 0x199B JUMPI POP PUSH2 0x1668 JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x198E JUMP JUMPDEST SWAP1 SWAP2 POP DUP2 SWAP1 PUSH2 0x1985 JUMP JUMPDEST ADD MLOAD SWAP1 POP DUP5 DUP1 PUSH2 0x1622 JUMP JUMPDEST PUSH1 0x1F NOT DUP3 AND SWAP1 DUP4 PUSH1 0x0 MSTORE DUP1 PUSH1 0x0 KECCAK256 SWAP2 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x1A09 JUMPI POP SWAP6 DUP4 PUSH1 0x1 SWAP6 SWAP7 SWAP8 LT PUSH2 0x19F0 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD SWAP1 SSTORE PUSH2 0x1637 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP5 DUP1 DUP1 PUSH2 0x19E3 JUMP JUMPDEST SWAP2 SWAP3 PUSH1 0x20 PUSH1 0x1 DUP2 SWAP3 DUP7 DUP12 ADD MLOAD DUP2 SSTORE ADD SWAP5 ADD SWAP3 ADD PUSH2 0x19CE JUMP JUMPDEST DUP3 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP4 ADD PUSH1 0x5 SHR DUP2 ADD SWAP2 PUSH1 0x20 DUP5 LT PUSH2 0x1A5F JUMPI JUMPDEST PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP1 JUMPDEST DUP2 DUP2 LT PUSH2 0x1A53 JUMPI POP PUSH2 0x1608 JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x1A46 JUMP JUMPDEST SWAP1 SWAP2 POP DUP2 SWAP1 PUSH2 0x1A3D JUMP JUMPDEST ADD MLOAD SWAP1 POP DUP5 DUP1 PUSH2 0x15C2 JUMP JUMPDEST PUSH1 0x1F NOT DUP3 AND SWAP1 DUP4 PUSH1 0x0 MSTORE DUP1 PUSH1 0x0 KECCAK256 SWAP2 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x1AC1 JUMPI POP SWAP6 DUP4 PUSH1 0x1 SWAP6 SWAP7 SWAP8 LT PUSH2 0x1AA8 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD SWAP1 SSTORE PUSH2 0x15D7 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP5 DUP1 DUP1 PUSH2 0x1A9B JUMP JUMPDEST SWAP2 SWAP3 PUSH1 0x20 PUSH1 0x1 DUP2 SWAP3 DUP7 DUP12 ADD MLOAD DUP2 SSTORE ADD SWAP5 ADD SWAP3 ADD PUSH2 0x1A86 JUMP JUMPDEST DUP3 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP4 ADD PUSH1 0x5 SHR DUP2 ADD SWAP2 PUSH1 0x20 DUP5 LT PUSH2 0x1B17 JUMPI JUMPDEST PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP1 JUMPDEST DUP2 DUP2 LT PUSH2 0x1B0B JUMPI POP PUSH2 0x15A8 JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x1AFE JUMP JUMPDEST SWAP1 SWAP2 POP DUP2 SWAP1 PUSH2 0x1AF5 JUMP JUMPDEST ADD MLOAD SWAP1 POP DUP5 DUP1 PUSH2 0x1562 JUMP JUMPDEST PUSH1 0x1F NOT DUP3 AND SWAP1 DUP4 PUSH1 0x0 MSTORE DUP1 PUSH1 0x0 KECCAK256 SWAP2 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x1B79 JUMPI POP SWAP6 DUP4 PUSH1 0x1 SWAP6 SWAP7 SWAP8 LT PUSH2 0x1B60 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD SWAP1 SSTORE PUSH2 0x1577 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP5 DUP1 DUP1 PUSH2 0x1B53 JUMP JUMPDEST SWAP2 SWAP3 PUSH1 0x20 PUSH1 0x1 DUP2 SWAP3 DUP7 DUP12 ADD MLOAD DUP2 SSTORE ADD SWAP5 ADD SWAP3 ADD PUSH2 0x1B3E JUMP JUMPDEST DUP3 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP4 ADD PUSH1 0x5 SHR DUP2 ADD SWAP2 PUSH1 0x20 DUP5 LT PUSH2 0x1BCF JUMPI JUMPDEST PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP1 JUMPDEST DUP2 DUP2 LT PUSH2 0x1BC3 JUMPI POP PUSH2 0x1548 JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x1BB6 JUMP JUMPDEST SWAP1 SWAP2 POP DUP2 SWAP1 PUSH2 0x1BAD JUMP JUMPDEST ADD MLOAD SWAP1 POP DUP5 DUP1 PUSH2 0x1502 JUMP JUMPDEST PUSH1 0x1F NOT DUP3 AND SWAP1 DUP4 PUSH1 0x0 MSTORE DUP1 PUSH1 0x0 KECCAK256 SWAP2 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x1C31 JUMPI POP SWAP6 DUP4 PUSH1 0x1 SWAP6 SWAP7 SWAP8 LT PUSH2 0x1C18 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD SWAP1 SSTORE PUSH2 0x1517 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP5 DUP1 DUP1 PUSH2 0x1C0B JUMP JUMPDEST SWAP2 SWAP3 PUSH1 0x20 PUSH1 0x1 DUP2 SWAP3 DUP7 DUP12 ADD MLOAD DUP2 SSTORE ADD SWAP5 ADD SWAP3 ADD PUSH2 0x1BF6 JUMP JUMPDEST DUP3 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP4 ADD PUSH1 0x5 SHR DUP2 ADD SWAP2 PUSH1 0x20 DUP5 LT PUSH2 0x1C87 JUMPI JUMPDEST PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP1 JUMPDEST DUP2 DUP2 LT PUSH2 0x1C7B JUMPI POP PUSH2 0x14E8 JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x1C6E JUMP JUMPDEST SWAP1 SWAP2 POP DUP2 SWAP1 PUSH2 0x1C65 JUMP JUMPDEST ADD MLOAD SWAP1 POP DUP5 DUP1 PUSH2 0x14A2 JUMP JUMPDEST PUSH1 0x1F NOT DUP3 AND SWAP1 DUP4 PUSH1 0x0 MSTORE DUP1 PUSH1 0x0 KECCAK256 SWAP2 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x1CE9 JUMPI POP SWAP6 DUP4 PUSH1 0x1 SWAP6 SWAP7 SWAP8 LT PUSH2 0x1CD0 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD SWAP1 SSTORE PUSH2 0x14B7 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP5 DUP1 DUP1 PUSH2 0x1CC3 JUMP JUMPDEST SWAP2 SWAP3 PUSH1 0x20 PUSH1 0x1 DUP2 SWAP3 DUP7 DUP12 ADD MLOAD DUP2 SSTORE ADD SWAP5 ADD SWAP3 ADD PUSH2 0x1CAE JUMP JUMPDEST DUP3 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP4 ADD PUSH1 0x5 SHR DUP2 ADD SWAP2 PUSH1 0x20 DUP5 LT PUSH2 0x1D3F JUMPI JUMPDEST PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP1 JUMPDEST DUP2 DUP2 LT PUSH2 0x1D33 JUMPI POP PUSH2 0x1488 JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x1D26 JUMP JUMPDEST SWAP1 SWAP2 POP DUP2 SWAP1 PUSH2 0x1D1D JUMP JUMPDEST ADD MLOAD SWAP1 POP DUP4 DUP1 PUSH2 0x1415 JUMP JUMPDEST SWAP3 POP PUSH1 0x4 DUP5 ADD PUSH1 0x0 MSTORE DUP1 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x0 SWAP4 JUMPDEST PUSH1 0x1F NOT DUP5 AND DUP6 LT PUSH2 0x1DAA JUMPI PUSH1 0x1 SWAP5 POP DUP4 PUSH1 0x1F NOT DUP2 AND LT PUSH2 0x1D91 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0x4 DUP3 ADD SSTORE PUSH2 0x142D JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP4 DUP1 DUP1 PUSH2 0x1D81 JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 SSTORE PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP4 ADD SWAP3 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x1D66 JUMP JUMPDEST SWAP1 SWAP2 POP PUSH1 0x4 DUP5 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP6 LT PUSH2 0x1E11 JUMPI JUMPDEST SWAP1 DUP5 SWAP4 SWAP3 SWAP2 JUMPDEST PUSH1 0x1F DUP4 ADD PUSH1 0x5 SHR DUP3 ADD DUP2 LT PUSH2 0x1E02 JUMPI POP POP PUSH2 0x13FE JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE DUP6 SWAP5 POP PUSH1 0x1 ADD PUSH2 0x1DEC JUMP JUMPDEST POP DUP1 PUSH2 0x1DE6 JUMP JUMPDEST ADD MLOAD SWAP1 POP DUP4 DUP1 PUSH2 0x13B6 JUMP JUMPDEST SWAP3 POP PUSH1 0x3 DUP5 ADD PUSH1 0x0 MSTORE DUP1 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x0 SWAP4 JUMPDEST PUSH1 0x1F NOT DUP5 AND DUP6 LT PUSH2 0x1E79 JUMPI PUSH1 0x1 SWAP5 POP DUP4 PUSH1 0x1F NOT DUP2 AND LT PUSH2 0x1E60 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0x3 DUP3 ADD SSTORE PUSH2 0x13CE JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP4 DUP1 DUP1 PUSH2 0x1E50 JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 SSTORE PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP4 ADD SWAP3 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x1E35 JUMP JUMPDEST SWAP1 SWAP2 POP PUSH1 0x3 DUP5 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP6 LT PUSH2 0x1EE0 JUMPI JUMPDEST SWAP1 DUP5 SWAP4 SWAP3 SWAP2 JUMPDEST PUSH1 0x1F DUP4 ADD PUSH1 0x5 SHR DUP3 ADD DUP2 LT PUSH2 0x1ED1 JUMPI POP POP PUSH2 0x139F JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE DUP6 SWAP5 POP PUSH1 0x1 ADD PUSH2 0x1EBB JUMP JUMPDEST POP DUP1 PUSH2 0x1EB5 JUMP JUMPDEST ADD MLOAD SWAP1 POP DUP4 DUP1 PUSH2 0x1357 JUMP JUMPDEST SWAP3 POP PUSH1 0x2 DUP5 ADD PUSH1 0x0 MSTORE DUP1 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x0 SWAP4 JUMPDEST PUSH1 0x1F NOT DUP5 AND DUP6 LT PUSH2 0x1F48 JUMPI PUSH1 0x1 SWAP5 POP DUP4 PUSH1 0x1F NOT DUP2 AND LT PUSH2 0x1F2F JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0x2 DUP3 ADD SSTORE PUSH2 0x136F JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP4 DUP1 DUP1 PUSH2 0x1F1F JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 SSTORE PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP4 ADD SWAP3 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x1F04 JUMP JUMPDEST SWAP1 SWAP2 POP PUSH1 0x2 DUP5 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP6 LT PUSH2 0x1FAF JUMPI JUMPDEST SWAP1 DUP5 SWAP4 SWAP3 SWAP2 JUMPDEST PUSH1 0x1F DUP4 ADD PUSH1 0x5 SHR DUP3 ADD DUP2 LT PUSH2 0x1FA0 JUMPI POP POP PUSH2 0x1340 JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE DUP6 SWAP5 POP PUSH1 0x1 ADD PUSH2 0x1F8A JUMP JUMPDEST POP DUP1 PUSH2 0x1F84 JUMP JUMPDEST PUSH2 0x100 MLOAD MLOAD PUSH1 0xA0 DUP2 DUP2 MSTORE PUSH4 0x23B872DD PUSH1 0xE0 SHL SWAP1 SWAP2 MSTORE DUP1 MLOAD PUSH2 0x180 MLOAD CALLER PUSH1 0x4 DUP4 ADD MSTORE ADDRESS PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD PUSH1 0x20 SWAP2 SWAP1 PUSH1 0x64 SWAP1 PUSH1 0x0 PUSH20 0x765DE816845861E75A25FCA122BB6898B8B1282A GAS CALL PUSH1 0x80 MSTORE PUSH1 0x80 MLOAD ISZERO PUSH2 0x2089 JUMPI PUSH1 0x0 PUSH1 0x80 MLOAD PUSH2 0x2050 JUMPI JUMPDEST PUSH2 0x202B SWAP1 PUSH2 0x370E JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB PUSH2 0x180 MLOAD AND PUSH2 0x100 MLOAD PUSH1 0x0 KECCAK256 SSTORE PUSH2 0x1119 JUMP JUMPDEST POP PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x2082 JUMPI JUMPDEST PUSH2 0x207B DUP2 PUSH2 0x206F PUSH2 0x202B SWAP4 PUSH1 0xA0 MLOAD PUSH2 0x356C JUMP JUMPDEST PUSH1 0xA0 MLOAD ADD PUSH1 0xA0 MLOAD PUSH2 0x3669 JUMP JUMPDEST SWAP1 POP PUSH2 0x2022 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x205C JUMP JUMPDEST PUSH2 0x100 MLOAD MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH2 0x100 MLOAD MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE PUSH2 0x140 MLOAD CALLER PUSH1 0x4 DUP4 ADD MSTORE ADDRESS PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x20 DUP2 PUSH1 0x64 DUP2 PUSH1 0x0 PUSH20 0x62B8B11039FCFE5AB0C56E502B1C372A3D2A9C7A GAS CALL DUP1 ISZERO PUSH2 0x2089 JUMPI PUSH2 0x20FB SWAP2 PUSH1 0x0 SWAP2 PUSH2 0x2120 JUMPI JUMPDEST POP PUSH2 0x3751 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB PUSH2 0x140 MLOAD AND PUSH2 0x100 MLOAD PUSH1 0x0 KECCAK256 SSTORE PUSH2 0x1107 JUMP JUMPDEST PUSH2 0x2139 SWAP2 POP PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x635 JUMPI PUSH2 0x627 DUP2 DUP4 PUSH2 0x356C JUMP JUMPDEST DUP3 PUSH2 0x20F5 JUMP JUMPDEST PUSH2 0x100 MLOAD MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH13 0x125B9D985B1A5908195B585A5B PUSH1 0x9A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH2 0x100 MLOAD MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xB PUSH1 0x24 DUP3 ADD MSTORE PUSH11 0x496E76616C696420616765 PUSH1 0xA8 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP PUSH1 0xF0 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB PUSH2 0x1C0 MLOAD AND GT ISZERO PUSH2 0x10D2 JUMP JUMPDEST PUSH2 0x100 MLOAD MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH12 0x496E76616C69642073697A65 PUSH1 0xA0 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP PUSH1 0xC8 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB PUSH2 0x1A0 MLOAD AND GT ISZERO PUSH2 0x10B6 JUMP JUMPDEST PUSH1 0x14 SWAP2 POP GT ISZERO DUP12 PUSH2 0xE44 JUMP JUMPDEST PUSH1 0x64 SWAP2 POP GT ISZERO DUP12 PUSH2 0xE44 JUMP JUMPDEST PUSH1 0xC8 SWAP2 POP GT ISZERO DUP12 PUSH2 0xE44 JUMP JUMPDEST PUSH2 0x1F4 SWAP2 POP GT ISZERO DUP12 PUSH2 0xE44 JUMP JUMPDEST PUSH1 0xA SWAP2 POP GT ISZERO DUP7 PUSH2 0xD43 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x109BDD5B9D1E481C995C5D5A5C9959 PUSH1 0x8A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB PUSH2 0x140 MLOAD AND ISZERO ISZERO PUSH2 0xC89 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB PUSH2 0x180 MLOAD AND ISZERO ISZERO PUSH2 0xC82 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x472420626F756E747920746F6F206C61726765 PUSH1 0x68 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x6355534420626F756E747920746F6F206C61726765 PUSH1 0x58 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x43454C4F20626F756E747920746F6F206C61726765 PUSH1 0x58 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x14A JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x14A JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x2383 PUSH1 0x1 SLOAD DUP3 LT PUSH2 0x3681 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SLOAD PUSH2 0x2395 PUSH1 0xFF DUP3 AND ISZERO PUSH2 0x36C2 JUMP JUMPDEST PUSH1 0xFF NOT AND OR PUSH1 0x0 SSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0xE DUP2 ADD SWAP1 PUSH1 0xFF DUP3 SLOAD PUSH1 0x80 SHR AND PUSH1 0x3 DUP2 LT ISZERO PUSH2 0x75A JUMPI PUSH2 0x23CB SWAP1 ISZERO PUSH2 0x394B JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x2488 JUMPI PUSH1 0xF ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER OR SWAP1 SSTORE DUP1 SLOAD PUSH1 0xFF PUSH1 0x90 SHL NOT AND PUSH1 0x1 PUSH1 0x90 SHL OR DUP1 DUP3 SSTORE PUSH1 0x88 SHR PUSH1 0xFF AND PUSH2 0x244A JUMPI JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 PUSH1 0x0 DUP3 MSTORE PUSH32 0xC7DB73A2D1DC7FD351B6549EFAD129BBF568E618DBBE683ABFA0D1550A96E5AE PUSH1 0x20 CALLER SWAP4 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE STOP JUMPDEST DUP1 SLOAD PUSH1 0xFF PUSH1 0x80 SHL NOT AND PUSH1 0x1 PUSH1 0x80 SHL OR SWAP1 SSTORE CALLER DUP2 PUSH32 0x2C54217AED12A18C71E20E5A6A3F13F8CFDDBB2C3A0A5F409861478C7FD39E81 PUSH1 0x0 DUP1 LOG3 DUP2 PUSH2 0x240F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x27BBB732B91031B0B73737BA103132903334B73232B9 PUSH1 0x51 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x14A JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x14A JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x24 CALLDATALOAD DUP2 ADD PUSH1 0x0 DUP2 DUP4 GT PUSH2 0x25D3 JUMPI DUP2 SWAP1 PUSH1 0x1 SLOAD DUP1 SWAP4 GT PUSH2 0x25CB JUMPI JUMPDEST DUP4 JUMPDEST DUP3 DUP2 LT PUSH2 0x2588 JUMPI POP PUSH2 0x2508 SWAP1 PUSH2 0x37B8 JUMP JUMPDEST SWAP2 PUSH1 0x0 SWAP4 JUMPDEST DUP3 DUP2 LT PUSH2 0x2539 JUMPI POP PUSH2 0x252E SWAP4 POP PUSH1 0x40 MLOAD SWAP4 DUP5 SWAP4 PUSH1 0x40 DUP6 MSTORE PUSH1 0x40 DUP6 ADD SWAP1 PUSH2 0x325A JUMP JUMPDEST SWAP2 LT PUSH1 0x20 DUP4 ADD MSTORE SUB SWAP1 RETURN JUMPDEST DUP1 PUSH1 0x0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0xE PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD PUSH1 0x80 SHR AND PUSH1 0x3 DUP2 LT ISZERO PUSH2 0x75A JUMPI ISZERO PUSH2 0x2568 JUMPI JUMPDEST PUSH1 0x1 ADD PUSH2 0x250D JUMP JUMPDEST SWAP4 PUSH2 0x2580 DUP2 DUP7 PUSH2 0x257A PUSH1 0x1 SWAP5 DUP9 PUSH2 0x38D9 JUMP JUMPDEST MSTORE PUSH2 0x3792 JUMP JUMPDEST SWAP5 SWAP1 POP PUSH2 0x2560 JUMP JUMPDEST DUP1 PUSH1 0x0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0xE PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD PUSH1 0x80 SHR AND PUSH1 0x3 DUP2 LT ISZERO PUSH2 0x75A JUMPI ISZERO PUSH2 0x25B7 JUMPI JUMPDEST PUSH1 0x1 ADD PUSH2 0x24F7 JUMP JUMPDEST SWAP1 PUSH2 0x25C3 PUSH1 0x1 SWAP2 PUSH2 0x3792 JUMP JUMPDEST SWAP2 SWAP1 POP PUSH2 0x25AF JUMP JUMPDEST DUP3 SWAP2 POP PUSH2 0x24F5 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST CALLVALUE PUSH2 0x14A JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x14A JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH10 0x21E19E0C9BAB2400000 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x14A JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x14A JUMPI PUSH1 0x0 DUP1 PUSH1 0x1 SLOAD SWAP1 JUMPDEST DUP2 DUP2 LT PUSH2 0x2639 JUMPI PUSH1 0x20 DUP4 PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST DUP1 PUSH1 0x0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0xE PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD PUSH1 0x80 SHR AND PUSH1 0x3 DUP2 LT ISZERO PUSH2 0x75A JUMPI ISZERO PUSH2 0x2668 JUMPI JUMPDEST PUSH1 0x1 ADD PUSH2 0x2627 JUMP JUMPDEST SWAP2 PUSH2 0x2674 PUSH1 0x1 SWAP2 PUSH2 0x3792 JUMP JUMPDEST SWAP3 SWAP1 POP PUSH2 0x2660 JUMP JUMPDEST CALLVALUE PUSH2 0x14A JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x14A JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 DUP2 DUP2 SUB PUSH2 0x14A JUMPI PUSH1 0x0 SLOAD SWAP1 PUSH2 0x26BE CALLER PUSH1 0x8 DUP5 SWAP1 SHR PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x3631 JUMP JUMPDEST DUP3 ISZERO PUSH2 0x270D JUMPI PUSH2 0x100 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT SWAP1 SWAP2 AND PUSH1 0x8 SWAP2 SWAP1 SWAP2 SHL PUSH2 0x100 PUSH1 0x1 PUSH1 0xA8 SHL SUB AND OR PUSH1 0x0 SWAP1 DUP2 SSTORE PUSH32 0x7CE7EC0B50378FB6C0186FFB5F48325F6593FCB4CA4386F21861AF3129188F5C SWAP1 DUP1 LOG2 STOP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x496E76616C69642061646472657373 PUSH1 0x88 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x14A JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x14A JUMPI PUSH1 0x4 CALLDATALOAD DUP1 PUSH1 0x0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH2 0x277C PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x1 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD AND CALLER EQ PUSH2 0x390F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SLOAD PUSH2 0x278E PUSH1 0xFF DUP3 AND ISZERO PUSH2 0x36C2 JUMP JUMPDEST PUSH1 0xFF NOT AND OR PUSH1 0x0 SSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0xE DUP2 ADD DUP1 SLOAD SWAP2 PUSH1 0xFF DUP4 PUSH1 0x80 SHR AND SWAP1 PUSH1 0x3 DUP3 LT ISZERO PUSH2 0x75A JUMPI PUSH2 0x27C8 PUSH1 0xF SWAP3 ISZERO PUSH2 0x394B JUMP JUMPDEST ADD DUP1 SLOAD SWAP1 SWAP3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO PUSH2 0x287A JUMPI PUSH1 0xFF PUSH1 0x88 SHL NOT AND PUSH1 0x1 PUSH1 0x88 SHL OR DUP1 DUP3 SSTORE PUSH1 0x90 SHR PUSH1 0xFF AND PUSH2 0x2832 JUMPI JUMPDEST DUP3 PUSH1 0x40 MLOAD SWAP1 PUSH1 0x1 DUP3 MSTORE PUSH32 0xC7DB73A2D1DC7FD351B6549EFAD129BBF568E618DBBE683ABFA0D1550A96E5AE PUSH1 0x20 CALLER SWAP4 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE STOP JUMPDEST DUP1 SLOAD PUSH1 0xFF PUSH1 0x80 SHL NOT AND PUSH1 0x1 PUSH1 0x80 SHL OR SWAP1 SSTORE SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH32 0x2C54217AED12A18C71E20E5A6A3F13F8CFDDBB2C3A0A5F409861478C7FD39E81 PUSH1 0x0 DUP1 LOG3 DUP2 DUP1 PUSH2 0x27F7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x139BC8199A5B99195C88185CDCDA59DB9959 PUSH1 0x72 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x14A JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x14A JUMPI PUSH1 0x1 SLOAD PUSH2 0x28D1 DUP2 PUSH2 0x37EA JUMP JUMPDEST SWAP1 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x28F6 JUMPI PUSH1 0x40 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 SWAP1 PUSH2 0x28F2 SWAP1 DUP3 ADD DUP7 PUSH2 0x32E3 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST DUP1 PUSH1 0x1 SWAP2 PUSH1 0x0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD SWAP1 PUSH2 0x2914 DUP3 PUSH2 0x3550 JUMP JUMPDEST DUP1 SLOAD DUP3 MSTORE DUP4 DUP1 PUSH1 0xA0 SHL SUB DUP5 DUP3 ADD SLOAD AND PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x2934 PUSH1 0x2 DUP3 ADD PUSH2 0x358D JUMP JUMPDEST PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x2945 PUSH1 0x3 DUP3 ADD PUSH2 0x358D JUMP JUMPDEST PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x2956 PUSH1 0x4 DUP3 ADD PUSH2 0x358D JUMP JUMPDEST PUSH1 0x80 DUP4 ADD MSTORE PUSH1 0x5 DUP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP2 AND PUSH1 0xA0 DUP5 ADD MSTORE PUSH1 0x80 SHR PUSH1 0xC0 DUP4 ADD MSTORE PUSH2 0x2983 PUSH1 0x6 DUP3 ADD PUSH2 0x358D JUMP JUMPDEST PUSH1 0xE0 DUP4 ADD MSTORE PUSH2 0x2994 PUSH1 0x7 DUP3 ADD PUSH2 0x358D JUMP JUMPDEST PUSH2 0x100 DUP4 ADD MSTORE PUSH2 0x29A6 PUSH1 0x8 DUP3 ADD PUSH2 0x358D JUMP JUMPDEST PUSH2 0x120 DUP4 ADD MSTORE PUSH2 0x29B8 PUSH1 0x9 DUP3 ADD PUSH2 0x358D JUMP JUMPDEST PUSH2 0x140 DUP4 ADD MSTORE PUSH2 0x29CA PUSH1 0xA DUP3 ADD PUSH2 0x358D JUMP JUMPDEST PUSH2 0x160 DUP4 ADD MSTORE PUSH2 0x29DC PUSH1 0xB DUP3 ADD PUSH2 0x358D JUMP JUMPDEST PUSH2 0x180 DUP4 ADD MSTORE PUSH2 0x29EE PUSH1 0xC DUP3 ADD PUSH2 0x358D JUMP JUMPDEST PUSH2 0x1A0 DUP4 ADD MSTORE PUSH1 0xD DUP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP2 AND PUSH2 0x1C0 DUP5 ADD MSTORE PUSH1 0x80 SHR PUSH2 0x1E0 DUP4 ADD MSTORE PUSH1 0xFF PUSH1 0xE DUP3 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP2 AND PUSH2 0x200 DUP6 ADD MSTORE PUSH2 0x2A3C DUP3 DUP3 PUSH1 0x80 SHR AND PUSH2 0x220 DUP7 ADD PUSH2 0x3903 JUMP JUMPDEST DUP2 DUP2 PUSH1 0x88 SHR AND ISZERO ISZERO PUSH2 0x240 DUP6 ADD MSTORE PUSH1 0x90 SHR AND ISZERO ISZERO PUSH2 0x260 DUP4 ADD MSTORE PUSH1 0xF DUP5 DUP1 PUSH1 0xA0 SHL SUB SWAP2 ADD SLOAD AND PUSH2 0x280 DUP3 ADD MSTORE PUSH2 0x2A72 DUP3 DUP7 PUSH2 0x38D9 JUMP JUMPDEST MSTORE PUSH2 0x2A7D DUP2 DUP6 PUSH2 0x38D9 JUMP JUMPDEST POP ADD PUSH2 0x28D5 JUMP JUMPDEST CALLVALUE PUSH2 0x14A JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x14A JUMPI PUSH1 0x1 SLOAD PUSH1 0x0 DUP1 JUMPDEST DUP3 DUP2 LT PUSH2 0x2CC0 JUMPI POP PUSH2 0x2AB6 PUSH2 0x2AB0 DUP3 PUSH2 0x37B8 JUMP JUMPDEST SWAP2 PUSH2 0x37EA JUMP JUMPDEST PUSH1 0x0 SWAP3 DUP4 JUMPDEST DUP2 DUP2 LT PUSH2 0x2AEC JUMPI PUSH2 0x2ADE DUP5 PUSH2 0x28F2 DUP6 PUSH1 0x40 MLOAD SWAP4 DUP5 SWAP4 PUSH1 0x40 DUP6 MSTORE PUSH1 0x40 DUP6 ADD SWAP1 PUSH2 0x325A JUMP JUMPDEST SWAP1 DUP4 DUP3 SUB PUSH1 0x20 DUP6 ADD MSTORE PUSH2 0x32E3 JUMP JUMPDEST DUP1 PUSH1 0x0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0xE PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD PUSH1 0x80 SHR AND PUSH1 0x3 DUP2 LT ISZERO PUSH2 0x75A JUMPI ISZERO PUSH2 0x2B1B JUMPI JUMPDEST PUSH1 0x1 ADD PUSH2 0x2ABB JUMP JUMPDEST SWAP4 PUSH2 0x2CB8 DUP2 DUP7 PUSH2 0x2B2D PUSH1 0x1 SWAP5 DUP9 PUSH2 0x38D9 JUMP JUMPDEST MSTORE DUP7 PUSH1 0x0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD SWAP1 PUSH2 0x2B49 DUP3 PUSH2 0x3550 JUMP JUMPDEST DUP1 SLOAD DUP3 MSTORE DUP5 DUP1 PUSH1 0xA0 SHL SUB DUP6 DUP3 ADD SLOAD AND PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x2B69 PUSH1 0x2 DUP3 ADD PUSH2 0x358D JUMP JUMPDEST PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x2B7A PUSH1 0x3 DUP3 ADD PUSH2 0x358D JUMP JUMPDEST PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x2B8B PUSH1 0x4 DUP3 ADD PUSH2 0x358D JUMP JUMPDEST PUSH1 0x80 DUP4 ADD MSTORE PUSH1 0x5 DUP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP2 AND PUSH1 0xA0 DUP5 ADD MSTORE PUSH1 0x80 SHR PUSH1 0xC0 DUP4 ADD MSTORE PUSH2 0x2BB8 PUSH1 0x6 DUP3 ADD PUSH2 0x358D JUMP JUMPDEST PUSH1 0xE0 DUP4 ADD MSTORE PUSH2 0x2BC9 PUSH1 0x7 DUP3 ADD PUSH2 0x358D JUMP JUMPDEST PUSH2 0x100 DUP4 ADD MSTORE PUSH2 0x2BDB PUSH1 0x8 DUP3 ADD PUSH2 0x358D JUMP JUMPDEST PUSH2 0x120 DUP4 ADD MSTORE PUSH2 0x2BED PUSH1 0x9 DUP3 ADD PUSH2 0x358D JUMP JUMPDEST PUSH2 0x140 DUP4 ADD MSTORE PUSH2 0x2BFF PUSH1 0xA DUP3 ADD PUSH2 0x358D JUMP JUMPDEST PUSH2 0x160 DUP4 ADD MSTORE PUSH2 0x2C11 PUSH1 0xB DUP3 ADD PUSH2 0x358D JUMP JUMPDEST PUSH2 0x180 DUP4 ADD MSTORE PUSH2 0x2C23 PUSH1 0xC DUP3 ADD PUSH2 0x358D JUMP JUMPDEST PUSH2 0x1A0 DUP4 ADD MSTORE PUSH1 0xD DUP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP2 AND PUSH2 0x1C0 DUP5 ADD MSTORE PUSH1 0x80 SHR PUSH2 0x1E0 DUP4 ADD MSTORE PUSH1 0xFF PUSH1 0xE DUP3 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP2 AND PUSH2 0x200 DUP6 ADD MSTORE PUSH2 0x2C71 DUP3 DUP3 PUSH1 0x80 SHR AND PUSH2 0x220 DUP7 ADD PUSH2 0x3903 JUMP JUMPDEST DUP2 DUP2 PUSH1 0x88 SHR AND ISZERO ISZERO PUSH2 0x240 DUP6 ADD MSTORE PUSH1 0x90 SHR AND ISZERO ISZERO PUSH2 0x260 DUP4 ADD MSTORE PUSH1 0xF DUP6 DUP1 PUSH1 0xA0 SHL SUB SWAP2 ADD SLOAD AND PUSH2 0x280 DUP3 ADD MSTORE PUSH2 0x2CA7 DUP3 DUP8 PUSH2 0x38D9 JUMP JUMPDEST MSTORE PUSH2 0x2CB2 DUP2 DUP7 PUSH2 0x38D9 JUMP JUMPDEST POP PUSH2 0x3792 JUMP JUMPDEST SWAP5 SWAP1 POP PUSH2 0x2B13 JUMP JUMPDEST DUP1 PUSH1 0x0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0xE PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD PUSH1 0x80 SHR AND PUSH1 0x3 DUP2 LT ISZERO PUSH2 0x75A JUMPI ISZERO PUSH2 0x2CEF JUMPI JUMPDEST PUSH1 0x1 ADD PUSH2 0x2A9C JUMP JUMPDEST SWAP1 PUSH2 0x2CFB PUSH1 0x1 SWAP2 PUSH2 0x3792 JUMP JUMPDEST SWAP2 SWAP1 POP PUSH2 0x2CE7 JUMP JUMPDEST CALLVALUE PUSH2 0x14A JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x14A JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH20 0x765DE816845861E75A25FCA122BB6898B8B1282A DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x14A JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x14A JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x2D53 PUSH1 0x1 SLOAD DUP3 LT PUSH2 0x3681 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SLOAD PUSH2 0x2D65 PUSH1 0xFF DUP3 AND ISZERO PUSH2 0x36C2 JUMP JUMPDEST PUSH1 0xFF NOT AND OR PUSH1 0x0 SSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0xE DUP3 ADD SWAP2 DUP3 SLOAD SWAP1 PUSH1 0xFF DUP3 PUSH1 0x80 SHR AND PUSH1 0x3 DUP2 LT ISZERO PUSH2 0x75A JUMPI PUSH1 0x1 SUB PUSH2 0x3035 JUMPI PUSH1 0xF DUP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0x3003 JUMPI PUSH1 0xD ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP2 AND SWAP5 DUP6 ISZERO DUP1 SWAP2 DUP2 ISZERO DUP1 SWAP3 PUSH2 0x2FF7 JUMPI JUMPDEST DUP1 ISZERO PUSH2 0x2FE5 JUMPI JUMPDEST ISZERO PUSH2 0x2FB4 JUMPI PUSH1 0x0 SWAP5 DUP6 SWAP1 SSTORE DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB NOT AND SWAP1 SSTORE DUP6 DUP5 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP7 KECCAK256 DUP7 SWAP1 SSTORE PUSH1 0x4 SWAP1 SWAP2 MSTORE DUP5 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE PUSH1 0x80 SWAP2 SWAP1 SWAP2 SHR SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND SWAP2 DUP6 SWAP2 SWAP1 PUSH2 0x2F8D JUMPI JUMPDEST POP POP DUP2 PUSH2 0x2F18 JUMPI JUMPDEST DUP1 PUSH2 0x2E71 JUMPI JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP5 DUP6 MSTORE PUSH1 0x20 DUP6 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP1 DUP4 ADD MSTORE CALLER SWAP2 PUSH32 0xAF63EFACF28433915EA2D25F6E48EB87264E585BEBEF968BCD127A52608ADEC SWAP1 DUP1 PUSH1 0x60 DUP2 ADD PUSH2 0x579 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 PUSH4 0x2000575 PUSH1 0xE5 SHL DUP4 MSTORE CALLER PUSH1 0x4 DUP5 ADD MSTORE DUP2 PUSH1 0x24 DUP5 ADD MSTORE PUSH1 0x60 PUSH1 0x44 DUP5 ADD MSTORE PUSH1 0x0 PUSH1 0x64 DUP5 ADD MSTORE PUSH1 0x20 DUP4 PUSH1 0x84 DUP2 PUSH1 0x0 PUSH20 0x62B8B11039FCFE5AB0C56E502B1C372A3D2A9C7A GAS CALL SWAP3 DUP4 ISZERO PUSH2 0x63C JUMPI PUSH32 0xAF63EFACF28433915EA2D25F6E48EB87264E585BEBEF968BCD127A52608ADEC SWAP4 PUSH2 0x2EF2 SWAP2 PUSH1 0x0 SWAP2 PUSH2 0x2EF9 JUMPI POP PUSH2 0x3751 JUMP JUMPDEST SWAP2 POP PUSH2 0x2E30 JUMP JUMPDEST PUSH2 0x2F12 SWAP2 POP PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x635 JUMPI PUSH2 0x627 DUP2 DUP4 PUSH2 0x356C JUMP JUMPDEST DUP8 PUSH2 0x20F5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x20 DUP2 PUSH1 0x44 DUP2 PUSH1 0x0 PUSH20 0x765DE816845861E75A25FCA122BB6898B8B1282A GAS CALL DUP1 ISZERO PUSH2 0x63C JUMPI PUSH2 0x2F69 SWAP2 PUSH1 0x0 SWAP2 PUSH2 0x2F6E JUMPI JUMPDEST POP PUSH2 0x370E JUMP JUMPDEST PUSH2 0x2E2A JUMP JUMPDEST PUSH2 0x2F87 SWAP2 POP PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x635 JUMPI PUSH2 0x627 DUP2 DUP4 PUSH2 0x356C JUMP JUMPDEST DUP7 PUSH2 0x2F63 JUMP JUMPDEST PUSH1 0x0 SWAP1 PUSH2 0x2FAB JUMPI JUMPDEST PUSH1 0x0 DUP1 DUP1 SWAP4 DUP2 SWAP4 CALLER SWAP1 CALL ISZERO PUSH2 0x63C JUMPI DUP4 DUP6 PUSH2 0x2E22 JUMP JUMPDEST POP PUSH2 0x8FC PUSH2 0x2F95 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x9 PUSH1 0x24 DUP3 ADD MSTORE PUSH9 0x4E6F20626F756E7479 PUSH1 0xB8 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP7 AND ISZERO ISZERO PUSH2 0x2DD3 JUMP JUMPDEST POP DUP4 PUSH1 0x80 SHR ISZERO ISZERO PUSH2 0x2DCC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xA PUSH1 0x24 DUP3 ADD MSTORE PUSH10 0x2737BA103334B73232B9 PUSH1 0xB1 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x14195D081B9BDD08199BDD5B99081E595D PUSH1 0x7A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x14A JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x14A JUMPI PUSH1 0x20 PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x14A JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x14A JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH8 0x8AC7230489E80000 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x14A JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x14A JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 SUB PUSH2 0x14A JUMPI PUSH2 0x30EB PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x0 SLOAD PUSH1 0x8 SHR AND CALLER EQ PUSH2 0x3631 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x20 DUP2 PUSH1 0x24 DUP2 PUSH20 0x765DE816845861E75A25FCA122BB6898B8B1282A GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x63C JUMPI PUSH1 0x0 SWAP2 PUSH2 0x31DE JUMPI JUMPDEST POP PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x20 DUP2 DUP1 PUSH1 0x44 DUP2 ADD JUMPDEST SUB DUP2 PUSH1 0x0 PUSH20 0x765DE816845861E75A25FCA122BB6898B8B1282A GAS CALL SWAP1 DUP2 ISZERO PUSH2 0x63C JUMPI PUSH1 0x0 SWAP2 PUSH2 0x31BF JUMPI JUMPDEST POP ISZERO PUSH2 0x3188 JUMPI STOP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x151C985B9CD9995C8819985A5B1959 PUSH1 0x8A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH2 0x31D8 SWAP2 POP PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x635 JUMPI PUSH2 0x627 DUP2 DUP4 PUSH2 0x356C JUMP JUMPDEST DUP2 PUSH2 0x3180 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x320A JUMPI JUMPDEST DUP2 PUSH2 0x31F9 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x356C JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x14A JUMPI MLOAD PUSH2 0x3156 PUSH2 0x312A JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x31EC JUMP JUMPDEST CALLVALUE PUSH2 0x14A JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x14A JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x14A JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x14A JUMPI DUP1 PUSH3 0x76A700 PUSH1 0x20 SWAP3 MSTORE RETURN JUMPDEST SWAP1 PUSH1 0x20 DUP1 DUP4 MLOAD SWAP3 DUP4 DUP2 MSTORE ADD SWAP3 ADD SWAP1 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x3278 JUMPI POP POP POP SWAP1 JUMP JUMPDEST DUP3 MLOAD DUP5 MSTORE PUSH1 0x20 SWAP4 DUP5 ADD SWAP4 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x326B JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT PUSH2 0x32A1 JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x3291 JUMP JUMPDEST SWAP1 PUSH1 0x20 SWAP2 PUSH2 0x32CA DUP2 MLOAD DUP1 SWAP3 DUP2 DUP6 MSTORE DUP6 DUP1 DUP7 ADD SWAP2 ADD PUSH2 0x328E JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND ADD ADD SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x3 DUP3 LT ISZERO PUSH2 0x75A JUMPI MSTORE JUMP JUMPDEST SWAP1 DUP1 PUSH1 0x20 DUP4 MLOAD SWAP2 DUP3 DUP2 MSTORE ADD SWAP2 PUSH1 0x20 DUP1 DUP4 PUSH1 0x5 SHL DUP4 ADD ADD SWAP5 ADD SWAP3 PUSH1 0x0 SWAP2 JUMPDEST DUP4 DUP4 LT PUSH2 0x330F JUMPI POP POP POP POP POP SWAP1 JUMP JUMPDEST SWAP1 SWAP2 SWAP3 SWAP4 SWAP5 PUSH1 0x1F NOT DUP3 DUP3 SUB ADD DUP4 MSTORE DUP6 MLOAD SWAP1 DUP2 MLOAD DUP2 MSTORE PUSH1 0x1 PUSH1 0xA0 SHL PUSH1 0x1 SWAP1 SUB PUSH1 0x20 DUP4 ADD MLOAD AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP3 ADD MLOAD PUSH1 0x40 DUP3 ADD PUSH2 0x2A0 SWAP1 MSTORE PUSH2 0x2A0 DUP3 ADD PUSH2 0x3354 SWAP2 PUSH2 0x32B1 JUMP JUMPDEST PUSH1 0x60 DUP4 ADD MLOAD SWAP1 DUP3 DUP2 SUB PUSH1 0x60 DUP5 ADD MSTORE PUSH2 0x336B SWAP2 PUSH2 0x32B1 JUMP JUMPDEST PUSH1 0x80 DUP4 ADD MLOAD SWAP1 DUP3 DUP2 SUB PUSH1 0x80 DUP5 ADD MSTORE PUSH2 0x3382 SWAP2 PUSH2 0x32B1 JUMP JUMPDEST PUSH1 0xA0 DUP4 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND PUSH1 0xA0 DUP4 ADD MSTORE PUSH1 0xC0 DUP4 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND PUSH1 0xC0 DUP4 ADD MSTORE PUSH1 0xE0 DUP4 ADD MLOAD SWAP1 DUP3 DUP2 SUB PUSH1 0xE0 DUP5 ADD MSTORE PUSH2 0x33BF SWAP2 PUSH2 0x32B1 JUMP JUMPDEST PUSH2 0x100 DUP4 ADD MLOAD SWAP1 DUP3 DUP2 SUB PUSH2 0x100 DUP5 ADD MSTORE PUSH2 0x33D8 SWAP2 PUSH2 0x32B1 JUMP JUMPDEST PUSH2 0x120 DUP4 ADD MLOAD SWAP1 DUP3 DUP2 SUB PUSH2 0x120 DUP5 ADD MSTORE PUSH2 0x33F1 SWAP2 PUSH2 0x32B1 JUMP JUMPDEST PUSH2 0x140 DUP4 ADD MLOAD SWAP1 DUP3 DUP2 SUB PUSH2 0x140 DUP5 ADD MSTORE PUSH2 0x340A SWAP2 PUSH2 0x32B1 JUMP JUMPDEST PUSH2 0x160 DUP4 ADD MLOAD SWAP1 DUP3 DUP2 SUB PUSH2 0x160 DUP5 ADD MSTORE PUSH2 0x3423 SWAP2 PUSH2 0x32B1 JUMP JUMPDEST PUSH2 0x180 DUP4 ADD MLOAD SWAP1 DUP3 DUP2 SUB PUSH2 0x180 DUP5 ADD MSTORE PUSH2 0x343C SWAP2 PUSH2 0x32B1 JUMP JUMPDEST PUSH2 0x1A0 DUP4 ADD MLOAD SWAP1 DUP3 DUP2 SUB PUSH2 0x1A0 DUP5 ADD MSTORE PUSH2 0x3455 SWAP2 PUSH2 0x32B1 JUMP JUMPDEST SWAP2 PUSH2 0x1C0 DUP2 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND PUSH2 0x1C0 DUP4 ADD MSTORE PUSH2 0x1E0 DUP2 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND PUSH2 0x1E0 DUP4 ADD MSTORE PUSH2 0x200 DUP2 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND PUSH2 0x200 DUP4 ADD MSTORE PUSH2 0x220 DUP2 ADD MLOAD PUSH2 0x220 DUP4 ADD PUSH2 0x34A9 SWAP2 PUSH2 0x32D6 JUMP JUMPDEST PUSH2 0x240 DUP2 DUP2 ADD MLOAD ISZERO ISZERO SWAP1 DUP4 ADD MSTORE PUSH2 0x260 DUP1 DUP3 ADD MLOAD ISZERO ISZERO SWAP1 DUP4 ADD MSTORE PUSH2 0x280 SWAP1 DUP2 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 ADD MSTORE SWAP5 PUSH1 0x20 SWAP1 DUP2 ADD SWAP5 SWAP4 PUSH1 0x1 ADD SWAP3 ADD SWAP1 PUSH2 0x3300 JUMP JUMPDEST SWAP2 DUP2 PUSH1 0x1F DUP5 ADD SLT ISZERO PUSH2 0x14A JUMPI DUP3 CALLDATALOAD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 GT PUSH2 0x14A JUMPI PUSH1 0x20 DUP4 DUP2 DUP7 ADD SWAP6 ADD ADD GT PUSH2 0x14A JUMPI JUMP JUMPDEST SWAP1 PUSH1 0x1 DUP3 DUP2 SHR SWAP3 AND DUP1 ISZERO PUSH2 0x3546 JUMPI JUMPDEST PUSH1 0x20 DUP4 LT EQ PUSH2 0x3530 JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0x3525 JUMP JUMPDEST PUSH2 0x2A0 DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x18E3 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x18E3 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x40 MLOAD SWAP2 DUP3 PUSH1 0x0 DUP3 SLOAD SWAP3 PUSH2 0x35A1 DUP5 PUSH2 0x3516 JUMP JUMPDEST DUP1 DUP5 MSTORE SWAP4 PUSH1 0x1 DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0x360F JUMPI POP PUSH1 0x1 EQ PUSH2 0x35C8 JUMPI JUMPDEST POP PUSH2 0x35C6 SWAP3 POP SUB DUP4 PUSH2 0x356C JUMP JUMPDEST JUMP JUMPDEST SWAP1 POP PUSH1 0x0 SWAP3 SWAP2 SWAP3 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x0 SWAP2 JUMPDEST DUP2 DUP4 LT PUSH2 0x35F3 JUMPI POP POP SWAP1 PUSH1 0x20 PUSH2 0x35C6 SWAP3 DUP3 ADD ADD CODESIZE PUSH2 0x35B9 JUMP JUMPDEST PUSH1 0x20 SWAP2 SWAP4 POP DUP1 PUSH1 0x1 SWAP2 SLOAD DUP4 DUP6 DUP10 ADD ADD MSTORE ADD SWAP2 ADD SWAP1 SWAP2 DUP5 SWAP3 PUSH2 0x35DA JUMP JUMPDEST SWAP1 POP PUSH1 0x20 SWAP3 POP PUSH2 0x35C6 SWAP5 SWAP2 POP PUSH1 0xFF NOT AND DUP3 DUP5 ADD MSTORE ISZERO ISZERO PUSH1 0x5 SHL DUP3 ADD ADD CODESIZE PUSH2 0x35B9 JUMP JUMPDEST ISZERO PUSH2 0x3638 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x9 PUSH1 0x24 DUP3 ADD MSTORE PUSH9 0x2737BA1030B236B4B7 PUSH1 0xB9 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP1 DUP2 PUSH1 0x20 SWAP2 SUB SLT PUSH2 0x14A JUMPI MLOAD DUP1 ISZERO ISZERO DUP2 SUB PUSH2 0x14A JUMPI SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x3688 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x14195D08191BD95CC81B9BDD08195E1A5CDD PUSH1 0x72 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x36C9 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x3715 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x18D554D1081D1C985B9CD9995C8819985A5B1959 PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x3758 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x11C9081D1C985B9CD9995C8819985A5B1959 PUSH1 0x72 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x0 NOT DUP2 EQ PUSH2 0x25D3 JUMPI PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x18E3 JUMPI PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x37C2 DUP3 PUSH2 0x37A1 JUMP JUMPDEST PUSH2 0x37CF PUSH1 0x40 MLOAD SWAP2 DUP3 PUSH2 0x356C JUMP JUMPDEST DUP3 DUP2 MSTORE DUP1 SWAP3 PUSH2 0x37E0 PUSH1 0x1F NOT SWAP2 PUSH2 0x37A1 JUMP JUMPDEST ADD SWAP1 PUSH1 0x20 CALLDATASIZE SWAP2 ADD CALLDATACOPY JUMP JUMPDEST SWAP1 PUSH2 0x37F4 DUP3 PUSH2 0x37A1 JUMP JUMPDEST PUSH2 0x3801 PUSH1 0x40 MLOAD SWAP2 DUP3 PUSH2 0x356C JUMP JUMPDEST DUP3 DUP2 MSTORE DUP1 SWAP3 PUSH2 0x3812 PUSH1 0x1F NOT SWAP2 PUSH2 0x37A1 JUMP JUMPDEST ADD SWAP1 PUSH1 0x0 JUMPDEST DUP3 DUP2 LT PUSH2 0x3823 JUMPI POP POP POP JUMP JUMPDEST PUSH1 0x20 SWAP1 PUSH1 0x40 MLOAD PUSH2 0x3832 DUP2 PUSH2 0x3550 JUMP JUMPDEST PUSH1 0x0 DUP2 MSTORE PUSH1 0x0 DUP4 DUP3 ADD MSTORE PUSH1 0x60 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 DUP1 DUP3 ADD MSTORE PUSH1 0x60 PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0x0 PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0x0 PUSH1 0xC0 DUP3 ADD MSTORE PUSH1 0x60 PUSH1 0xE0 DUP3 ADD MSTORE PUSH1 0x60 PUSH2 0x100 DUP3 ADD MSTORE PUSH1 0x60 PUSH2 0x120 DUP3 ADD MSTORE PUSH1 0x60 PUSH2 0x140 DUP3 ADD MSTORE PUSH1 0x60 PUSH2 0x160 DUP3 ADD MSTORE PUSH1 0x60 PUSH2 0x180 DUP3 ADD MSTORE PUSH1 0x60 PUSH2 0x1A0 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x1C0 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x1E0 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x200 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x220 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x240 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x260 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x280 DUP3 ADD MSTORE DUP3 DUP3 DUP6 ADD ADD MSTORE ADD PUSH2 0x3817 JUMP JUMPDEST DUP1 MLOAD DUP3 LT ISZERO PUSH2 0x38ED JUMPI PUSH1 0x20 SWAP2 PUSH1 0x5 SHL ADD ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x3 DUP3 LT ISZERO PUSH2 0x75A JUMPI MSTORE JUMP JUMPDEST ISZERO PUSH2 0x3916 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH13 0x2737BA103832BA1037BBB732B9 PUSH1 0x99 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x3952 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x506574206E6F7420616374697665 PUSH1 0x90 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP3 SWAP2 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x18E3 JUMPI PUSH1 0x40 MLOAD SWAP2 PUSH2 0x39B1 PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP5 PUSH2 0x356C JUMP JUMPDEST DUP3 SWAP5 DUP2 DUP5 MSTORE DUP2 DUP4 ADD GT PUSH2 0x14A JUMPI DUP3 DUP2 PUSH1 0x20 SWAP4 DUP5 PUSH1 0x0 SWAP7 ADD CALLDATACOPY ADD ADD MSTORE JUMP JUMPDEST ISZERO PUSH2 0x39D6 JUMPI POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE SWAP1 DUP2 SWAP1 PUSH2 0x39FA SWAP1 PUSH1 0x24 DUP4 ADD SWAP1 PUSH2 0x32B1 JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST PUSH2 0x3A09 SWAP2 CALLDATASIZE SWAP2 PUSH2 0x3988 JUMP JUMPDEST DUP1 MLOAD SWAP1 PUSH1 0x2 DUP3 LT ISZERO SWAP2 DUP3 PUSH2 0x3AD0 JUMPI JUMPDEST POP PUSH1 0x40 MLOAD SWAP2 DUP4 MLOAD SWAP3 DUP1 PUSH1 0x20 DUP7 ADD SWAP5 DUP1 PUSH1 0x20 DUP4 ADD SWAP1 PUSH2 0x3A36 SWAP2 DUP9 PUSH2 0x328E JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP2 ADD PUSH15 0x81B195B99DD1A081A5B9D985B1A59 PUSH1 0x8A SHL SWAP1 MSTORE SUB PUSH1 0x20 ADD PUSH1 0x10 NOT DUP2 ADD DUP3 MSTORE PUSH1 0xF ADD PUSH2 0x3A69 SWAP1 DUP3 PUSH2 0x356C JUMP JUMPDEST PUSH2 0x3A72 SWAP2 PUSH2 0x39CE JUMP JUMPDEST PUSH2 0x3A7B SWAP1 PUSH2 0x3B93 JUMP JUMPDEST ISZERO SWAP2 PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 MLOAD SWAP1 DUP2 PUSH1 0x20 DUP5 ADD PUSH2 0x3A93 SWAP3 PUSH2 0x328E JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP2 ADD PUSH16 0x2063616E6E6F7420626520626C616E6B PUSH1 0x80 SHL SWAP1 MSTORE SUB PUSH1 0x20 ADD PUSH1 0xF NOT DUP2 ADD DUP3 MSTORE PUSH1 0x10 ADD PUSH2 0x3AC7 SWAP1 DUP3 PUSH2 0x356C JUMP JUMPDEST PUSH2 0x35C6 SWAP2 PUSH2 0x39CE JUMP JUMPDEST PUSH1 0x32 LT ISZERO SWAP2 POP CODESIZE PUSH2 0x3A18 JUMP JUMPDEST SWAP1 DUP2 MLOAD DUP2 LT ISZERO PUSH2 0x38ED JUMPI ADD PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x5 DUP2 MLOAD LT PUSH2 0x3B8D JUMPI PUSH1 0x0 DUP1 SWAP2 DUP2 JUMPDEST DUP2 MLOAD DUP4 LT ISZERO PUSH2 0x3B7B JUMPI PUSH1 0x1 PUSH1 0xFE SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT PUSH2 0x3B1D DUP6 DUP6 PUSH2 0x3ADC JUMP JUMPDEST MLOAD AND SUB PUSH2 0x3B3C JUMPI PUSH2 0x3B34 JUMPI PUSH1 0x1 DUP1 SWAP3 JUMPDEST ADD SWAP2 PUSH2 0x3AFC JUMP JUMPDEST POP POP POP PUSH1 0x0 SWAP1 JUMP JUMPDEST SWAP2 DUP3 DUP1 PUSH2 0x3B5A JUMPI JUMPDEST PUSH2 0x3B51 JUMPI JUMPDEST PUSH1 0x1 SWAP1 PUSH2 0x3B2D JUMP JUMPDEST PUSH1 0x1 SWAP4 POP PUSH2 0x3B49 JUMP JUMPDEST POP PUSH1 0x17 PUSH1 0xF9 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT PUSH2 0x3B73 DUP4 DUP6 PUSH2 0x3ADC JUMP JUMPDEST MLOAD AND EQ PUSH2 0x3B44 JUMP JUMPDEST SWAP3 SWAP2 POP POP DUP2 PUSH2 0x3B88 JUMPI POP SWAP1 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST POP PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP2 MLOAD DUP2 LT ISZERO PUSH2 0x3BCD JUMPI PUSH1 0x1 PUSH1 0xFD SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT PUSH2 0x3BB7 DUP4 DUP6 PUSH2 0x3ADC JUMP JUMPDEST MLOAD AND SUB PUSH2 0x3BC6 JUMPI PUSH1 0x1 ADD PUSH2 0x3B96 JUMP JUMPDEST POP POP PUSH1 0x0 SWAP1 JUMP JUMPDEST POP POP PUSH1 0x1 SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CHAINID 0x4C EQ SWAP10 0xD0 SLOAD PUSH4 0x235CEE4C PUSH13 0x8C76A6B2EB19C4576859BE90B4 PUSH15 0x684F86D7D3F64736F6C634300081C STOP CALLER ",
              "sourceMap": "994:17230:6:-:0;;;;;;;3836:18;994:17230;;-1:-1:-1;;;;;;994:17230:6;3844:10;994:17230;;-1:-1:-1;;;;;994:17230:6;;;;;;;;;;;;;;"
            },
            "deployedBytecode": {
              "functionDebugData": {
                "abi_decode_available_length_string": {
                  "entryPoint": 14728,
                  "id": null,
                  "parameterSlots": 3,
                  "returnSlots": 1
                },
                "abi_decode_bool_fromMemory": {
                  "entryPoint": 13929,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_decode_string_calldata": {
                  "entryPoint": 13545,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 2
                },
                "abi_encode_address_address_uint128": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 4,
                  "returnSlots": 1
                },
                "abi_encode_address_uint256": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 3,
                  "returnSlots": 1
                },
                "abi_encode_array_struct_Pet_dyn": {
                  "entryPoint": 13027,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_array_uint256_dyn": {
                  "entryPoint": 12890,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_enum_PetStatus": {
                  "entryPoint": 13014,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "abi_encode_string": {
                  "entryPoint": 12977,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_uint256_uint256_uint256": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 4,
                  "returnSlots": 1
                },
                "allocate_and_zero_memory_array_array_struct_Pet_dyn": {
                  "entryPoint": 14314,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "allocate_and_zero_memory_array_array_uint256_dyn": {
                  "entryPoint": 14264,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "array_allocation_size_array_uint256_dyn": {
                  "entryPoint": 14241,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "copy_array_from_storage_to_memory_string": {
                  "entryPoint": 13709,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "copy_memory_to_memory_with_cleanup": {
                  "entryPoint": 12942,
                  "id": null,
                  "parameterSlots": 3,
                  "returnSlots": 0
                },
                "extract_byte_array_length": {
                  "entryPoint": 13590,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "finalize_allocation": {
                  "entryPoint": 13676,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "finalize_allocation_47887": {
                  "entryPoint": 13648,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "fun_isBlank": {
                  "entryPoint": 15251,
                  "id": 2330,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "fun_isValidEmail": {
                  "entryPoint": 15085,
                  "id": 2405,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "fun_validateString": {
                  "entryPoint": 14846,
                  "id": 2299,
                  "parameterSlots": 3,
                  "returnSlots": 0
                },
                "increment_uint256": {
                  "entryPoint": 14226,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "memory_array_index_access_bytes": {
                  "entryPoint": 15068,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "memory_array_index_access_uint256_dyn": {
                  "entryPoint": 14553,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "require_helper_string": {
                  "entryPoint": 14798,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "require_helper_stringliteral_2fc3": {
                  "entryPoint": 13953,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "require_helper_stringliteral_37d0": {
                  "entryPoint": 14667,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "require_helper_stringliteral_501f": {
                  "entryPoint": 14161,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "require_helper_stringliteral_b150": {
                  "entryPoint": 14094,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "require_helper_stringliteral_ddee": {
                  "entryPoint": 14607,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "require_helper_stringliteral_ebf7": {
                  "entryPoint": 14018,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "require_helper_stringliteral_fa7e": {
                  "entryPoint": 13873,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "update_storage_value_offset_uint128_to_uint128": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "write_to_memory_enum_PetStatus": {
                  "entryPoint": 14595,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                }
              },
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "61046080604052600436101561001457600080fd5b60003560e01c9081630b5d39fa1461323e575080631850e3a7146132125780633f26decd146130af5780633fa8be321461308c578063403f8cc71461306e57806344021ad714612d32578063465c66e914612d03578063543df5a314612a845780635b236d97146128b45780635e23985b1461274457806375829def1461267c5780638b504c171461260e5780639dc5ac72146125e9578063a06e0061146124c6578063b3035b6414612362578063ce2ed0e214610a16578063cfb869bf1461079c578063d25a6f0514610770578063d32bfb6c14610437578063d74a48a41461040b578063d89fd4b41461017e578063ee7afb1c1461014f5763f851a4401461011d57600080fd5b3461014a57600036600319011261014a5760005460405160089190911c6001600160a01b03168152602090f35b600080fd5b3461014a57600036600319011261014a5760206040517362b8b11039fcfe5ab0c56e502b1c372a3d2a9c7a8152f35b3461014a57602036600319011261014a5760043560015481106101a090613681565b600052600260205260406000208054600160a01b60019003600183015416600583015491600d84015493600e81015492600160a01b60019003600f8301541694600283016101ed9061358d565b906101fa6003850161358d565b906102076004860161358d565b906102146006870161358d565b906102216007880161358d565b9261022e6008890161358d565b9461023b60098a0161358d565b96610248600a8b0161358d565b98610255600b8c0161358d565b9a600c016102629061358d565b9b6040516104205261042051526104205160200152610420516040016102a09052610420516102a001610294916132b1565b61042051810361042051606001526102ab916132b1565b61042051810361042051608001526102c2916132b1565b906001600160801b0381166104205160a0015260801c6104205160c001526104205181036104205160e001526102f7916132b1565b61042051810361042051610100015261030f916132b1565b610420518103610420516101200152610327916132b1565b61042051810361042051610140015261033f916132b1565b610420518103610420516101600152610357916132b1565b61042051810361042051610180015261036f916132b1565b610420518103610420516101a00152610387916132b1565b926001600160801b038116610420516101c0015260801c610420516101e001526001600160801b03811661042051610200015261042051610220018160801c60ff16906103d3916132d6565b8060881c60ff16151561042051610240015260901c60ff16151561042051610260015261042051610280015261042051900361042051f35b3461014a57602036600319011261014a5760043560005260056020526020604060002054604051908152f35b3461014a57602036600319011261014a5760043580600052600260205261046f60018060a01b0360016040600020015416331461390f565b600160005461048160ff8216156136c2565b60ff191617600055806000526002602052604060002090600e820180549260ff8460801c16600381101561075a576104b9901561394b565b600f8101546001600160a01b031661071557600d01805460009182905582546001600160801b031916835583825260036020908152604080842084905560049091528220919091556001600160801b0380821694169060801c84801580156106ee575b505080610648575b81610588575b825460ff60801b1916600160811b179092556040805194855260208501929092529083015233917f5a15fed544596f86ab10d13ce99dfeb4e13095d939b5749ae220fbc4f05846369080606081015b0390a36000805460ff19169055005b60405163a9059cbb60e01b81523360048201526024810183905260208160448160007362b8b11039fcfe5ab0c56e502b1c372a3d2a9c7a5af190811561063c5760009161060d575b5061052a5760405162461bcd60e51b815260206004820152601060248201526f11c9081c99599d5b990819985a5b195960821b6044820152606490fd5b61062f915060203d602011610635575b610627818361356c565b810190613669565b866105d0565b503d61061d565b6040513d6000823e3d90fd5b60405163a9059cbb60e01b815233600482015260248101829052602081604481600073765de816845861e75a25fca122bb6898b8b1282a5af190811561063c576000916106cf575b506105245760405162461bcd60e51b815260206004820152601260248201527118d554d1081c99599d5b990819985a5b195960721b6044820152606490fd5b6106e8915060203d60201161063557610627818361356c565b86610690565b60009061070c575b600080809381933390f11561063c57848661051c565b506108fc6106f6565b60405162461bcd60e51b815260206004820152601760248201527f46696e64657220616c72656164792061737369676e65640000000000000000006044820152606490fd5b634e487b7160e01b600052602160045260246000fd5b3461014a57602036600319011261014a5760043560005260046020526020604060002054604051908152f35b3461014a57602036600319011261014a57600435600052600260205260406000208054600160a01b6001900360018301541691600281016107dc9061358d565b6107e86003830161358d565b6107f46004840161358d565b60058401546108056006860161358d565b6108116007870161358d565b61081d6008880161358d565b9161082a6009890161358d565b93610837600a8a0161358d565b95610844600b8b0161358d565b97610851600c8c0161358d565b99600d8c01549d600e8d01549c600160a01b6001900390600f0154169d6040516104405261044051526104405160200152610440516040016102a09052610440516102a00161089f916132b1565b61044051810361044051606001526108b6916132b1565b61044051810361044051608001526108cd916132b1565b906001600160801b0381166104405160a0015260801c6104405160c001526104405181036104405160e00152610902916132b1565b61044051810361044051610100015261091a916132b1565b610440518103610440516101200152610932916132b1565b61044051810361044051610140015261094a916132b1565b610440518103610440516101600152610962916132b1565b61044051810361044051610180015261097a916132b1565b610440518103610440516101a00152610992916132b1565b926001600160801b038116610440516101c0015260801c610440516101e001526001600160801b03811661044051610200015261044051610220018160801c60ff16906109de916132d6565b8060881c60ff16151561044051610240015260901c60ff16151561044051610260015261044051610280015261044051900361044051f35b6101c036600319011261014a576004356001600160401b03811161014a57610a429036906004016134e9565b6102c0526103a0526024356001600160401b03811161014a57610a699036906004016134e9565b61032052610400526044356001600160401b03811161014a57610a909036906004016134e9565b61012052610160526064356101a08190526001600160801b038116900361014a576084356101c08190526001600160801b038116900361014a5760a4356001600160401b03811161014a57610ae99036906004016134e9565b610220526102405260c4356001600160401b03811161014a57610b109036906004016134e9565b610280526102a05260e4356001600160401b03811161014a57610b379036906004016134e9565b6103e05261034052610104356001600160401b03811161014a57610b5f9036906004016134e9565b6103c052610380526001600160401b03610124351161014a57610b8836610124356004016134e9565b61036052610300526001600160401b03610144351161014a57610bb136610144356004016134e9565b6102e05261026052610164356001600160401b03811161014a57610bd99036906004016134e9565b610200526101e052610184356101808190526001600160801b038116900361014a576101a4356101408190526001600160801b038116900361014a576001600054610c2760ff8216156136c2565b60ff191617600055678ac7230489e8000034116123255769021e19e0c9bab24000006001600160801b036101805116116122e85769021e19e0c9bab24000006001600160801b036101405116116122ad573415801590612298575b8015612283575b1561224c5760406101008190528051610cc491610ca6908261356c565b60048152634e616d6560e01b60208201526102c0516103a0516139fe565b610100518051610cf791610cd8908261356c565b6005815264109c99595960da1b602082015261032051610400516139fe565b610100518051610de291610d0b908261356c565b600681526523b2b73232b960d11b6020820152610d97610d32366101205161016051613988565b610d92815160018110159081612240575b50610100515190610d8d600f6020848951610d64818c85808601910161328e565b81016e081b195b99dd1a081a5b9d985b1a59608a1b83820152030160101981018552018361356c565b6139ce565b613b93565b15610d8d60106020610100515185610db8829751809285808601910161328e565b81016f2063616e6e6f7420626520626c616e6b60801b838201520301600f1981018552018361356c565b6101005150610ea1610db86101005151610dff610100518261356c565b600b8152610d8d60106020808401936a2232b9b1b934b83a34b7b760a91b8552610e8b610e3336610280516102a051613988565b610d928151600a8110159081612233575b50610100515190610d8d600f88848d610e638b5180928585019061328e565b81016e081b195b99dd1a081a5b9d985b1a59608a1b8382015203018a1981018552018361356c565b159461010051519687925180928585019061328e565b6101005150610f1f610db86101005151610ebe610100518261356c565b60098152610d8d601060208084019368125b5859d94815549360ba1b8552610e8b610ef0366103e05161034051613988565b610d928151600a81101590816122275750610100515190610d8d600f88848d610e638b5180928585019061328e565b6101005150610f9c610db86101005151610f3c610100518261356c565b60088152610d8d6010602080840193672637b1b0ba34b7b760c11b8552610e8b610f6d366103c05161038051613988565b610d928151600581101590816122275750610100515190610d8d600f88848d610e638b5180928585019061328e565b610100515061101d610db86101005151610fb9610100518261356c565b600c8152610d8d60106020808401936b436f6e74616374206e616d6560a01b8552610e8b610fee366103605161030051613988565b610d9281516002811015908161221b5750610100515190610d8d600f88848d610e638b5180928585019061328e565b610100515061109f610db8610100515161103a610100518261356c565b600d8152610d8d60106020808401936c436f6e746163742070686f6e6560981b8552610e8b611070366102e05161026051613988565b610d9281516005811015908161220f5750610100515190610d8d600f88848d610e638b5180928585019061328e565b600a6001600160801b036101a051161015806121f8575b156121c25760016001600160801b036101c051161015806121ab575b15612176576110f06110eb36610200516101e051613988565b613aed565b1561213f576001600160801b036101405116612097575b6001600160801b036101805116611fb6575b60015460e052610100515160c05261113260c051613550565b60e05160c0515233602060c0510152611152366102c0516103a051613988565b6101005160c051015261116c366103205161040051613988565b606060c0510152611184366101205161016051613988565b608060c05101526001600160801b036101a0511660a060c05101526001600160801b036101c0511660c0805101526111c3366102205161024051613988565b60e060c05101526111db36610280516102a051613988565b61010060c05101526111f4366103e05161034051613988565b61012060c051015261120d366103c05161038051613988565b61014060c0510152611226366103605161030051613988565b61016060c051015261123f366102e05161026051613988565b61018060c051015261125836610200516101e051613988565b6101a060c05101526001600160801b0334166101c060c05101526001600160801b0361018051166101e060c05101526001600160801b03610140511661020060c0510152600061022060c0510152600061024060c0510152600061026060c0510152600061028060c051015260e05160005260026020526101005160002060c05151815560018060a01b03602060c051015116600182019060018060a01b03166bffffffffffffffffffffffff60a01b8254161790556101005160c05101518051906001600160401b0382116118e35781906113376002850154613516565b601f8111611f63575b50602090601f8311600114611ef257600092611ee7575b50508160011b916000199060031b1c19161760028201555b606060c05101518051906001600160401b0382116118e35781906113966003850154613516565b601f8111611e94575b50602090601f8311600114611e2357600092611e18575b50508160011b916000199060031b1c19161760038201555b608060c05101518051906001600160401b0382116118e35781906113f56004850154613516565b601f8111611dc5575b50602090601f8311600114611d5457600092611d49575b50508160011b916000199060031b1c19161760048201555b60c0805160a081015191015160801b6001600160801b0319166001600160801b0391909116176005820155600681019060e060c05101519182516001600160401b0381116118e35761147f8254613516565b601f8111611d01575b506020601f8211600114611c9c5781929394600092611c91575b50508160011b916000199060031b1c19161790555b600781019061010060c05101519182516001600160401b0381116118e3576114df8254613516565b601f8111611c49575b506020601f8211600114611be45781929394600092611bd9575b50508160011b916000199060031b1c19161790555b600881019061012060c05101519182516001600160401b0381116118e35761153f8254613516565b601f8111611b91575b506020601f8211600114611b2c5781929394600092611b21575b50508160011b916000199060031b1c19161790555b600981019061014060c05101519182516001600160401b0381116118e35761159f8254613516565b601f8111611ad9575b506020601f8211600114611a745781929394600092611a69575b50508160011b916000199060031b1c19161790555b600a81019061016060c05101519182516001600160401b0381116118e3576115ff8254613516565b601f8111611a21575b506020601f82116001146119bc57819293946000926119b1575b50508160011b916000199060031b1c19161790555b600b81019061018060c05101519182516001600160401b0381116118e35761165f8254613516565b601f8111611969575b506020601f821160011461190457819293946000926118f9575b50508160011b916000199060031b1c19161790555b600c8101906101a060c05101519182516001600160401b0381116118e3576116bf8254613516565b601f811161189b575b506020601f8211600114611836578192939460009261182b575b50508160011b916000199060031b1c19161790555b60c0516101c08101516101e09091015160801b6001600160801b0319166001600160801b039190911617600d820155600e8101906001600160801b038061020060c051015116166001600160801b031983541617825561022060c051015191600383101561075a57805460c05161024081015161026082015162ffffff60801b1990931660809690961b60ff60801b169590951794151560881b60ff60881b169490941790151560901b60ff60901b1617905561028090910151600f9190910180546001600160a01b0319166001600160a01b03929092169190911790556001805460009081526005602052610100518120429055905461181d9033817ff6be169e9242db299e4065f846c02e09b60f1421201248fe94d6f552e8c8bd448580a3613792565b600155805460ff1916815580f35b0151905084806116e2565b601f1982169083600052806000209160005b8181106118835750958360019596971061186a575b505050811b0190556116f7565b015160001960f88460031b161c1916905584808061185d565b9192602060018192868b015181550194019201611848565b826000526020600020601f830160051c810191602084106118d9575b601f0160051c01905b8181106118cd57506116c8565b600081556001016118c0565b90915081906118b7565b634e487b7160e01b600052604160045260246000fd5b015190508480611682565b601f1982169083600052806000209160005b81811061195157509583600195969710611938575b505050811b019055611697565b015160001960f88460031b161c1916905584808061192b565b9192602060018192868b015181550194019201611916565b826000526020600020601f830160051c810191602084106119a7575b601f0160051c01905b81811061199b5750611668565b6000815560010161198e565b9091508190611985565b015190508480611622565b601f1982169083600052806000209160005b818110611a09575095836001959697106119f0575b505050811b019055611637565b015160001960f88460031b161c191690558480806119e3565b9192602060018192868b0151815501940192016119ce565b826000526020600020601f830160051c81019160208410611a5f575b601f0160051c01905b818110611a535750611608565b60008155600101611a46565b9091508190611a3d565b0151905084806115c2565b601f1982169083600052806000209160005b818110611ac157509583600195969710611aa8575b505050811b0190556115d7565b015160001960f88460031b161c19169055848080611a9b565b9192602060018192868b015181550194019201611a86565b826000526020600020601f830160051c81019160208410611b17575b601f0160051c01905b818110611b0b57506115a8565b60008155600101611afe565b9091508190611af5565b015190508480611562565b601f1982169083600052806000209160005b818110611b7957509583600195969710611b60575b505050811b019055611577565b015160001960f88460031b161c19169055848080611b53565b9192602060018192868b015181550194019201611b3e565b826000526020600020601f830160051c81019160208410611bcf575b601f0160051c01905b818110611bc35750611548565b60008155600101611bb6565b9091508190611bad565b015190508480611502565b601f1982169083600052806000209160005b818110611c3157509583600195969710611c18575b505050811b019055611517565b015160001960f88460031b161c19169055848080611c0b565b9192602060018192868b015181550194019201611bf6565b826000526020600020601f830160051c81019160208410611c87575b601f0160051c01905b818110611c7b57506114e8565b60008155600101611c6e565b9091508190611c65565b0151905084806114a2565b601f1982169083600052806000209160005b818110611ce957509583600195969710611cd0575b505050811b0190556114b7565b015160001960f88460031b161c19169055848080611cc3565b9192602060018192868b015181550194019201611cae565b826000526020600020601f830160051c81019160208410611d3f575b601f0160051c01905b818110611d335750611488565b60008155600101611d26565b9091508190611d1d565b015190508380611415565b92506004840160005280600020906000935b601f1984168510611daa576001945083601f19811610611d91575b505050811b01600482015561142d565b015160001960f88460031b161c19169055838080611d81565b81810151835560209485019460019093019290910190611d66565b909150600484016000526020600020601f840160051c810160208510611e11575b90849392915b601f830160051c82018110611e025750506113fe565b60008155859450600101611dec565b5080611de6565b0151905083806113b6565b92506003840160005280600020906000935b601f1984168510611e79576001945083601f19811610611e60575b505050811b0160038201556113ce565b015160001960f88460031b161c19169055838080611e50565b81810151835560209485019460019093019290910190611e35565b909150600384016000526020600020601f840160051c810160208510611ee0575b90849392915b601f830160051c82018110611ed157505061139f565b60008155859450600101611ebb565b5080611eb5565b015190508380611357565b92506002840160005280600020906000935b601f1984168510611f48576001945083601f19811610611f2f575b505050811b01600282015561136f565b015160001960f88460031b161c19169055838080611f1f565b81810151835560209485019460019093019290910190611f04565b909150600284016000526020600020601f840160051c810160208510611faf575b90849392915b601f830160051c82018110611fa0575050611340565b60008155859450600101611f8a565b5080611f84565b610100515160a08181526323b872dd60e01b9091528051610180513360048301523060248301526001600160801b03166044820152905160209190606490600073765de816845861e75a25fca122bb6898b8b1282a5af160805260805115612089576000608051612050575b61202b9061370e565b60015460005260036020526001600160801b0361018051166101005160002055611119565b5060203d602011612082575b61207b8161206f61202b9360a05161356c565b60a0510160a051613669565b9050612022565b503d61205c565b61010051513d6000823e3d90fd5b61010051516323b872dd60e01b8152610140513360048301523060248301526001600160801b0316604482015260208160648160007362b8b11039fcfe5ab0c56e502b1c372a3d2a9c7a5af18015612089576120fb91600091612120575b50613751565b60015460005260046020526001600160801b0361014051166101005160002055611107565b612139915060203d60201161063557610627818361356c565b826120f5565b610100515162461bcd60e51b815260206004820152600d60248201526c125b9d985b1a5908195b585a5b609a1b6044820152606490fd5b610100515162461bcd60e51b815260206004820152600b60248201526a496e76616c69642061676560a81b6044820152606490fd5b5060f06001600160801b036101c0511611156110d2565b610100515162461bcd60e51b815260206004820152600c60248201526b496e76616c69642073697a6560a01b6044820152606490fd5b5060c86001600160801b036101a0511611156110b6565b6014915011158b610e44565b6064915011158b610e44565b60c8915011158b610e44565b6101f4915011158b610e44565b600a9150111586610d43565b60405162461bcd60e51b815260206004820152600f60248201526e109bdd5b9d1e481c995c5d5a5c9959608a1b6044820152606490fd5b506001600160801b0361014051161515610c89565b506001600160801b0361018051161515610c82565b60405162461bcd60e51b8152602060048201526013602482015272472420626f756e747920746f6f206c6172676560681b6044820152606490fd5b60405162461bcd60e51b81526020600482015260156024820152746355534420626f756e747920746f6f206c6172676560581b6044820152606490fd5b60405162461bcd60e51b815260206004820152601560248201527443454c4f20626f756e747920746f6f206c6172676560581b6044820152606490fd5b3461014a57602036600319011261014a576004356123836001548210613681565b600160005461239560ff8216156136c2565b60ff1916176000558060005260026020526040600020600e81019060ff825460801c16600381101561075a576123cb901561394b565b60018101546001600160a01b0316331461248857600f0180546001600160a01b03191633179055805460ff60901b1916600160901b1780825560881c60ff1661244a575b5060405190600082527fc7db73a2d1dc7fd351b6549efad129bbf568e618dbbe683abfa0d1550a96e5ae60203393a36000805460ff19169055005b805460ff60801b1916600160801b17905533817f2c54217aed12a18c71e20e5a6a3f13f8cfddbb2c3a0a5f409861478c7fd39e81600080a38161240f565b60405162461bcd60e51b815260206004820152601660248201527527bbb732b91031b0b73737ba103132903334b73232b960511b6044820152606490fd5b3461014a57604036600319011261014a57600435602435810160008183116125d35781906001548093116125cb575b835b8281106125885750612508906137b8565b916000935b828110612539575061252e935060405193849360408552604085019061325a565b911060208301520390f35b80600052600260205260ff600e6040600020015460801c16600381101561075a5715612568575b60010161250d565b93612580818661257a600194886138d9565b52613792565b949050612560565b80600052600260205260ff600e6040600020015460801c16600381101561075a57156125b7575b6001016124f7565b906125c3600191613792565b9190506125af565b8291506124f5565b634e487b7160e01b600052601160045260246000fd5b3461014a57600036600319011261014a57602060405169021e19e0c9bab24000008152f35b3461014a57600036600319011261014a57600080600154905b81811061263957602083604051908152f35b80600052600260205260ff600e6040600020015460801c16600381101561075a5715612668575b600101612627565b91612674600191613792565b929050612660565b3461014a57602036600319011261014a576004356001600160a01b0381169081810361014a57600054906126be33600884901c6001600160a01b031614613631565b821561270d57610100600160a81b031990911660089190911b610100600160a81b03161760009081557f7ce7ec0b50378fb6c0186ffb5f48325f6593fcb4ca4386f21861af3129188f5c9080a2005b60405162461bcd60e51b815260206004820152600f60248201526e496e76616c6964206164647265737360881b6044820152606490fd5b3461014a57602036600319011261014a5760043580600052600260205261277c60018060a01b0360016040600020015416331461390f565b600160005461278e60ff8216156136c2565b60ff1916176000558060005260026020526040600020600e810180549160ff8360801c1690600382101561075a576127c8600f921561394b565b0180549092906001600160a01b03161561287a5760ff60881b1916600160881b1780825560901c60ff16612832575b8260405190600182527fc7db73a2d1dc7fd351b6549efad129bbf568e618dbbe683abfa0d1550a96e5ae60203393a36000805460ff19169055005b805460ff60801b1916600160801b179055546001600160a01b0316817f2c54217aed12a18c71e20e5a6a3f13f8cfddbb2c3a0a5f409861478c7fd39e81600080a381806127f7565b60405162461bcd60e51b8152602060048201526012602482015271139bc8199a5b99195c88185cdcda59db995960721b6044820152606490fd5b3461014a57600036600319011261014a576001546128d1816137ea565b9060005b8181106128f657604051602080825281906128f2908201866132e3565b0390f35b80600191600052600260205260406000206040519061291482613550565b80548252838060a01b03848201541660208301526129346002820161358d565b60408301526129456003820161358d565b60608301526129566004820161358d565b608083015260058101546001600160801b03811660a084015260801c60c08301526129836006820161358d565b60e08301526129946007820161358d565b6101008301526129a66008820161358d565b6101208301526129b86009820161358d565b6101408301526129ca600a820161358d565b6101608301526129dc600b820161358d565b6101808301526129ee600c820161358d565b6101a0830152600d8101546001600160801b0381166101c084015260801c6101e083015260ff600e8201546001600160801b038116610200850152612a3c828260801c166102208601613903565b818160881c16151561024085015260901c161515610260830152600f848060a01b0391015416610280820152612a7282866138d9565b52612a7d81856138d9565b50016128d5565b3461014a57600036600319011261014a576001546000805b828110612cc05750612ab6612ab0826137b8565b916137ea565b600092835b818110612aec57612ade846128f28560405193849360408552604085019061325a565b9083820360208501526132e3565b80600052600260205260ff600e6040600020015460801c16600381101561075a5715612b1b575b600101612abb565b93612cb88186612b2d600194886138d9565b52866000526002602052604060002060405190612b4982613550565b80548252848060a01b0385820154166020830152612b696002820161358d565b6040830152612b7a6003820161358d565b6060830152612b8b6004820161358d565b608083015260058101546001600160801b03811660a084015260801c60c0830152612bb86006820161358d565b60e0830152612bc96007820161358d565b610100830152612bdb6008820161358d565b610120830152612bed6009820161358d565b610140830152612bff600a820161358d565b610160830152612c11600b820161358d565b610180830152612c23600c820161358d565b6101a0830152600d8101546001600160801b0381166101c084015260801c6101e083015260ff600e8201546001600160801b038116610200850152612c71828260801c166102208601613903565b818160881c16151561024085015260901c161515610260830152600f858060a01b0391015416610280820152612ca782876138d9565b52612cb281866138d9565b50613792565b949050612b13565b80600052600260205260ff600e6040600020015460801c16600381101561075a5715612cef575b600101612a9c565b90612cfb600191613792565b919050612ce7565b3461014a57600036600319011261014a57602060405173765de816845861e75a25fca122bb6898b8b1282a8152f35b3461014a57602036600319011261014a57600435612d536001548210613681565b6001600054612d6560ff8216156136c2565b60ff191617600055806000526002602052604060002090600e82019182549060ff8260801c16600381101561075a5760010361303557600f8101546001600160a01b0316330361300357600d0180546001600160801b038116948515809181158092612ff7575b8015612fe5575b15612fb45760009485905580546001600160801b0319169055858452600360209081526040808620869055600490915284209390935560809190911c926001600160801b031691859190612f8d575b505081612f18575b80612e71575b6040805194855260208501929092529083015233917f0af63efacf28433915ea2d25f6e48eb87264e585bebef968bcd127a52608adec908060608101610579565b60405191630200057560e51b8352336004840152816024840152606060448401526000606484015260208360848160007362b8b11039fcfe5ab0c56e502b1c372a3d2a9c7a5af192831561063c577f0af63efacf28433915ea2d25f6e48eb87264e585bebef968bcd127a52608adec93612ef291600091612ef95750613751565b9150612e30565b612f12915060203d60201161063557610627818361356c565b876120f5565b60405163a9059cbb60e01b815233600482015260248101839052602081604481600073765de816845861e75a25fca122bb6898b8b1282a5af1801561063c57612f6991600091612f6e575b5061370e565b612e2a565b612f87915060203d60201161063557610627818361356c565b86612f63565b600090612fab575b600080809381933390f11561063c578385612e22565b506108fc612f95565b60405162461bcd60e51b81526020600482015260096024820152684e6f20626f756e747960b81b6044820152606490fd5b506001600160801b0386161515612dd3565b508360801c1515612dcc565b60405162461bcd60e51b815260206004820152600a6024820152692737ba103334b73232b960b11b6044820152606490fd5b60405162461bcd60e51b815260206004820152601160248201527014195d081b9bdd08199bdd5b99081e595d607a1b6044820152606490fd5b3461014a57600036600319011261014a576020600154604051908152f35b3461014a57600036600319011261014a576020604051678ac7230489e800008152f35b3461014a57602036600319011261014a576004356001600160a01b038116810361014a576130eb60018060a01b0360005460081c163314613631565b6040516370a0823160e01b815230600482015260208160248173765de816845861e75a25fca122bb6898b8b1282a5afa90811561063c576000916131de575b5060405163a9059cbb60e01b81526001600160a01b039092166004830152602482015260208180604481015b0381600073765de816845861e75a25fca122bb6898b8b1282a5af190811561063c576000916131bf575b501561318857005b60405162461bcd60e51b815260206004820152600f60248201526e151c985b9cd9995c8819985a5b1959608a1b6044820152606490fd5b6131d8915060203d60201161063557610627818361356c565b81613180565b90506020813d60201161320a575b816131f96020938361356c565b8101031261014a575161315661312a565b3d91506131ec565b3461014a57602036600319011261014a5760043560005260036020526020604060002054604051908152f35b3461014a57600036600319011261014a57806276a70060209252f35b906020808351928381520192019060005b8181106132785750505090565b825184526020938401939092019160010161326b565b60005b8381106132a15750506000910152565b8181015183820152602001613291565b906020916132ca8151809281855285808601910161328e565b601f01601f1916010190565b90600382101561075a5752565b9080602083519182815201916020808360051b8301019401926000915b83831061330f57505050505090565b9091929394601f1982820301835285519081518152600160a01b6001900360208301511660208201526040820151604082016102a090526102a08201613354916132b1565b606083015190828103606084015261336b916132b1565b6080830151908281036080840152613382916132b1565b60a08301516001600160801b031660a083015260c08301516001600160801b031660c083015260e08301519082810360e08401526133bf916132b1565b610100830151908281036101008401526133d8916132b1565b610120830151908281036101208401526133f1916132b1565b6101408301519082810361014084015261340a916132b1565b61016083015190828103610160840152613423916132b1565b6101808301519082810361018084015261343c916132b1565b6101a0830151908281036101a0840152613455916132b1565b916101c08101516001600160801b03166101c08301526101e08101516001600160801b03166101e08301526102008101516001600160801b031661020083015261022081015161022083016134a9916132d6565b6102408181015115159083015261026080820151151590830152610280908101516001600160a01b03169101529460209081019493600101920190613300565b9181601f8401121561014a578235916001600160401b03831161014a576020838186019501011161014a57565b90600182811c92168015613546575b602083101461353057565b634e487b7160e01b600052602260045260246000fd5b91607f1691613525565b6102a081019081106001600160401b038211176118e357604052565b90601f801991011681019081106001600160401b038211176118e357604052565b90604051918260008254926135a184613516565b808452936001811690811561360f57506001146135c8575b506135c69250038361356c565b565b90506000929192526020600020906000915b8183106135f35750509060206135c692820101386135b9565b60209193508060019154838589010152019101909184926135da565b9050602092506135c694915060ff191682840152151560051b820101386135b9565b1561363857565b60405162461bcd60e51b81526020600482015260096024820152682737ba1030b236b4b760b91b6044820152606490fd5b9081602091031261014a5751801515810361014a5790565b1561368857565b60405162461bcd60e51b815260206004820152601260248201527114195d08191bd95cc81b9bdd08195e1a5cdd60721b6044820152606490fd5b156136c957565b60405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606490fd5b1561371557565b60405162461bcd60e51b815260206004820152601460248201527318d554d1081d1c985b9cd9995c8819985a5b195960621b6044820152606490fd5b1561375857565b60405162461bcd60e51b815260206004820152601260248201527111c9081d1c985b9cd9995c8819985a5b195960721b6044820152606490fd5b60001981146125d35760010190565b6001600160401b0381116118e35760051b60200190565b906137c2826137a1565b6137cf604051918261356c565b82815280926137e0601f19916137a1565b0190602036910137565b906137f4826137a1565b613801604051918261356c565b8281528092613812601f19916137a1565b019060005b82811061382357505050565b60209060405161383281613550565b600081526000838201526060604082015260608082015260606080820152600060a0820152600060c0820152606060e08201526060610100820152606061012082015260606101408201526060610160820152606061018082015260606101a082015260006101c082015260006101e08201526000610200820152600061022082015260006102408201526000610260820152600061028082015282828501015201613817565b80518210156138ed5760209160051b010190565b634e487b7160e01b600052603260045260246000fd5b600382101561075a5752565b1561391657565b60405162461bcd60e51b815260206004820152600d60248201526c2737ba103832ba1037bbb732b960991b6044820152606490fd5b1561395257565b60405162461bcd60e51b815260206004820152600e60248201526d506574206e6f742061637469766560901b6044820152606490fd5b9291926001600160401b0382116118e357604051916139b1601f8201601f19166020018461356c565b82948184528183011161014a578281602093846000960137010152565b156139d65750565b60405162461bcd60e51b8152602060048201529081906139fa9060248301906132b1565b0390fd5b613a09913691613988565b80519060028210159182613ad0575b5060405191835192806020860194806020830190613a36918861328e565b8101602081016e081b195b99dd1a081a5b9d985b1a59608a1b90520360200160101981018252600f01613a69908261356c565b613a72916139ce565b613a7b90613b93565b159160405191829151908160208401613a939261328e565b8101602081016f2063616e6e6f7420626520626c616e6b60801b905203602001600f1981018252601001613ac7908261356c565b6135c6916139ce565b60321015915038613a18565b9081518110156138ed570160200190565b6005815110613b8d5760008091815b8151831015613b7b57600160fe1b6001600160f81b0319613b1d8585613adc565b511603613b3c57613b3457600180925b0191613afc565b505050600090565b918280613b5a575b613b51575b600190613b2d565b60019350613b49565b50601760f91b6001600160f81b0319613b738385613adc565b511614613b44565b9291505081613b88575090565b905090565b50600090565b60005b8151811015613bcd57600160fd1b6001600160f81b0319613bb78385613adc565b511603613bc657600101613b96565b5050600090565b505060019056fea2646970667358221220464c1499d05463235cee4c6c8c76a6b2eb19c4576859be90b46e0684f86d7d3f64736f6c634300081c0033",
              "opcodes": "PUSH2 0x460 DUP1 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x14 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0xB5D39FA EQ PUSH2 0x323E JUMPI POP DUP1 PUSH4 0x1850E3A7 EQ PUSH2 0x3212 JUMPI DUP1 PUSH4 0x3F26DECD EQ PUSH2 0x30AF JUMPI DUP1 PUSH4 0x3FA8BE32 EQ PUSH2 0x308C JUMPI DUP1 PUSH4 0x403F8CC7 EQ PUSH2 0x306E JUMPI DUP1 PUSH4 0x44021AD7 EQ PUSH2 0x2D32 JUMPI DUP1 PUSH4 0x465C66E9 EQ PUSH2 0x2D03 JUMPI DUP1 PUSH4 0x543DF5A3 EQ PUSH2 0x2A84 JUMPI DUP1 PUSH4 0x5B236D97 EQ PUSH2 0x28B4 JUMPI DUP1 PUSH4 0x5E23985B EQ PUSH2 0x2744 JUMPI DUP1 PUSH4 0x75829DEF EQ PUSH2 0x267C JUMPI DUP1 PUSH4 0x8B504C17 EQ PUSH2 0x260E JUMPI DUP1 PUSH4 0x9DC5AC72 EQ PUSH2 0x25E9 JUMPI DUP1 PUSH4 0xA06E0061 EQ PUSH2 0x24C6 JUMPI DUP1 PUSH4 0xB3035B64 EQ PUSH2 0x2362 JUMPI DUP1 PUSH4 0xCE2ED0E2 EQ PUSH2 0xA16 JUMPI DUP1 PUSH4 0xCFB869BF EQ PUSH2 0x79C JUMPI DUP1 PUSH4 0xD25A6F05 EQ PUSH2 0x770 JUMPI DUP1 PUSH4 0xD32BFB6C EQ PUSH2 0x437 JUMPI DUP1 PUSH4 0xD74A48A4 EQ PUSH2 0x40B JUMPI DUP1 PUSH4 0xD89FD4B4 EQ PUSH2 0x17E JUMPI DUP1 PUSH4 0xEE7AFB1C EQ PUSH2 0x14F JUMPI PUSH4 0xF851A440 EQ PUSH2 0x11D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x14A JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x14A JUMPI PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD PUSH1 0x8 SWAP2 SWAP1 SWAP2 SHR PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x14A JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x14A JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH20 0x62B8B11039FCFE5AB0C56E502B1C372A3D2A9C7A DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x14A JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x14A JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 SLOAD DUP2 LT PUSH2 0x1A0 SWAP1 PUSH2 0x3681 JUMP JUMPDEST PUSH1 0x0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL PUSH1 0x1 SWAP1 SUB PUSH1 0x1 DUP4 ADD SLOAD AND PUSH1 0x5 DUP4 ADD SLOAD SWAP2 PUSH1 0xD DUP5 ADD SLOAD SWAP4 PUSH1 0xE DUP2 ADD SLOAD SWAP3 PUSH1 0x1 PUSH1 0xA0 SHL PUSH1 0x1 SWAP1 SUB PUSH1 0xF DUP4 ADD SLOAD AND SWAP5 PUSH1 0x2 DUP4 ADD PUSH2 0x1ED SWAP1 PUSH2 0x358D JUMP JUMPDEST SWAP1 PUSH2 0x1FA PUSH1 0x3 DUP6 ADD PUSH2 0x358D JUMP JUMPDEST SWAP1 PUSH2 0x207 PUSH1 0x4 DUP7 ADD PUSH2 0x358D JUMP JUMPDEST SWAP1 PUSH2 0x214 PUSH1 0x6 DUP8 ADD PUSH2 0x358D JUMP JUMPDEST SWAP1 PUSH2 0x221 PUSH1 0x7 DUP9 ADD PUSH2 0x358D JUMP JUMPDEST SWAP3 PUSH2 0x22E PUSH1 0x8 DUP10 ADD PUSH2 0x358D JUMP JUMPDEST SWAP5 PUSH2 0x23B PUSH1 0x9 DUP11 ADD PUSH2 0x358D JUMP JUMPDEST SWAP7 PUSH2 0x248 PUSH1 0xA DUP12 ADD PUSH2 0x358D JUMP JUMPDEST SWAP9 PUSH2 0x255 PUSH1 0xB DUP13 ADD PUSH2 0x358D JUMP JUMPDEST SWAP11 PUSH1 0xC ADD PUSH2 0x262 SWAP1 PUSH2 0x358D JUMP JUMPDEST SWAP12 PUSH1 0x40 MLOAD PUSH2 0x420 MSTORE PUSH2 0x420 MLOAD MSTORE PUSH2 0x420 MLOAD PUSH1 0x20 ADD MSTORE PUSH2 0x420 MLOAD PUSH1 0x40 ADD PUSH2 0x2A0 SWAP1 MSTORE PUSH2 0x420 MLOAD PUSH2 0x2A0 ADD PUSH2 0x294 SWAP2 PUSH2 0x32B1 JUMP JUMPDEST PUSH2 0x420 MLOAD DUP2 SUB PUSH2 0x420 MLOAD PUSH1 0x60 ADD MSTORE PUSH2 0x2AB SWAP2 PUSH2 0x32B1 JUMP JUMPDEST PUSH2 0x420 MLOAD DUP2 SUB PUSH2 0x420 MLOAD PUSH1 0x80 ADD MSTORE PUSH2 0x2C2 SWAP2 PUSH2 0x32B1 JUMP JUMPDEST SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP2 AND PUSH2 0x420 MLOAD PUSH1 0xA0 ADD MSTORE PUSH1 0x80 SHR PUSH2 0x420 MLOAD PUSH1 0xC0 ADD MSTORE PUSH2 0x420 MLOAD DUP2 SUB PUSH2 0x420 MLOAD PUSH1 0xE0 ADD MSTORE PUSH2 0x2F7 SWAP2 PUSH2 0x32B1 JUMP JUMPDEST PUSH2 0x420 MLOAD DUP2 SUB PUSH2 0x420 MLOAD PUSH2 0x100 ADD MSTORE PUSH2 0x30F SWAP2 PUSH2 0x32B1 JUMP JUMPDEST PUSH2 0x420 MLOAD DUP2 SUB PUSH2 0x420 MLOAD PUSH2 0x120 ADD MSTORE PUSH2 0x327 SWAP2 PUSH2 0x32B1 JUMP JUMPDEST PUSH2 0x420 MLOAD DUP2 SUB PUSH2 0x420 MLOAD PUSH2 0x140 ADD MSTORE PUSH2 0x33F SWAP2 PUSH2 0x32B1 JUMP JUMPDEST PUSH2 0x420 MLOAD DUP2 SUB PUSH2 0x420 MLOAD PUSH2 0x160 ADD MSTORE PUSH2 0x357 SWAP2 PUSH2 0x32B1 JUMP JUMPDEST PUSH2 0x420 MLOAD DUP2 SUB PUSH2 0x420 MLOAD PUSH2 0x180 ADD MSTORE PUSH2 0x36F SWAP2 PUSH2 0x32B1 JUMP JUMPDEST PUSH2 0x420 MLOAD DUP2 SUB PUSH2 0x420 MLOAD PUSH2 0x1A0 ADD MSTORE PUSH2 0x387 SWAP2 PUSH2 0x32B1 JUMP JUMPDEST SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP2 AND PUSH2 0x420 MLOAD PUSH2 0x1C0 ADD MSTORE PUSH1 0x80 SHR PUSH2 0x420 MLOAD PUSH2 0x1E0 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP2 AND PUSH2 0x420 MLOAD PUSH2 0x200 ADD MSTORE PUSH2 0x420 MLOAD PUSH2 0x220 ADD DUP2 PUSH1 0x80 SHR PUSH1 0xFF AND SWAP1 PUSH2 0x3D3 SWAP2 PUSH2 0x32D6 JUMP JUMPDEST DUP1 PUSH1 0x88 SHR PUSH1 0xFF AND ISZERO ISZERO PUSH2 0x420 MLOAD PUSH2 0x240 ADD MSTORE PUSH1 0x90 SHR PUSH1 0xFF AND ISZERO ISZERO PUSH2 0x420 MLOAD PUSH2 0x260 ADD MSTORE PUSH2 0x420 MLOAD PUSH2 0x280 ADD MSTORE PUSH2 0x420 MLOAD SWAP1 SUB PUSH2 0x420 MLOAD RETURN JUMPDEST CALLVALUE PUSH2 0x14A JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x14A JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x14A JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x14A JUMPI PUSH1 0x4 CALLDATALOAD DUP1 PUSH1 0x0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH2 0x46F PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x1 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD AND CALLER EQ PUSH2 0x390F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SLOAD PUSH2 0x481 PUSH1 0xFF DUP3 AND ISZERO PUSH2 0x36C2 JUMP JUMPDEST PUSH1 0xFF NOT AND OR PUSH1 0x0 SSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0xE DUP3 ADD DUP1 SLOAD SWAP3 PUSH1 0xFF DUP5 PUSH1 0x80 SHR AND PUSH1 0x3 DUP2 LT ISZERO PUSH2 0x75A JUMPI PUSH2 0x4B9 SWAP1 ISZERO PUSH2 0x394B JUMP JUMPDEST PUSH1 0xF DUP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x715 JUMPI PUSH1 0xD ADD DUP1 SLOAD PUSH1 0x0 SWAP2 DUP3 SWAP1 SSTORE DUP3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB NOT AND DUP4 SSTORE DUP4 DUP3 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 DUP5 SWAP1 SSTORE PUSH1 0x4 SWAP1 SWAP2 MSTORE DUP3 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP1 DUP3 AND SWAP5 AND SWAP1 PUSH1 0x80 SHR DUP5 DUP1 ISZERO DUP1 ISZERO PUSH2 0x6EE JUMPI JUMPDEST POP POP DUP1 PUSH2 0x648 JUMPI JUMPDEST DUP2 PUSH2 0x588 JUMPI JUMPDEST DUP3 SLOAD PUSH1 0xFF PUSH1 0x80 SHL NOT AND PUSH1 0x1 PUSH1 0x81 SHL OR SWAP1 SWAP3 SSTORE PUSH1 0x40 DUP1 MLOAD SWAP5 DUP6 MSTORE PUSH1 0x20 DUP6 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP1 DUP4 ADD MSTORE CALLER SWAP2 PUSH32 0x5A15FED544596F86AB10D13CE99DFEB4E13095D939B5749AE220FBC4F0584636 SWAP1 DUP1 PUSH1 0x60 DUP2 ADD JUMPDEST SUB SWAP1 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE STOP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x20 DUP2 PUSH1 0x44 DUP2 PUSH1 0x0 PUSH20 0x62B8B11039FCFE5AB0C56E502B1C372A3D2A9C7A GAS CALL SWAP1 DUP2 ISZERO PUSH2 0x63C JUMPI PUSH1 0x0 SWAP2 PUSH2 0x60D JUMPI JUMPDEST POP PUSH2 0x52A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x11C9081C99599D5B990819985A5B1959 PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH2 0x62F SWAP2 POP PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x635 JUMPI JUMPDEST PUSH2 0x627 DUP2 DUP4 PUSH2 0x356C JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x3669 JUMP JUMPDEST DUP7 PUSH2 0x5D0 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x61D JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x20 DUP2 PUSH1 0x44 DUP2 PUSH1 0x0 PUSH20 0x765DE816845861E75A25FCA122BB6898B8B1282A GAS CALL SWAP1 DUP2 ISZERO PUSH2 0x63C JUMPI PUSH1 0x0 SWAP2 PUSH2 0x6CF JUMPI JUMPDEST POP PUSH2 0x524 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x18D554D1081C99599D5B990819985A5B1959 PUSH1 0x72 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH2 0x6E8 SWAP2 POP PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x635 JUMPI PUSH2 0x627 DUP2 DUP4 PUSH2 0x356C JUMP JUMPDEST DUP7 PUSH2 0x690 JUMP JUMPDEST PUSH1 0x0 SWAP1 PUSH2 0x70C JUMPI JUMPDEST PUSH1 0x0 DUP1 DUP1 SWAP4 DUP2 SWAP4 CALLER SWAP1 CALL ISZERO PUSH2 0x63C JUMPI DUP5 DUP7 PUSH2 0x51C JUMP JUMPDEST POP PUSH2 0x8FC PUSH2 0x6F6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x46696E64657220616C72656164792061737369676E6564000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST CALLVALUE PUSH2 0x14A JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x14A JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x14A JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x14A JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL PUSH1 0x1 SWAP1 SUB PUSH1 0x1 DUP4 ADD SLOAD AND SWAP2 PUSH1 0x2 DUP2 ADD PUSH2 0x7DC SWAP1 PUSH2 0x358D JUMP JUMPDEST PUSH2 0x7E8 PUSH1 0x3 DUP4 ADD PUSH2 0x358D JUMP JUMPDEST PUSH2 0x7F4 PUSH1 0x4 DUP5 ADD PUSH2 0x358D JUMP JUMPDEST PUSH1 0x5 DUP5 ADD SLOAD PUSH2 0x805 PUSH1 0x6 DUP7 ADD PUSH2 0x358D JUMP JUMPDEST PUSH2 0x811 PUSH1 0x7 DUP8 ADD PUSH2 0x358D JUMP JUMPDEST PUSH2 0x81D PUSH1 0x8 DUP9 ADD PUSH2 0x358D JUMP JUMPDEST SWAP2 PUSH2 0x82A PUSH1 0x9 DUP10 ADD PUSH2 0x358D JUMP JUMPDEST SWAP4 PUSH2 0x837 PUSH1 0xA DUP11 ADD PUSH2 0x358D JUMP JUMPDEST SWAP6 PUSH2 0x844 PUSH1 0xB DUP12 ADD PUSH2 0x358D JUMP JUMPDEST SWAP8 PUSH2 0x851 PUSH1 0xC DUP13 ADD PUSH2 0x358D JUMP JUMPDEST SWAP10 PUSH1 0xD DUP13 ADD SLOAD SWAP14 PUSH1 0xE DUP14 ADD SLOAD SWAP13 PUSH1 0x1 PUSH1 0xA0 SHL PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0xF ADD SLOAD AND SWAP14 PUSH1 0x40 MLOAD PUSH2 0x440 MSTORE PUSH2 0x440 MLOAD MSTORE PUSH2 0x440 MLOAD PUSH1 0x20 ADD MSTORE PUSH2 0x440 MLOAD PUSH1 0x40 ADD PUSH2 0x2A0 SWAP1 MSTORE PUSH2 0x440 MLOAD PUSH2 0x2A0 ADD PUSH2 0x89F SWAP2 PUSH2 0x32B1 JUMP JUMPDEST PUSH2 0x440 MLOAD DUP2 SUB PUSH2 0x440 MLOAD PUSH1 0x60 ADD MSTORE PUSH2 0x8B6 SWAP2 PUSH2 0x32B1 JUMP JUMPDEST PUSH2 0x440 MLOAD DUP2 SUB PUSH2 0x440 MLOAD PUSH1 0x80 ADD MSTORE PUSH2 0x8CD SWAP2 PUSH2 0x32B1 JUMP JUMPDEST SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP2 AND PUSH2 0x440 MLOAD PUSH1 0xA0 ADD MSTORE PUSH1 0x80 SHR PUSH2 0x440 MLOAD PUSH1 0xC0 ADD MSTORE PUSH2 0x440 MLOAD DUP2 SUB PUSH2 0x440 MLOAD PUSH1 0xE0 ADD MSTORE PUSH2 0x902 SWAP2 PUSH2 0x32B1 JUMP JUMPDEST PUSH2 0x440 MLOAD DUP2 SUB PUSH2 0x440 MLOAD PUSH2 0x100 ADD MSTORE PUSH2 0x91A SWAP2 PUSH2 0x32B1 JUMP JUMPDEST PUSH2 0x440 MLOAD DUP2 SUB PUSH2 0x440 MLOAD PUSH2 0x120 ADD MSTORE PUSH2 0x932 SWAP2 PUSH2 0x32B1 JUMP JUMPDEST PUSH2 0x440 MLOAD DUP2 SUB PUSH2 0x440 MLOAD PUSH2 0x140 ADD MSTORE PUSH2 0x94A SWAP2 PUSH2 0x32B1 JUMP JUMPDEST PUSH2 0x440 MLOAD DUP2 SUB PUSH2 0x440 MLOAD PUSH2 0x160 ADD MSTORE PUSH2 0x962 SWAP2 PUSH2 0x32B1 JUMP JUMPDEST PUSH2 0x440 MLOAD DUP2 SUB PUSH2 0x440 MLOAD PUSH2 0x180 ADD MSTORE PUSH2 0x97A SWAP2 PUSH2 0x32B1 JUMP JUMPDEST PUSH2 0x440 MLOAD DUP2 SUB PUSH2 0x440 MLOAD PUSH2 0x1A0 ADD MSTORE PUSH2 0x992 SWAP2 PUSH2 0x32B1 JUMP JUMPDEST SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP2 AND PUSH2 0x440 MLOAD PUSH2 0x1C0 ADD MSTORE PUSH1 0x80 SHR PUSH2 0x440 MLOAD PUSH2 0x1E0 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP2 AND PUSH2 0x440 MLOAD PUSH2 0x200 ADD MSTORE PUSH2 0x440 MLOAD PUSH2 0x220 ADD DUP2 PUSH1 0x80 SHR PUSH1 0xFF AND SWAP1 PUSH2 0x9DE SWAP2 PUSH2 0x32D6 JUMP JUMPDEST DUP1 PUSH1 0x88 SHR PUSH1 0xFF AND ISZERO ISZERO PUSH2 0x440 MLOAD PUSH2 0x240 ADD MSTORE PUSH1 0x90 SHR PUSH1 0xFF AND ISZERO ISZERO PUSH2 0x440 MLOAD PUSH2 0x260 ADD MSTORE PUSH2 0x440 MLOAD PUSH2 0x280 ADD MSTORE PUSH2 0x440 MLOAD SWAP1 SUB PUSH2 0x440 MLOAD RETURN JUMPDEST PUSH2 0x1C0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x14A JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x14A JUMPI PUSH2 0xA42 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x34E9 JUMP JUMPDEST PUSH2 0x2C0 MSTORE PUSH2 0x3A0 MSTORE PUSH1 0x24 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x14A JUMPI PUSH2 0xA69 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x34E9 JUMP JUMPDEST PUSH2 0x320 MSTORE PUSH2 0x400 MSTORE PUSH1 0x44 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x14A JUMPI PUSH2 0xA90 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x34E9 JUMP JUMPDEST PUSH2 0x120 MSTORE PUSH2 0x160 MSTORE PUSH1 0x64 CALLDATALOAD PUSH2 0x1A0 DUP2 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP2 AND SWAP1 SUB PUSH2 0x14A JUMPI PUSH1 0x84 CALLDATALOAD PUSH2 0x1C0 DUP2 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP2 AND SWAP1 SUB PUSH2 0x14A JUMPI PUSH1 0xA4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x14A JUMPI PUSH2 0xAE9 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x34E9 JUMP JUMPDEST PUSH2 0x220 MSTORE PUSH2 0x240 MSTORE PUSH1 0xC4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x14A JUMPI PUSH2 0xB10 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x34E9 JUMP JUMPDEST PUSH2 0x280 MSTORE PUSH2 0x2A0 MSTORE PUSH1 0xE4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x14A JUMPI PUSH2 0xB37 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x34E9 JUMP JUMPDEST PUSH2 0x3E0 MSTORE PUSH2 0x340 MSTORE PUSH2 0x104 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x14A JUMPI PUSH2 0xB5F SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x34E9 JUMP JUMPDEST PUSH2 0x3C0 MSTORE PUSH2 0x380 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB PUSH2 0x124 CALLDATALOAD GT PUSH2 0x14A JUMPI PUSH2 0xB88 CALLDATASIZE PUSH2 0x124 CALLDATALOAD PUSH1 0x4 ADD PUSH2 0x34E9 JUMP JUMPDEST PUSH2 0x360 MSTORE PUSH2 0x300 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB PUSH2 0x144 CALLDATALOAD GT PUSH2 0x14A JUMPI PUSH2 0xBB1 CALLDATASIZE PUSH2 0x144 CALLDATALOAD PUSH1 0x4 ADD PUSH2 0x34E9 JUMP JUMPDEST PUSH2 0x2E0 MSTORE PUSH2 0x260 MSTORE PUSH2 0x164 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x14A JUMPI PUSH2 0xBD9 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x34E9 JUMP JUMPDEST PUSH2 0x200 MSTORE PUSH2 0x1E0 MSTORE PUSH2 0x184 CALLDATALOAD PUSH2 0x180 DUP2 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP2 AND SWAP1 SUB PUSH2 0x14A JUMPI PUSH2 0x1A4 CALLDATALOAD PUSH2 0x140 DUP2 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP2 AND SWAP1 SUB PUSH2 0x14A JUMPI PUSH1 0x1 PUSH1 0x0 SLOAD PUSH2 0xC27 PUSH1 0xFF DUP3 AND ISZERO PUSH2 0x36C2 JUMP JUMPDEST PUSH1 0xFF NOT AND OR PUSH1 0x0 SSTORE PUSH8 0x8AC7230489E80000 CALLVALUE GT PUSH2 0x2325 JUMPI PUSH10 0x21E19E0C9BAB2400000 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB PUSH2 0x180 MLOAD AND GT PUSH2 0x22E8 JUMPI PUSH10 0x21E19E0C9BAB2400000 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB PUSH2 0x140 MLOAD AND GT PUSH2 0x22AD JUMPI CALLVALUE ISZERO DUP1 ISZERO SWAP1 PUSH2 0x2298 JUMPI JUMPDEST DUP1 ISZERO PUSH2 0x2283 JUMPI JUMPDEST ISZERO PUSH2 0x224C JUMPI PUSH1 0x40 PUSH2 0x100 DUP2 SWAP1 MSTORE DUP1 MLOAD PUSH2 0xCC4 SWAP2 PUSH2 0xCA6 SWAP1 DUP3 PUSH2 0x356C JUMP JUMPDEST PUSH1 0x4 DUP2 MSTORE PUSH4 0x4E616D65 PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0x2C0 MLOAD PUSH2 0x3A0 MLOAD PUSH2 0x39FE JUMP JUMPDEST PUSH2 0x100 MLOAD DUP1 MLOAD PUSH2 0xCF7 SWAP2 PUSH2 0xCD8 SWAP1 DUP3 PUSH2 0x356C JUMP JUMPDEST PUSH1 0x5 DUP2 MSTORE PUSH5 0x109C995959 PUSH1 0xDA SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0x320 MLOAD PUSH2 0x400 MLOAD PUSH2 0x39FE JUMP JUMPDEST PUSH2 0x100 MLOAD DUP1 MLOAD PUSH2 0xDE2 SWAP2 PUSH2 0xD0B SWAP1 DUP3 PUSH2 0x356C JUMP JUMPDEST PUSH1 0x6 DUP2 MSTORE PUSH6 0x23B2B73232B9 PUSH1 0xD1 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0xD97 PUSH2 0xD32 CALLDATASIZE PUSH2 0x120 MLOAD PUSH2 0x160 MLOAD PUSH2 0x3988 JUMP JUMPDEST PUSH2 0xD92 DUP2 MLOAD PUSH1 0x1 DUP2 LT ISZERO SWAP1 DUP2 PUSH2 0x2240 JUMPI JUMPDEST POP PUSH2 0x100 MLOAD MLOAD SWAP1 PUSH2 0xD8D PUSH1 0xF PUSH1 0x20 DUP5 DUP10 MLOAD PUSH2 0xD64 DUP2 DUP13 DUP6 DUP1 DUP7 ADD SWAP2 ADD PUSH2 0x328E JUMP JUMPDEST DUP2 ADD PUSH15 0x81B195B99DD1A081A5B9D985B1A59 PUSH1 0x8A SHL DUP4 DUP3 ADD MSTORE SUB ADD PUSH1 0x10 NOT DUP2 ADD DUP6 MSTORE ADD DUP4 PUSH2 0x356C JUMP JUMPDEST PUSH2 0x39CE JUMP JUMPDEST PUSH2 0x3B93 JUMP JUMPDEST ISZERO PUSH2 0xD8D PUSH1 0x10 PUSH1 0x20 PUSH2 0x100 MLOAD MLOAD DUP6 PUSH2 0xDB8 DUP3 SWAP8 MLOAD DUP1 SWAP3 DUP6 DUP1 DUP7 ADD SWAP2 ADD PUSH2 0x328E JUMP JUMPDEST DUP2 ADD PUSH16 0x2063616E6E6F7420626520626C616E6B PUSH1 0x80 SHL DUP4 DUP3 ADD MSTORE SUB ADD PUSH1 0xF NOT DUP2 ADD DUP6 MSTORE ADD DUP4 PUSH2 0x356C JUMP JUMPDEST PUSH2 0x100 MLOAD POP PUSH2 0xEA1 PUSH2 0xDB8 PUSH2 0x100 MLOAD MLOAD PUSH2 0xDFF PUSH2 0x100 MLOAD DUP3 PUSH2 0x356C JUMP JUMPDEST PUSH1 0xB DUP2 MSTORE PUSH2 0xD8D PUSH1 0x10 PUSH1 0x20 DUP1 DUP5 ADD SWAP4 PUSH11 0x2232B9B1B934B83A34B7B7 PUSH1 0xA9 SHL DUP6 MSTORE PUSH2 0xE8B PUSH2 0xE33 CALLDATASIZE PUSH2 0x280 MLOAD PUSH2 0x2A0 MLOAD PUSH2 0x3988 JUMP JUMPDEST PUSH2 0xD92 DUP2 MLOAD PUSH1 0xA DUP2 LT ISZERO SWAP1 DUP2 PUSH2 0x2233 JUMPI JUMPDEST POP PUSH2 0x100 MLOAD MLOAD SWAP1 PUSH2 0xD8D PUSH1 0xF DUP9 DUP5 DUP14 PUSH2 0xE63 DUP12 MLOAD DUP1 SWAP3 DUP6 DUP6 ADD SWAP1 PUSH2 0x328E JUMP JUMPDEST DUP2 ADD PUSH15 0x81B195B99DD1A081A5B9D985B1A59 PUSH1 0x8A SHL DUP4 DUP3 ADD MSTORE SUB ADD DUP11 NOT DUP2 ADD DUP6 MSTORE ADD DUP4 PUSH2 0x356C JUMP JUMPDEST ISZERO SWAP5 PUSH2 0x100 MLOAD MLOAD SWAP7 DUP8 SWAP3 MLOAD DUP1 SWAP3 DUP6 DUP6 ADD SWAP1 PUSH2 0x328E JUMP JUMPDEST PUSH2 0x100 MLOAD POP PUSH2 0xF1F PUSH2 0xDB8 PUSH2 0x100 MLOAD MLOAD PUSH2 0xEBE PUSH2 0x100 MLOAD DUP3 PUSH2 0x356C JUMP JUMPDEST PUSH1 0x9 DUP2 MSTORE PUSH2 0xD8D PUSH1 0x10 PUSH1 0x20 DUP1 DUP5 ADD SWAP4 PUSH9 0x125B5859D948155493 PUSH1 0xBA SHL DUP6 MSTORE PUSH2 0xE8B PUSH2 0xEF0 CALLDATASIZE PUSH2 0x3E0 MLOAD PUSH2 0x340 MLOAD PUSH2 0x3988 JUMP JUMPDEST PUSH2 0xD92 DUP2 MLOAD PUSH1 0xA DUP2 LT ISZERO SWAP1 DUP2 PUSH2 0x2227 JUMPI POP PUSH2 0x100 MLOAD MLOAD SWAP1 PUSH2 0xD8D PUSH1 0xF DUP9 DUP5 DUP14 PUSH2 0xE63 DUP12 MLOAD DUP1 SWAP3 DUP6 DUP6 ADD SWAP1 PUSH2 0x328E JUMP JUMPDEST PUSH2 0x100 MLOAD POP PUSH2 0xF9C PUSH2 0xDB8 PUSH2 0x100 MLOAD MLOAD PUSH2 0xF3C PUSH2 0x100 MLOAD DUP3 PUSH2 0x356C JUMP JUMPDEST PUSH1 0x8 DUP2 MSTORE PUSH2 0xD8D PUSH1 0x10 PUSH1 0x20 DUP1 DUP5 ADD SWAP4 PUSH8 0x2637B1B0BA34B7B7 PUSH1 0xC1 SHL DUP6 MSTORE PUSH2 0xE8B PUSH2 0xF6D CALLDATASIZE PUSH2 0x3C0 MLOAD PUSH2 0x380 MLOAD PUSH2 0x3988 JUMP JUMPDEST PUSH2 0xD92 DUP2 MLOAD PUSH1 0x5 DUP2 LT ISZERO SWAP1 DUP2 PUSH2 0x2227 JUMPI POP PUSH2 0x100 MLOAD MLOAD SWAP1 PUSH2 0xD8D PUSH1 0xF DUP9 DUP5 DUP14 PUSH2 0xE63 DUP12 MLOAD DUP1 SWAP3 DUP6 DUP6 ADD SWAP1 PUSH2 0x328E JUMP JUMPDEST PUSH2 0x100 MLOAD POP PUSH2 0x101D PUSH2 0xDB8 PUSH2 0x100 MLOAD MLOAD PUSH2 0xFB9 PUSH2 0x100 MLOAD DUP3 PUSH2 0x356C JUMP JUMPDEST PUSH1 0xC DUP2 MSTORE PUSH2 0xD8D PUSH1 0x10 PUSH1 0x20 DUP1 DUP5 ADD SWAP4 PUSH12 0x436F6E74616374206E616D65 PUSH1 0xA0 SHL DUP6 MSTORE PUSH2 0xE8B PUSH2 0xFEE CALLDATASIZE PUSH2 0x360 MLOAD PUSH2 0x300 MLOAD PUSH2 0x3988 JUMP JUMPDEST PUSH2 0xD92 DUP2 MLOAD PUSH1 0x2 DUP2 LT ISZERO SWAP1 DUP2 PUSH2 0x221B JUMPI POP PUSH2 0x100 MLOAD MLOAD SWAP1 PUSH2 0xD8D PUSH1 0xF DUP9 DUP5 DUP14 PUSH2 0xE63 DUP12 MLOAD DUP1 SWAP3 DUP6 DUP6 ADD SWAP1 PUSH2 0x328E JUMP JUMPDEST PUSH2 0x100 MLOAD POP PUSH2 0x109F PUSH2 0xDB8 PUSH2 0x100 MLOAD MLOAD PUSH2 0x103A PUSH2 0x100 MLOAD DUP3 PUSH2 0x356C JUMP JUMPDEST PUSH1 0xD DUP2 MSTORE PUSH2 0xD8D PUSH1 0x10 PUSH1 0x20 DUP1 DUP5 ADD SWAP4 PUSH13 0x436F6E746163742070686F6E65 PUSH1 0x98 SHL DUP6 MSTORE PUSH2 0xE8B PUSH2 0x1070 CALLDATASIZE PUSH2 0x2E0 MLOAD PUSH2 0x260 MLOAD PUSH2 0x3988 JUMP JUMPDEST PUSH2 0xD92 DUP2 MLOAD PUSH1 0x5 DUP2 LT ISZERO SWAP1 DUP2 PUSH2 0x220F JUMPI POP PUSH2 0x100 MLOAD MLOAD SWAP1 PUSH2 0xD8D PUSH1 0xF DUP9 DUP5 DUP14 PUSH2 0xE63 DUP12 MLOAD DUP1 SWAP3 DUP6 DUP6 ADD SWAP1 PUSH2 0x328E JUMP JUMPDEST PUSH1 0xA PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB PUSH2 0x1A0 MLOAD AND LT ISZERO DUP1 PUSH2 0x21F8 JUMPI JUMPDEST ISZERO PUSH2 0x21C2 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB PUSH2 0x1C0 MLOAD AND LT ISZERO DUP1 PUSH2 0x21AB JUMPI JUMPDEST ISZERO PUSH2 0x2176 JUMPI PUSH2 0x10F0 PUSH2 0x10EB CALLDATASIZE PUSH2 0x200 MLOAD PUSH2 0x1E0 MLOAD PUSH2 0x3988 JUMP JUMPDEST PUSH2 0x3AED JUMP JUMPDEST ISZERO PUSH2 0x213F JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB PUSH2 0x140 MLOAD AND PUSH2 0x2097 JUMPI JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB PUSH2 0x180 MLOAD AND PUSH2 0x1FB6 JUMPI JUMPDEST PUSH1 0x1 SLOAD PUSH1 0xE0 MSTORE PUSH2 0x100 MLOAD MLOAD PUSH1 0xC0 MSTORE PUSH2 0x1132 PUSH1 0xC0 MLOAD PUSH2 0x3550 JUMP JUMPDEST PUSH1 0xE0 MLOAD PUSH1 0xC0 MLOAD MSTORE CALLER PUSH1 0x20 PUSH1 0xC0 MLOAD ADD MSTORE PUSH2 0x1152 CALLDATASIZE PUSH2 0x2C0 MLOAD PUSH2 0x3A0 MLOAD PUSH2 0x3988 JUMP JUMPDEST PUSH2 0x100 MLOAD PUSH1 0xC0 MLOAD ADD MSTORE PUSH2 0x116C CALLDATASIZE PUSH2 0x320 MLOAD PUSH2 0x400 MLOAD PUSH2 0x3988 JUMP JUMPDEST PUSH1 0x60 PUSH1 0xC0 MLOAD ADD MSTORE PUSH2 0x1184 CALLDATASIZE PUSH2 0x120 MLOAD PUSH2 0x160 MLOAD PUSH2 0x3988 JUMP JUMPDEST PUSH1 0x80 PUSH1 0xC0 MLOAD ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB PUSH2 0x1A0 MLOAD AND PUSH1 0xA0 PUSH1 0xC0 MLOAD ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB PUSH2 0x1C0 MLOAD AND PUSH1 0xC0 DUP1 MLOAD ADD MSTORE PUSH2 0x11C3 CALLDATASIZE PUSH2 0x220 MLOAD PUSH2 0x240 MLOAD PUSH2 0x3988 JUMP JUMPDEST PUSH1 0xE0 PUSH1 0xC0 MLOAD ADD MSTORE PUSH2 0x11DB CALLDATASIZE PUSH2 0x280 MLOAD PUSH2 0x2A0 MLOAD PUSH2 0x3988 JUMP JUMPDEST PUSH2 0x100 PUSH1 0xC0 MLOAD ADD MSTORE PUSH2 0x11F4 CALLDATASIZE PUSH2 0x3E0 MLOAD PUSH2 0x340 MLOAD PUSH2 0x3988 JUMP JUMPDEST PUSH2 0x120 PUSH1 0xC0 MLOAD ADD MSTORE PUSH2 0x120D CALLDATASIZE PUSH2 0x3C0 MLOAD PUSH2 0x380 MLOAD PUSH2 0x3988 JUMP JUMPDEST PUSH2 0x140 PUSH1 0xC0 MLOAD ADD MSTORE PUSH2 0x1226 CALLDATASIZE PUSH2 0x360 MLOAD PUSH2 0x300 MLOAD PUSH2 0x3988 JUMP JUMPDEST PUSH2 0x160 PUSH1 0xC0 MLOAD ADD MSTORE PUSH2 0x123F CALLDATASIZE PUSH2 0x2E0 MLOAD PUSH2 0x260 MLOAD PUSH2 0x3988 JUMP JUMPDEST PUSH2 0x180 PUSH1 0xC0 MLOAD ADD MSTORE PUSH2 0x1258 CALLDATASIZE PUSH2 0x200 MLOAD PUSH2 0x1E0 MLOAD PUSH2 0x3988 JUMP JUMPDEST PUSH2 0x1A0 PUSH1 0xC0 MLOAD ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB CALLVALUE AND PUSH2 0x1C0 PUSH1 0xC0 MLOAD ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB PUSH2 0x180 MLOAD AND PUSH2 0x1E0 PUSH1 0xC0 MLOAD ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB PUSH2 0x140 MLOAD AND PUSH2 0x200 PUSH1 0xC0 MLOAD ADD MSTORE PUSH1 0x0 PUSH2 0x220 PUSH1 0xC0 MLOAD ADD MSTORE PUSH1 0x0 PUSH2 0x240 PUSH1 0xC0 MLOAD ADD MSTORE PUSH1 0x0 PUSH2 0x260 PUSH1 0xC0 MLOAD ADD MSTORE PUSH1 0x0 PUSH2 0x280 PUSH1 0xC0 MLOAD ADD MSTORE PUSH1 0xE0 MLOAD PUSH1 0x0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH2 0x100 MLOAD PUSH1 0x0 KECCAK256 PUSH1 0xC0 MLOAD MLOAD DUP2 SSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x20 PUSH1 0xC0 MLOAD ADD MLOAD AND PUSH1 0x1 DUP3 ADD SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0xA0 SHL DUP3 SLOAD AND OR SWAP1 SSTORE PUSH2 0x100 MLOAD PUSH1 0xC0 MLOAD ADD MLOAD DUP1 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x18E3 JUMPI DUP2 SWAP1 PUSH2 0x1337 PUSH1 0x2 DUP6 ADD SLOAD PUSH2 0x3516 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x1F63 JUMPI JUMPDEST POP PUSH1 0x20 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x1EF2 JUMPI PUSH1 0x0 SWAP3 PUSH2 0x1EE7 JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0x2 DUP3 ADD SSTORE JUMPDEST PUSH1 0x60 PUSH1 0xC0 MLOAD ADD MLOAD DUP1 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x18E3 JUMPI DUP2 SWAP1 PUSH2 0x1396 PUSH1 0x3 DUP6 ADD SLOAD PUSH2 0x3516 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x1E94 JUMPI JUMPDEST POP PUSH1 0x20 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x1E23 JUMPI PUSH1 0x0 SWAP3 PUSH2 0x1E18 JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0x3 DUP3 ADD SSTORE JUMPDEST PUSH1 0x80 PUSH1 0xC0 MLOAD ADD MLOAD DUP1 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x18E3 JUMPI DUP2 SWAP1 PUSH2 0x13F5 PUSH1 0x4 DUP6 ADD SLOAD PUSH2 0x3516 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x1DC5 JUMPI JUMPDEST POP PUSH1 0x20 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x1D54 JUMPI PUSH1 0x0 SWAP3 PUSH2 0x1D49 JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0x4 DUP3 ADD SSTORE JUMPDEST PUSH1 0xC0 DUP1 MLOAD PUSH1 0xA0 DUP2 ADD MLOAD SWAP2 ADD MLOAD PUSH1 0x80 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB SWAP2 SWAP1 SWAP2 AND OR PUSH1 0x5 DUP3 ADD SSTORE PUSH1 0x6 DUP2 ADD SWAP1 PUSH1 0xE0 PUSH1 0xC0 MLOAD ADD MLOAD SWAP2 DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x18E3 JUMPI PUSH2 0x147F DUP3 SLOAD PUSH2 0x3516 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x1D01 JUMPI JUMPDEST POP PUSH1 0x20 PUSH1 0x1F DUP3 GT PUSH1 0x1 EQ PUSH2 0x1C9C JUMPI DUP2 SWAP3 SWAP4 SWAP5 PUSH1 0x0 SWAP3 PUSH2 0x1C91 JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR SWAP1 SSTORE JUMPDEST PUSH1 0x7 DUP2 ADD SWAP1 PUSH2 0x100 PUSH1 0xC0 MLOAD ADD MLOAD SWAP2 DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x18E3 JUMPI PUSH2 0x14DF DUP3 SLOAD PUSH2 0x3516 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x1C49 JUMPI JUMPDEST POP PUSH1 0x20 PUSH1 0x1F DUP3 GT PUSH1 0x1 EQ PUSH2 0x1BE4 JUMPI DUP2 SWAP3 SWAP4 SWAP5 PUSH1 0x0 SWAP3 PUSH2 0x1BD9 JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR SWAP1 SSTORE JUMPDEST PUSH1 0x8 DUP2 ADD SWAP1 PUSH2 0x120 PUSH1 0xC0 MLOAD ADD MLOAD SWAP2 DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x18E3 JUMPI PUSH2 0x153F DUP3 SLOAD PUSH2 0x3516 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x1B91 JUMPI JUMPDEST POP PUSH1 0x20 PUSH1 0x1F DUP3 GT PUSH1 0x1 EQ PUSH2 0x1B2C JUMPI DUP2 SWAP3 SWAP4 SWAP5 PUSH1 0x0 SWAP3 PUSH2 0x1B21 JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR SWAP1 SSTORE JUMPDEST PUSH1 0x9 DUP2 ADD SWAP1 PUSH2 0x140 PUSH1 0xC0 MLOAD ADD MLOAD SWAP2 DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x18E3 JUMPI PUSH2 0x159F DUP3 SLOAD PUSH2 0x3516 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x1AD9 JUMPI JUMPDEST POP PUSH1 0x20 PUSH1 0x1F DUP3 GT PUSH1 0x1 EQ PUSH2 0x1A74 JUMPI DUP2 SWAP3 SWAP4 SWAP5 PUSH1 0x0 SWAP3 PUSH2 0x1A69 JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR SWAP1 SSTORE JUMPDEST PUSH1 0xA DUP2 ADD SWAP1 PUSH2 0x160 PUSH1 0xC0 MLOAD ADD MLOAD SWAP2 DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x18E3 JUMPI PUSH2 0x15FF DUP3 SLOAD PUSH2 0x3516 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x1A21 JUMPI JUMPDEST POP PUSH1 0x20 PUSH1 0x1F DUP3 GT PUSH1 0x1 EQ PUSH2 0x19BC JUMPI DUP2 SWAP3 SWAP4 SWAP5 PUSH1 0x0 SWAP3 PUSH2 0x19B1 JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR SWAP1 SSTORE JUMPDEST PUSH1 0xB DUP2 ADD SWAP1 PUSH2 0x180 PUSH1 0xC0 MLOAD ADD MLOAD SWAP2 DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x18E3 JUMPI PUSH2 0x165F DUP3 SLOAD PUSH2 0x3516 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x1969 JUMPI JUMPDEST POP PUSH1 0x20 PUSH1 0x1F DUP3 GT PUSH1 0x1 EQ PUSH2 0x1904 JUMPI DUP2 SWAP3 SWAP4 SWAP5 PUSH1 0x0 SWAP3 PUSH2 0x18F9 JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR SWAP1 SSTORE JUMPDEST PUSH1 0xC DUP2 ADD SWAP1 PUSH2 0x1A0 PUSH1 0xC0 MLOAD ADD MLOAD SWAP2 DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x18E3 JUMPI PUSH2 0x16BF DUP3 SLOAD PUSH2 0x3516 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x189B JUMPI JUMPDEST POP PUSH1 0x20 PUSH1 0x1F DUP3 GT PUSH1 0x1 EQ PUSH2 0x1836 JUMPI DUP2 SWAP3 SWAP4 SWAP5 PUSH1 0x0 SWAP3 PUSH2 0x182B JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR SWAP1 SSTORE JUMPDEST PUSH1 0xC0 MLOAD PUSH2 0x1C0 DUP2 ADD MLOAD PUSH2 0x1E0 SWAP1 SWAP2 ADD MLOAD PUSH1 0x80 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB SWAP2 SWAP1 SWAP2 AND OR PUSH1 0xD DUP3 ADD SSTORE PUSH1 0xE DUP2 ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP1 PUSH2 0x200 PUSH1 0xC0 MLOAD ADD MLOAD AND AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB NOT DUP4 SLOAD AND OR DUP3 SSTORE PUSH2 0x220 PUSH1 0xC0 MLOAD ADD MLOAD SWAP2 PUSH1 0x3 DUP4 LT ISZERO PUSH2 0x75A JUMPI DUP1 SLOAD PUSH1 0xC0 MLOAD PUSH2 0x240 DUP2 ADD MLOAD PUSH2 0x260 DUP3 ADD MLOAD PUSH3 0xFFFFFF PUSH1 0x80 SHL NOT SWAP1 SWAP4 AND PUSH1 0x80 SWAP7 SWAP1 SWAP7 SHL PUSH1 0xFF PUSH1 0x80 SHL AND SWAP6 SWAP1 SWAP6 OR SWAP5 ISZERO ISZERO PUSH1 0x88 SHL PUSH1 0xFF PUSH1 0x88 SHL AND SWAP5 SWAP1 SWAP5 OR SWAP1 ISZERO ISZERO PUSH1 0x90 SHL PUSH1 0xFF PUSH1 0x90 SHL AND OR SWAP1 SSTORE PUSH2 0x280 SWAP1 SWAP2 ADD MLOAD PUSH1 0xF SWAP2 SWAP1 SWAP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x1 DUP1 SLOAD PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH2 0x100 MLOAD DUP2 KECCAK256 TIMESTAMP SWAP1 SSTORE SWAP1 SLOAD PUSH2 0x181D SWAP1 CALLER DUP2 PUSH32 0xF6BE169E9242DB299E4065F846C02E09B60F1421201248FE94D6F552E8C8BD44 DUP6 DUP1 LOG3 PUSH2 0x3792 JUMP JUMPDEST PUSH1 0x1 SSTORE DUP1 SLOAD PUSH1 0xFF NOT AND DUP2 SSTORE DUP1 RETURN JUMPDEST ADD MLOAD SWAP1 POP DUP5 DUP1 PUSH2 0x16E2 JUMP JUMPDEST PUSH1 0x1F NOT DUP3 AND SWAP1 DUP4 PUSH1 0x0 MSTORE DUP1 PUSH1 0x0 KECCAK256 SWAP2 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x1883 JUMPI POP SWAP6 DUP4 PUSH1 0x1 SWAP6 SWAP7 SWAP8 LT PUSH2 0x186A JUMPI JUMPDEST POP POP POP DUP2 SHL ADD SWAP1 SSTORE PUSH2 0x16F7 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP5 DUP1 DUP1 PUSH2 0x185D JUMP JUMPDEST SWAP2 SWAP3 PUSH1 0x20 PUSH1 0x1 DUP2 SWAP3 DUP7 DUP12 ADD MLOAD DUP2 SSTORE ADD SWAP5 ADD SWAP3 ADD PUSH2 0x1848 JUMP JUMPDEST DUP3 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP4 ADD PUSH1 0x5 SHR DUP2 ADD SWAP2 PUSH1 0x20 DUP5 LT PUSH2 0x18D9 JUMPI JUMPDEST PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP1 JUMPDEST DUP2 DUP2 LT PUSH2 0x18CD JUMPI POP PUSH2 0x16C8 JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x18C0 JUMP JUMPDEST SWAP1 SWAP2 POP DUP2 SWAP1 PUSH2 0x18B7 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADD MLOAD SWAP1 POP DUP5 DUP1 PUSH2 0x1682 JUMP JUMPDEST PUSH1 0x1F NOT DUP3 AND SWAP1 DUP4 PUSH1 0x0 MSTORE DUP1 PUSH1 0x0 KECCAK256 SWAP2 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x1951 JUMPI POP SWAP6 DUP4 PUSH1 0x1 SWAP6 SWAP7 SWAP8 LT PUSH2 0x1938 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD SWAP1 SSTORE PUSH2 0x1697 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP5 DUP1 DUP1 PUSH2 0x192B JUMP JUMPDEST SWAP2 SWAP3 PUSH1 0x20 PUSH1 0x1 DUP2 SWAP3 DUP7 DUP12 ADD MLOAD DUP2 SSTORE ADD SWAP5 ADD SWAP3 ADD PUSH2 0x1916 JUMP JUMPDEST DUP3 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP4 ADD PUSH1 0x5 SHR DUP2 ADD SWAP2 PUSH1 0x20 DUP5 LT PUSH2 0x19A7 JUMPI JUMPDEST PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP1 JUMPDEST DUP2 DUP2 LT PUSH2 0x199B JUMPI POP PUSH2 0x1668 JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x198E JUMP JUMPDEST SWAP1 SWAP2 POP DUP2 SWAP1 PUSH2 0x1985 JUMP JUMPDEST ADD MLOAD SWAP1 POP DUP5 DUP1 PUSH2 0x1622 JUMP JUMPDEST PUSH1 0x1F NOT DUP3 AND SWAP1 DUP4 PUSH1 0x0 MSTORE DUP1 PUSH1 0x0 KECCAK256 SWAP2 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x1A09 JUMPI POP SWAP6 DUP4 PUSH1 0x1 SWAP6 SWAP7 SWAP8 LT PUSH2 0x19F0 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD SWAP1 SSTORE PUSH2 0x1637 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP5 DUP1 DUP1 PUSH2 0x19E3 JUMP JUMPDEST SWAP2 SWAP3 PUSH1 0x20 PUSH1 0x1 DUP2 SWAP3 DUP7 DUP12 ADD MLOAD DUP2 SSTORE ADD SWAP5 ADD SWAP3 ADD PUSH2 0x19CE JUMP JUMPDEST DUP3 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP4 ADD PUSH1 0x5 SHR DUP2 ADD SWAP2 PUSH1 0x20 DUP5 LT PUSH2 0x1A5F JUMPI JUMPDEST PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP1 JUMPDEST DUP2 DUP2 LT PUSH2 0x1A53 JUMPI POP PUSH2 0x1608 JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x1A46 JUMP JUMPDEST SWAP1 SWAP2 POP DUP2 SWAP1 PUSH2 0x1A3D JUMP JUMPDEST ADD MLOAD SWAP1 POP DUP5 DUP1 PUSH2 0x15C2 JUMP JUMPDEST PUSH1 0x1F NOT DUP3 AND SWAP1 DUP4 PUSH1 0x0 MSTORE DUP1 PUSH1 0x0 KECCAK256 SWAP2 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x1AC1 JUMPI POP SWAP6 DUP4 PUSH1 0x1 SWAP6 SWAP7 SWAP8 LT PUSH2 0x1AA8 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD SWAP1 SSTORE PUSH2 0x15D7 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP5 DUP1 DUP1 PUSH2 0x1A9B JUMP JUMPDEST SWAP2 SWAP3 PUSH1 0x20 PUSH1 0x1 DUP2 SWAP3 DUP7 DUP12 ADD MLOAD DUP2 SSTORE ADD SWAP5 ADD SWAP3 ADD PUSH2 0x1A86 JUMP JUMPDEST DUP3 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP4 ADD PUSH1 0x5 SHR DUP2 ADD SWAP2 PUSH1 0x20 DUP5 LT PUSH2 0x1B17 JUMPI JUMPDEST PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP1 JUMPDEST DUP2 DUP2 LT PUSH2 0x1B0B JUMPI POP PUSH2 0x15A8 JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x1AFE JUMP JUMPDEST SWAP1 SWAP2 POP DUP2 SWAP1 PUSH2 0x1AF5 JUMP JUMPDEST ADD MLOAD SWAP1 POP DUP5 DUP1 PUSH2 0x1562 JUMP JUMPDEST PUSH1 0x1F NOT DUP3 AND SWAP1 DUP4 PUSH1 0x0 MSTORE DUP1 PUSH1 0x0 KECCAK256 SWAP2 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x1B79 JUMPI POP SWAP6 DUP4 PUSH1 0x1 SWAP6 SWAP7 SWAP8 LT PUSH2 0x1B60 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD SWAP1 SSTORE PUSH2 0x1577 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP5 DUP1 DUP1 PUSH2 0x1B53 JUMP JUMPDEST SWAP2 SWAP3 PUSH1 0x20 PUSH1 0x1 DUP2 SWAP3 DUP7 DUP12 ADD MLOAD DUP2 SSTORE ADD SWAP5 ADD SWAP3 ADD PUSH2 0x1B3E JUMP JUMPDEST DUP3 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP4 ADD PUSH1 0x5 SHR DUP2 ADD SWAP2 PUSH1 0x20 DUP5 LT PUSH2 0x1BCF JUMPI JUMPDEST PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP1 JUMPDEST DUP2 DUP2 LT PUSH2 0x1BC3 JUMPI POP PUSH2 0x1548 JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x1BB6 JUMP JUMPDEST SWAP1 SWAP2 POP DUP2 SWAP1 PUSH2 0x1BAD JUMP JUMPDEST ADD MLOAD SWAP1 POP DUP5 DUP1 PUSH2 0x1502 JUMP JUMPDEST PUSH1 0x1F NOT DUP3 AND SWAP1 DUP4 PUSH1 0x0 MSTORE DUP1 PUSH1 0x0 KECCAK256 SWAP2 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x1C31 JUMPI POP SWAP6 DUP4 PUSH1 0x1 SWAP6 SWAP7 SWAP8 LT PUSH2 0x1C18 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD SWAP1 SSTORE PUSH2 0x1517 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP5 DUP1 DUP1 PUSH2 0x1C0B JUMP JUMPDEST SWAP2 SWAP3 PUSH1 0x20 PUSH1 0x1 DUP2 SWAP3 DUP7 DUP12 ADD MLOAD DUP2 SSTORE ADD SWAP5 ADD SWAP3 ADD PUSH2 0x1BF6 JUMP JUMPDEST DUP3 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP4 ADD PUSH1 0x5 SHR DUP2 ADD SWAP2 PUSH1 0x20 DUP5 LT PUSH2 0x1C87 JUMPI JUMPDEST PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP1 JUMPDEST DUP2 DUP2 LT PUSH2 0x1C7B JUMPI POP PUSH2 0x14E8 JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x1C6E JUMP JUMPDEST SWAP1 SWAP2 POP DUP2 SWAP1 PUSH2 0x1C65 JUMP JUMPDEST ADD MLOAD SWAP1 POP DUP5 DUP1 PUSH2 0x14A2 JUMP JUMPDEST PUSH1 0x1F NOT DUP3 AND SWAP1 DUP4 PUSH1 0x0 MSTORE DUP1 PUSH1 0x0 KECCAK256 SWAP2 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x1CE9 JUMPI POP SWAP6 DUP4 PUSH1 0x1 SWAP6 SWAP7 SWAP8 LT PUSH2 0x1CD0 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD SWAP1 SSTORE PUSH2 0x14B7 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP5 DUP1 DUP1 PUSH2 0x1CC3 JUMP JUMPDEST SWAP2 SWAP3 PUSH1 0x20 PUSH1 0x1 DUP2 SWAP3 DUP7 DUP12 ADD MLOAD DUP2 SSTORE ADD SWAP5 ADD SWAP3 ADD PUSH2 0x1CAE JUMP JUMPDEST DUP3 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP4 ADD PUSH1 0x5 SHR DUP2 ADD SWAP2 PUSH1 0x20 DUP5 LT PUSH2 0x1D3F JUMPI JUMPDEST PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP1 JUMPDEST DUP2 DUP2 LT PUSH2 0x1D33 JUMPI POP PUSH2 0x1488 JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x1D26 JUMP JUMPDEST SWAP1 SWAP2 POP DUP2 SWAP1 PUSH2 0x1D1D JUMP JUMPDEST ADD MLOAD SWAP1 POP DUP4 DUP1 PUSH2 0x1415 JUMP JUMPDEST SWAP3 POP PUSH1 0x4 DUP5 ADD PUSH1 0x0 MSTORE DUP1 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x0 SWAP4 JUMPDEST PUSH1 0x1F NOT DUP5 AND DUP6 LT PUSH2 0x1DAA JUMPI PUSH1 0x1 SWAP5 POP DUP4 PUSH1 0x1F NOT DUP2 AND LT PUSH2 0x1D91 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0x4 DUP3 ADD SSTORE PUSH2 0x142D JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP4 DUP1 DUP1 PUSH2 0x1D81 JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 SSTORE PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP4 ADD SWAP3 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x1D66 JUMP JUMPDEST SWAP1 SWAP2 POP PUSH1 0x4 DUP5 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP6 LT PUSH2 0x1E11 JUMPI JUMPDEST SWAP1 DUP5 SWAP4 SWAP3 SWAP2 JUMPDEST PUSH1 0x1F DUP4 ADD PUSH1 0x5 SHR DUP3 ADD DUP2 LT PUSH2 0x1E02 JUMPI POP POP PUSH2 0x13FE JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE DUP6 SWAP5 POP PUSH1 0x1 ADD PUSH2 0x1DEC JUMP JUMPDEST POP DUP1 PUSH2 0x1DE6 JUMP JUMPDEST ADD MLOAD SWAP1 POP DUP4 DUP1 PUSH2 0x13B6 JUMP JUMPDEST SWAP3 POP PUSH1 0x3 DUP5 ADD PUSH1 0x0 MSTORE DUP1 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x0 SWAP4 JUMPDEST PUSH1 0x1F NOT DUP5 AND DUP6 LT PUSH2 0x1E79 JUMPI PUSH1 0x1 SWAP5 POP DUP4 PUSH1 0x1F NOT DUP2 AND LT PUSH2 0x1E60 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0x3 DUP3 ADD SSTORE PUSH2 0x13CE JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP4 DUP1 DUP1 PUSH2 0x1E50 JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 SSTORE PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP4 ADD SWAP3 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x1E35 JUMP JUMPDEST SWAP1 SWAP2 POP PUSH1 0x3 DUP5 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP6 LT PUSH2 0x1EE0 JUMPI JUMPDEST SWAP1 DUP5 SWAP4 SWAP3 SWAP2 JUMPDEST PUSH1 0x1F DUP4 ADD PUSH1 0x5 SHR DUP3 ADD DUP2 LT PUSH2 0x1ED1 JUMPI POP POP PUSH2 0x139F JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE DUP6 SWAP5 POP PUSH1 0x1 ADD PUSH2 0x1EBB JUMP JUMPDEST POP DUP1 PUSH2 0x1EB5 JUMP JUMPDEST ADD MLOAD SWAP1 POP DUP4 DUP1 PUSH2 0x1357 JUMP JUMPDEST SWAP3 POP PUSH1 0x2 DUP5 ADD PUSH1 0x0 MSTORE DUP1 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x0 SWAP4 JUMPDEST PUSH1 0x1F NOT DUP5 AND DUP6 LT PUSH2 0x1F48 JUMPI PUSH1 0x1 SWAP5 POP DUP4 PUSH1 0x1F NOT DUP2 AND LT PUSH2 0x1F2F JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0x2 DUP3 ADD SSTORE PUSH2 0x136F JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP4 DUP1 DUP1 PUSH2 0x1F1F JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 SSTORE PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP4 ADD SWAP3 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x1F04 JUMP JUMPDEST SWAP1 SWAP2 POP PUSH1 0x2 DUP5 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP6 LT PUSH2 0x1FAF JUMPI JUMPDEST SWAP1 DUP5 SWAP4 SWAP3 SWAP2 JUMPDEST PUSH1 0x1F DUP4 ADD PUSH1 0x5 SHR DUP3 ADD DUP2 LT PUSH2 0x1FA0 JUMPI POP POP PUSH2 0x1340 JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE DUP6 SWAP5 POP PUSH1 0x1 ADD PUSH2 0x1F8A JUMP JUMPDEST POP DUP1 PUSH2 0x1F84 JUMP JUMPDEST PUSH2 0x100 MLOAD MLOAD PUSH1 0xA0 DUP2 DUP2 MSTORE PUSH4 0x23B872DD PUSH1 0xE0 SHL SWAP1 SWAP2 MSTORE DUP1 MLOAD PUSH2 0x180 MLOAD CALLER PUSH1 0x4 DUP4 ADD MSTORE ADDRESS PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD PUSH1 0x20 SWAP2 SWAP1 PUSH1 0x64 SWAP1 PUSH1 0x0 PUSH20 0x765DE816845861E75A25FCA122BB6898B8B1282A GAS CALL PUSH1 0x80 MSTORE PUSH1 0x80 MLOAD ISZERO PUSH2 0x2089 JUMPI PUSH1 0x0 PUSH1 0x80 MLOAD PUSH2 0x2050 JUMPI JUMPDEST PUSH2 0x202B SWAP1 PUSH2 0x370E JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB PUSH2 0x180 MLOAD AND PUSH2 0x100 MLOAD PUSH1 0x0 KECCAK256 SSTORE PUSH2 0x1119 JUMP JUMPDEST POP PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x2082 JUMPI JUMPDEST PUSH2 0x207B DUP2 PUSH2 0x206F PUSH2 0x202B SWAP4 PUSH1 0xA0 MLOAD PUSH2 0x356C JUMP JUMPDEST PUSH1 0xA0 MLOAD ADD PUSH1 0xA0 MLOAD PUSH2 0x3669 JUMP JUMPDEST SWAP1 POP PUSH2 0x2022 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x205C JUMP JUMPDEST PUSH2 0x100 MLOAD MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH2 0x100 MLOAD MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE PUSH2 0x140 MLOAD CALLER PUSH1 0x4 DUP4 ADD MSTORE ADDRESS PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x20 DUP2 PUSH1 0x64 DUP2 PUSH1 0x0 PUSH20 0x62B8B11039FCFE5AB0C56E502B1C372A3D2A9C7A GAS CALL DUP1 ISZERO PUSH2 0x2089 JUMPI PUSH2 0x20FB SWAP2 PUSH1 0x0 SWAP2 PUSH2 0x2120 JUMPI JUMPDEST POP PUSH2 0x3751 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB PUSH2 0x140 MLOAD AND PUSH2 0x100 MLOAD PUSH1 0x0 KECCAK256 SSTORE PUSH2 0x1107 JUMP JUMPDEST PUSH2 0x2139 SWAP2 POP PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x635 JUMPI PUSH2 0x627 DUP2 DUP4 PUSH2 0x356C JUMP JUMPDEST DUP3 PUSH2 0x20F5 JUMP JUMPDEST PUSH2 0x100 MLOAD MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH13 0x125B9D985B1A5908195B585A5B PUSH1 0x9A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH2 0x100 MLOAD MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xB PUSH1 0x24 DUP3 ADD MSTORE PUSH11 0x496E76616C696420616765 PUSH1 0xA8 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP PUSH1 0xF0 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB PUSH2 0x1C0 MLOAD AND GT ISZERO PUSH2 0x10D2 JUMP JUMPDEST PUSH2 0x100 MLOAD MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH12 0x496E76616C69642073697A65 PUSH1 0xA0 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP PUSH1 0xC8 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB PUSH2 0x1A0 MLOAD AND GT ISZERO PUSH2 0x10B6 JUMP JUMPDEST PUSH1 0x14 SWAP2 POP GT ISZERO DUP12 PUSH2 0xE44 JUMP JUMPDEST PUSH1 0x64 SWAP2 POP GT ISZERO DUP12 PUSH2 0xE44 JUMP JUMPDEST PUSH1 0xC8 SWAP2 POP GT ISZERO DUP12 PUSH2 0xE44 JUMP JUMPDEST PUSH2 0x1F4 SWAP2 POP GT ISZERO DUP12 PUSH2 0xE44 JUMP JUMPDEST PUSH1 0xA SWAP2 POP GT ISZERO DUP7 PUSH2 0xD43 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x109BDD5B9D1E481C995C5D5A5C9959 PUSH1 0x8A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB PUSH2 0x140 MLOAD AND ISZERO ISZERO PUSH2 0xC89 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB PUSH2 0x180 MLOAD AND ISZERO ISZERO PUSH2 0xC82 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x472420626F756E747920746F6F206C61726765 PUSH1 0x68 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x6355534420626F756E747920746F6F206C61726765 PUSH1 0x58 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x43454C4F20626F756E747920746F6F206C61726765 PUSH1 0x58 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x14A JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x14A JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x2383 PUSH1 0x1 SLOAD DUP3 LT PUSH2 0x3681 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SLOAD PUSH2 0x2395 PUSH1 0xFF DUP3 AND ISZERO PUSH2 0x36C2 JUMP JUMPDEST PUSH1 0xFF NOT AND OR PUSH1 0x0 SSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0xE DUP2 ADD SWAP1 PUSH1 0xFF DUP3 SLOAD PUSH1 0x80 SHR AND PUSH1 0x3 DUP2 LT ISZERO PUSH2 0x75A JUMPI PUSH2 0x23CB SWAP1 ISZERO PUSH2 0x394B JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x2488 JUMPI PUSH1 0xF ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER OR SWAP1 SSTORE DUP1 SLOAD PUSH1 0xFF PUSH1 0x90 SHL NOT AND PUSH1 0x1 PUSH1 0x90 SHL OR DUP1 DUP3 SSTORE PUSH1 0x88 SHR PUSH1 0xFF AND PUSH2 0x244A JUMPI JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 PUSH1 0x0 DUP3 MSTORE PUSH32 0xC7DB73A2D1DC7FD351B6549EFAD129BBF568E618DBBE683ABFA0D1550A96E5AE PUSH1 0x20 CALLER SWAP4 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE STOP JUMPDEST DUP1 SLOAD PUSH1 0xFF PUSH1 0x80 SHL NOT AND PUSH1 0x1 PUSH1 0x80 SHL OR SWAP1 SSTORE CALLER DUP2 PUSH32 0x2C54217AED12A18C71E20E5A6A3F13F8CFDDBB2C3A0A5F409861478C7FD39E81 PUSH1 0x0 DUP1 LOG3 DUP2 PUSH2 0x240F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x27BBB732B91031B0B73737BA103132903334B73232B9 PUSH1 0x51 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x14A JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x14A JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x24 CALLDATALOAD DUP2 ADD PUSH1 0x0 DUP2 DUP4 GT PUSH2 0x25D3 JUMPI DUP2 SWAP1 PUSH1 0x1 SLOAD DUP1 SWAP4 GT PUSH2 0x25CB JUMPI JUMPDEST DUP4 JUMPDEST DUP3 DUP2 LT PUSH2 0x2588 JUMPI POP PUSH2 0x2508 SWAP1 PUSH2 0x37B8 JUMP JUMPDEST SWAP2 PUSH1 0x0 SWAP4 JUMPDEST DUP3 DUP2 LT PUSH2 0x2539 JUMPI POP PUSH2 0x252E SWAP4 POP PUSH1 0x40 MLOAD SWAP4 DUP5 SWAP4 PUSH1 0x40 DUP6 MSTORE PUSH1 0x40 DUP6 ADD SWAP1 PUSH2 0x325A JUMP JUMPDEST SWAP2 LT PUSH1 0x20 DUP4 ADD MSTORE SUB SWAP1 RETURN JUMPDEST DUP1 PUSH1 0x0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0xE PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD PUSH1 0x80 SHR AND PUSH1 0x3 DUP2 LT ISZERO PUSH2 0x75A JUMPI ISZERO PUSH2 0x2568 JUMPI JUMPDEST PUSH1 0x1 ADD PUSH2 0x250D JUMP JUMPDEST SWAP4 PUSH2 0x2580 DUP2 DUP7 PUSH2 0x257A PUSH1 0x1 SWAP5 DUP9 PUSH2 0x38D9 JUMP JUMPDEST MSTORE PUSH2 0x3792 JUMP JUMPDEST SWAP5 SWAP1 POP PUSH2 0x2560 JUMP JUMPDEST DUP1 PUSH1 0x0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0xE PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD PUSH1 0x80 SHR AND PUSH1 0x3 DUP2 LT ISZERO PUSH2 0x75A JUMPI ISZERO PUSH2 0x25B7 JUMPI JUMPDEST PUSH1 0x1 ADD PUSH2 0x24F7 JUMP JUMPDEST SWAP1 PUSH2 0x25C3 PUSH1 0x1 SWAP2 PUSH2 0x3792 JUMP JUMPDEST SWAP2 SWAP1 POP PUSH2 0x25AF JUMP JUMPDEST DUP3 SWAP2 POP PUSH2 0x24F5 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST CALLVALUE PUSH2 0x14A JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x14A JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH10 0x21E19E0C9BAB2400000 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x14A JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x14A JUMPI PUSH1 0x0 DUP1 PUSH1 0x1 SLOAD SWAP1 JUMPDEST DUP2 DUP2 LT PUSH2 0x2639 JUMPI PUSH1 0x20 DUP4 PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST DUP1 PUSH1 0x0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0xE PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD PUSH1 0x80 SHR AND PUSH1 0x3 DUP2 LT ISZERO PUSH2 0x75A JUMPI ISZERO PUSH2 0x2668 JUMPI JUMPDEST PUSH1 0x1 ADD PUSH2 0x2627 JUMP JUMPDEST SWAP2 PUSH2 0x2674 PUSH1 0x1 SWAP2 PUSH2 0x3792 JUMP JUMPDEST SWAP3 SWAP1 POP PUSH2 0x2660 JUMP JUMPDEST CALLVALUE PUSH2 0x14A JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x14A JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 DUP2 DUP2 SUB PUSH2 0x14A JUMPI PUSH1 0x0 SLOAD SWAP1 PUSH2 0x26BE CALLER PUSH1 0x8 DUP5 SWAP1 SHR PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x3631 JUMP JUMPDEST DUP3 ISZERO PUSH2 0x270D JUMPI PUSH2 0x100 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT SWAP1 SWAP2 AND PUSH1 0x8 SWAP2 SWAP1 SWAP2 SHL PUSH2 0x100 PUSH1 0x1 PUSH1 0xA8 SHL SUB AND OR PUSH1 0x0 SWAP1 DUP2 SSTORE PUSH32 0x7CE7EC0B50378FB6C0186FFB5F48325F6593FCB4CA4386F21861AF3129188F5C SWAP1 DUP1 LOG2 STOP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x496E76616C69642061646472657373 PUSH1 0x88 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x14A JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x14A JUMPI PUSH1 0x4 CALLDATALOAD DUP1 PUSH1 0x0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH2 0x277C PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x1 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD AND CALLER EQ PUSH2 0x390F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SLOAD PUSH2 0x278E PUSH1 0xFF DUP3 AND ISZERO PUSH2 0x36C2 JUMP JUMPDEST PUSH1 0xFF NOT AND OR PUSH1 0x0 SSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0xE DUP2 ADD DUP1 SLOAD SWAP2 PUSH1 0xFF DUP4 PUSH1 0x80 SHR AND SWAP1 PUSH1 0x3 DUP3 LT ISZERO PUSH2 0x75A JUMPI PUSH2 0x27C8 PUSH1 0xF SWAP3 ISZERO PUSH2 0x394B JUMP JUMPDEST ADD DUP1 SLOAD SWAP1 SWAP3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO PUSH2 0x287A JUMPI PUSH1 0xFF PUSH1 0x88 SHL NOT AND PUSH1 0x1 PUSH1 0x88 SHL OR DUP1 DUP3 SSTORE PUSH1 0x90 SHR PUSH1 0xFF AND PUSH2 0x2832 JUMPI JUMPDEST DUP3 PUSH1 0x40 MLOAD SWAP1 PUSH1 0x1 DUP3 MSTORE PUSH32 0xC7DB73A2D1DC7FD351B6549EFAD129BBF568E618DBBE683ABFA0D1550A96E5AE PUSH1 0x20 CALLER SWAP4 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE STOP JUMPDEST DUP1 SLOAD PUSH1 0xFF PUSH1 0x80 SHL NOT AND PUSH1 0x1 PUSH1 0x80 SHL OR SWAP1 SSTORE SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH32 0x2C54217AED12A18C71E20E5A6A3F13F8CFDDBB2C3A0A5F409861478C7FD39E81 PUSH1 0x0 DUP1 LOG3 DUP2 DUP1 PUSH2 0x27F7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x139BC8199A5B99195C88185CDCDA59DB9959 PUSH1 0x72 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x14A JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x14A JUMPI PUSH1 0x1 SLOAD PUSH2 0x28D1 DUP2 PUSH2 0x37EA JUMP JUMPDEST SWAP1 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x28F6 JUMPI PUSH1 0x40 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 SWAP1 PUSH2 0x28F2 SWAP1 DUP3 ADD DUP7 PUSH2 0x32E3 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST DUP1 PUSH1 0x1 SWAP2 PUSH1 0x0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD SWAP1 PUSH2 0x2914 DUP3 PUSH2 0x3550 JUMP JUMPDEST DUP1 SLOAD DUP3 MSTORE DUP4 DUP1 PUSH1 0xA0 SHL SUB DUP5 DUP3 ADD SLOAD AND PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x2934 PUSH1 0x2 DUP3 ADD PUSH2 0x358D JUMP JUMPDEST PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x2945 PUSH1 0x3 DUP3 ADD PUSH2 0x358D JUMP JUMPDEST PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x2956 PUSH1 0x4 DUP3 ADD PUSH2 0x358D JUMP JUMPDEST PUSH1 0x80 DUP4 ADD MSTORE PUSH1 0x5 DUP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP2 AND PUSH1 0xA0 DUP5 ADD MSTORE PUSH1 0x80 SHR PUSH1 0xC0 DUP4 ADD MSTORE PUSH2 0x2983 PUSH1 0x6 DUP3 ADD PUSH2 0x358D JUMP JUMPDEST PUSH1 0xE0 DUP4 ADD MSTORE PUSH2 0x2994 PUSH1 0x7 DUP3 ADD PUSH2 0x358D JUMP JUMPDEST PUSH2 0x100 DUP4 ADD MSTORE PUSH2 0x29A6 PUSH1 0x8 DUP3 ADD PUSH2 0x358D JUMP JUMPDEST PUSH2 0x120 DUP4 ADD MSTORE PUSH2 0x29B8 PUSH1 0x9 DUP3 ADD PUSH2 0x358D JUMP JUMPDEST PUSH2 0x140 DUP4 ADD MSTORE PUSH2 0x29CA PUSH1 0xA DUP3 ADD PUSH2 0x358D JUMP JUMPDEST PUSH2 0x160 DUP4 ADD MSTORE PUSH2 0x29DC PUSH1 0xB DUP3 ADD PUSH2 0x358D JUMP JUMPDEST PUSH2 0x180 DUP4 ADD MSTORE PUSH2 0x29EE PUSH1 0xC DUP3 ADD PUSH2 0x358D JUMP JUMPDEST PUSH2 0x1A0 DUP4 ADD MSTORE PUSH1 0xD DUP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP2 AND PUSH2 0x1C0 DUP5 ADD MSTORE PUSH1 0x80 SHR PUSH2 0x1E0 DUP4 ADD MSTORE PUSH1 0xFF PUSH1 0xE DUP3 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP2 AND PUSH2 0x200 DUP6 ADD MSTORE PUSH2 0x2A3C DUP3 DUP3 PUSH1 0x80 SHR AND PUSH2 0x220 DUP7 ADD PUSH2 0x3903 JUMP JUMPDEST DUP2 DUP2 PUSH1 0x88 SHR AND ISZERO ISZERO PUSH2 0x240 DUP6 ADD MSTORE PUSH1 0x90 SHR AND ISZERO ISZERO PUSH2 0x260 DUP4 ADD MSTORE PUSH1 0xF DUP5 DUP1 PUSH1 0xA0 SHL SUB SWAP2 ADD SLOAD AND PUSH2 0x280 DUP3 ADD MSTORE PUSH2 0x2A72 DUP3 DUP7 PUSH2 0x38D9 JUMP JUMPDEST MSTORE PUSH2 0x2A7D DUP2 DUP6 PUSH2 0x38D9 JUMP JUMPDEST POP ADD PUSH2 0x28D5 JUMP JUMPDEST CALLVALUE PUSH2 0x14A JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x14A JUMPI PUSH1 0x1 SLOAD PUSH1 0x0 DUP1 JUMPDEST DUP3 DUP2 LT PUSH2 0x2CC0 JUMPI POP PUSH2 0x2AB6 PUSH2 0x2AB0 DUP3 PUSH2 0x37B8 JUMP JUMPDEST SWAP2 PUSH2 0x37EA JUMP JUMPDEST PUSH1 0x0 SWAP3 DUP4 JUMPDEST DUP2 DUP2 LT PUSH2 0x2AEC JUMPI PUSH2 0x2ADE DUP5 PUSH2 0x28F2 DUP6 PUSH1 0x40 MLOAD SWAP4 DUP5 SWAP4 PUSH1 0x40 DUP6 MSTORE PUSH1 0x40 DUP6 ADD SWAP1 PUSH2 0x325A JUMP JUMPDEST SWAP1 DUP4 DUP3 SUB PUSH1 0x20 DUP6 ADD MSTORE PUSH2 0x32E3 JUMP JUMPDEST DUP1 PUSH1 0x0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0xE PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD PUSH1 0x80 SHR AND PUSH1 0x3 DUP2 LT ISZERO PUSH2 0x75A JUMPI ISZERO PUSH2 0x2B1B JUMPI JUMPDEST PUSH1 0x1 ADD PUSH2 0x2ABB JUMP JUMPDEST SWAP4 PUSH2 0x2CB8 DUP2 DUP7 PUSH2 0x2B2D PUSH1 0x1 SWAP5 DUP9 PUSH2 0x38D9 JUMP JUMPDEST MSTORE DUP7 PUSH1 0x0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD SWAP1 PUSH2 0x2B49 DUP3 PUSH2 0x3550 JUMP JUMPDEST DUP1 SLOAD DUP3 MSTORE DUP5 DUP1 PUSH1 0xA0 SHL SUB DUP6 DUP3 ADD SLOAD AND PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x2B69 PUSH1 0x2 DUP3 ADD PUSH2 0x358D JUMP JUMPDEST PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x2B7A PUSH1 0x3 DUP3 ADD PUSH2 0x358D JUMP JUMPDEST PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x2B8B PUSH1 0x4 DUP3 ADD PUSH2 0x358D JUMP JUMPDEST PUSH1 0x80 DUP4 ADD MSTORE PUSH1 0x5 DUP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP2 AND PUSH1 0xA0 DUP5 ADD MSTORE PUSH1 0x80 SHR PUSH1 0xC0 DUP4 ADD MSTORE PUSH2 0x2BB8 PUSH1 0x6 DUP3 ADD PUSH2 0x358D JUMP JUMPDEST PUSH1 0xE0 DUP4 ADD MSTORE PUSH2 0x2BC9 PUSH1 0x7 DUP3 ADD PUSH2 0x358D JUMP JUMPDEST PUSH2 0x100 DUP4 ADD MSTORE PUSH2 0x2BDB PUSH1 0x8 DUP3 ADD PUSH2 0x358D JUMP JUMPDEST PUSH2 0x120 DUP4 ADD MSTORE PUSH2 0x2BED PUSH1 0x9 DUP3 ADD PUSH2 0x358D JUMP JUMPDEST PUSH2 0x140 DUP4 ADD MSTORE PUSH2 0x2BFF PUSH1 0xA DUP3 ADD PUSH2 0x358D JUMP JUMPDEST PUSH2 0x160 DUP4 ADD MSTORE PUSH2 0x2C11 PUSH1 0xB DUP3 ADD PUSH2 0x358D JUMP JUMPDEST PUSH2 0x180 DUP4 ADD MSTORE PUSH2 0x2C23 PUSH1 0xC DUP3 ADD PUSH2 0x358D JUMP JUMPDEST PUSH2 0x1A0 DUP4 ADD MSTORE PUSH1 0xD DUP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP2 AND PUSH2 0x1C0 DUP5 ADD MSTORE PUSH1 0x80 SHR PUSH2 0x1E0 DUP4 ADD MSTORE PUSH1 0xFF PUSH1 0xE DUP3 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP2 AND PUSH2 0x200 DUP6 ADD MSTORE PUSH2 0x2C71 DUP3 DUP3 PUSH1 0x80 SHR AND PUSH2 0x220 DUP7 ADD PUSH2 0x3903 JUMP JUMPDEST DUP2 DUP2 PUSH1 0x88 SHR AND ISZERO ISZERO PUSH2 0x240 DUP6 ADD MSTORE PUSH1 0x90 SHR AND ISZERO ISZERO PUSH2 0x260 DUP4 ADD MSTORE PUSH1 0xF DUP6 DUP1 PUSH1 0xA0 SHL SUB SWAP2 ADD SLOAD AND PUSH2 0x280 DUP3 ADD MSTORE PUSH2 0x2CA7 DUP3 DUP8 PUSH2 0x38D9 JUMP JUMPDEST MSTORE PUSH2 0x2CB2 DUP2 DUP7 PUSH2 0x38D9 JUMP JUMPDEST POP PUSH2 0x3792 JUMP JUMPDEST SWAP5 SWAP1 POP PUSH2 0x2B13 JUMP JUMPDEST DUP1 PUSH1 0x0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0xE PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD PUSH1 0x80 SHR AND PUSH1 0x3 DUP2 LT ISZERO PUSH2 0x75A JUMPI ISZERO PUSH2 0x2CEF JUMPI JUMPDEST PUSH1 0x1 ADD PUSH2 0x2A9C JUMP JUMPDEST SWAP1 PUSH2 0x2CFB PUSH1 0x1 SWAP2 PUSH2 0x3792 JUMP JUMPDEST SWAP2 SWAP1 POP PUSH2 0x2CE7 JUMP JUMPDEST CALLVALUE PUSH2 0x14A JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x14A JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH20 0x765DE816845861E75A25FCA122BB6898B8B1282A DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x14A JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x14A JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x2D53 PUSH1 0x1 SLOAD DUP3 LT PUSH2 0x3681 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SLOAD PUSH2 0x2D65 PUSH1 0xFF DUP3 AND ISZERO PUSH2 0x36C2 JUMP JUMPDEST PUSH1 0xFF NOT AND OR PUSH1 0x0 SSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0xE DUP3 ADD SWAP2 DUP3 SLOAD SWAP1 PUSH1 0xFF DUP3 PUSH1 0x80 SHR AND PUSH1 0x3 DUP2 LT ISZERO PUSH2 0x75A JUMPI PUSH1 0x1 SUB PUSH2 0x3035 JUMPI PUSH1 0xF DUP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0x3003 JUMPI PUSH1 0xD ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP2 AND SWAP5 DUP6 ISZERO DUP1 SWAP2 DUP2 ISZERO DUP1 SWAP3 PUSH2 0x2FF7 JUMPI JUMPDEST DUP1 ISZERO PUSH2 0x2FE5 JUMPI JUMPDEST ISZERO PUSH2 0x2FB4 JUMPI PUSH1 0x0 SWAP5 DUP6 SWAP1 SSTORE DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB NOT AND SWAP1 SSTORE DUP6 DUP5 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP7 KECCAK256 DUP7 SWAP1 SSTORE PUSH1 0x4 SWAP1 SWAP2 MSTORE DUP5 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE PUSH1 0x80 SWAP2 SWAP1 SWAP2 SHR SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND SWAP2 DUP6 SWAP2 SWAP1 PUSH2 0x2F8D JUMPI JUMPDEST POP POP DUP2 PUSH2 0x2F18 JUMPI JUMPDEST DUP1 PUSH2 0x2E71 JUMPI JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP5 DUP6 MSTORE PUSH1 0x20 DUP6 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP1 DUP4 ADD MSTORE CALLER SWAP2 PUSH32 0xAF63EFACF28433915EA2D25F6E48EB87264E585BEBEF968BCD127A52608ADEC SWAP1 DUP1 PUSH1 0x60 DUP2 ADD PUSH2 0x579 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 PUSH4 0x2000575 PUSH1 0xE5 SHL DUP4 MSTORE CALLER PUSH1 0x4 DUP5 ADD MSTORE DUP2 PUSH1 0x24 DUP5 ADD MSTORE PUSH1 0x60 PUSH1 0x44 DUP5 ADD MSTORE PUSH1 0x0 PUSH1 0x64 DUP5 ADD MSTORE PUSH1 0x20 DUP4 PUSH1 0x84 DUP2 PUSH1 0x0 PUSH20 0x62B8B11039FCFE5AB0C56E502B1C372A3D2A9C7A GAS CALL SWAP3 DUP4 ISZERO PUSH2 0x63C JUMPI PUSH32 0xAF63EFACF28433915EA2D25F6E48EB87264E585BEBEF968BCD127A52608ADEC SWAP4 PUSH2 0x2EF2 SWAP2 PUSH1 0x0 SWAP2 PUSH2 0x2EF9 JUMPI POP PUSH2 0x3751 JUMP JUMPDEST SWAP2 POP PUSH2 0x2E30 JUMP JUMPDEST PUSH2 0x2F12 SWAP2 POP PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x635 JUMPI PUSH2 0x627 DUP2 DUP4 PUSH2 0x356C JUMP JUMPDEST DUP8 PUSH2 0x20F5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x20 DUP2 PUSH1 0x44 DUP2 PUSH1 0x0 PUSH20 0x765DE816845861E75A25FCA122BB6898B8B1282A GAS CALL DUP1 ISZERO PUSH2 0x63C JUMPI PUSH2 0x2F69 SWAP2 PUSH1 0x0 SWAP2 PUSH2 0x2F6E JUMPI JUMPDEST POP PUSH2 0x370E JUMP JUMPDEST PUSH2 0x2E2A JUMP JUMPDEST PUSH2 0x2F87 SWAP2 POP PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x635 JUMPI PUSH2 0x627 DUP2 DUP4 PUSH2 0x356C JUMP JUMPDEST DUP7 PUSH2 0x2F63 JUMP JUMPDEST PUSH1 0x0 SWAP1 PUSH2 0x2FAB JUMPI JUMPDEST PUSH1 0x0 DUP1 DUP1 SWAP4 DUP2 SWAP4 CALLER SWAP1 CALL ISZERO PUSH2 0x63C JUMPI DUP4 DUP6 PUSH2 0x2E22 JUMP JUMPDEST POP PUSH2 0x8FC PUSH2 0x2F95 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x9 PUSH1 0x24 DUP3 ADD MSTORE PUSH9 0x4E6F20626F756E7479 PUSH1 0xB8 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP7 AND ISZERO ISZERO PUSH2 0x2DD3 JUMP JUMPDEST POP DUP4 PUSH1 0x80 SHR ISZERO ISZERO PUSH2 0x2DCC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xA PUSH1 0x24 DUP3 ADD MSTORE PUSH10 0x2737BA103334B73232B9 PUSH1 0xB1 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x14195D081B9BDD08199BDD5B99081E595D PUSH1 0x7A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x14A JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x14A JUMPI PUSH1 0x20 PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x14A JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x14A JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH8 0x8AC7230489E80000 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x14A JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x14A JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 SUB PUSH2 0x14A JUMPI PUSH2 0x30EB PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x0 SLOAD PUSH1 0x8 SHR AND CALLER EQ PUSH2 0x3631 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x20 DUP2 PUSH1 0x24 DUP2 PUSH20 0x765DE816845861E75A25FCA122BB6898B8B1282A GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x63C JUMPI PUSH1 0x0 SWAP2 PUSH2 0x31DE JUMPI JUMPDEST POP PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x20 DUP2 DUP1 PUSH1 0x44 DUP2 ADD JUMPDEST SUB DUP2 PUSH1 0x0 PUSH20 0x765DE816845861E75A25FCA122BB6898B8B1282A GAS CALL SWAP1 DUP2 ISZERO PUSH2 0x63C JUMPI PUSH1 0x0 SWAP2 PUSH2 0x31BF JUMPI JUMPDEST POP ISZERO PUSH2 0x3188 JUMPI STOP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x151C985B9CD9995C8819985A5B1959 PUSH1 0x8A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH2 0x31D8 SWAP2 POP PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x635 JUMPI PUSH2 0x627 DUP2 DUP4 PUSH2 0x356C JUMP JUMPDEST DUP2 PUSH2 0x3180 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x320A JUMPI JUMPDEST DUP2 PUSH2 0x31F9 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x356C JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x14A JUMPI MLOAD PUSH2 0x3156 PUSH2 0x312A JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x31EC JUMP JUMPDEST CALLVALUE PUSH2 0x14A JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x14A JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x14A JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x14A JUMPI DUP1 PUSH3 0x76A700 PUSH1 0x20 SWAP3 MSTORE RETURN JUMPDEST SWAP1 PUSH1 0x20 DUP1 DUP4 MLOAD SWAP3 DUP4 DUP2 MSTORE ADD SWAP3 ADD SWAP1 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x3278 JUMPI POP POP POP SWAP1 JUMP JUMPDEST DUP3 MLOAD DUP5 MSTORE PUSH1 0x20 SWAP4 DUP5 ADD SWAP4 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x326B JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT PUSH2 0x32A1 JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x3291 JUMP JUMPDEST SWAP1 PUSH1 0x20 SWAP2 PUSH2 0x32CA DUP2 MLOAD DUP1 SWAP3 DUP2 DUP6 MSTORE DUP6 DUP1 DUP7 ADD SWAP2 ADD PUSH2 0x328E JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND ADD ADD SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x3 DUP3 LT ISZERO PUSH2 0x75A JUMPI MSTORE JUMP JUMPDEST SWAP1 DUP1 PUSH1 0x20 DUP4 MLOAD SWAP2 DUP3 DUP2 MSTORE ADD SWAP2 PUSH1 0x20 DUP1 DUP4 PUSH1 0x5 SHL DUP4 ADD ADD SWAP5 ADD SWAP3 PUSH1 0x0 SWAP2 JUMPDEST DUP4 DUP4 LT PUSH2 0x330F JUMPI POP POP POP POP POP SWAP1 JUMP JUMPDEST SWAP1 SWAP2 SWAP3 SWAP4 SWAP5 PUSH1 0x1F NOT DUP3 DUP3 SUB ADD DUP4 MSTORE DUP6 MLOAD SWAP1 DUP2 MLOAD DUP2 MSTORE PUSH1 0x1 PUSH1 0xA0 SHL PUSH1 0x1 SWAP1 SUB PUSH1 0x20 DUP4 ADD MLOAD AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP3 ADD MLOAD PUSH1 0x40 DUP3 ADD PUSH2 0x2A0 SWAP1 MSTORE PUSH2 0x2A0 DUP3 ADD PUSH2 0x3354 SWAP2 PUSH2 0x32B1 JUMP JUMPDEST PUSH1 0x60 DUP4 ADD MLOAD SWAP1 DUP3 DUP2 SUB PUSH1 0x60 DUP5 ADD MSTORE PUSH2 0x336B SWAP2 PUSH2 0x32B1 JUMP JUMPDEST PUSH1 0x80 DUP4 ADD MLOAD SWAP1 DUP3 DUP2 SUB PUSH1 0x80 DUP5 ADD MSTORE PUSH2 0x3382 SWAP2 PUSH2 0x32B1 JUMP JUMPDEST PUSH1 0xA0 DUP4 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND PUSH1 0xA0 DUP4 ADD MSTORE PUSH1 0xC0 DUP4 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND PUSH1 0xC0 DUP4 ADD MSTORE PUSH1 0xE0 DUP4 ADD MLOAD SWAP1 DUP3 DUP2 SUB PUSH1 0xE0 DUP5 ADD MSTORE PUSH2 0x33BF SWAP2 PUSH2 0x32B1 JUMP JUMPDEST PUSH2 0x100 DUP4 ADD MLOAD SWAP1 DUP3 DUP2 SUB PUSH2 0x100 DUP5 ADD MSTORE PUSH2 0x33D8 SWAP2 PUSH2 0x32B1 JUMP JUMPDEST PUSH2 0x120 DUP4 ADD MLOAD SWAP1 DUP3 DUP2 SUB PUSH2 0x120 DUP5 ADD MSTORE PUSH2 0x33F1 SWAP2 PUSH2 0x32B1 JUMP JUMPDEST PUSH2 0x140 DUP4 ADD MLOAD SWAP1 DUP3 DUP2 SUB PUSH2 0x140 DUP5 ADD MSTORE PUSH2 0x340A SWAP2 PUSH2 0x32B1 JUMP JUMPDEST PUSH2 0x160 DUP4 ADD MLOAD SWAP1 DUP3 DUP2 SUB PUSH2 0x160 DUP5 ADD MSTORE PUSH2 0x3423 SWAP2 PUSH2 0x32B1 JUMP JUMPDEST PUSH2 0x180 DUP4 ADD MLOAD SWAP1 DUP3 DUP2 SUB PUSH2 0x180 DUP5 ADD MSTORE PUSH2 0x343C SWAP2 PUSH2 0x32B1 JUMP JUMPDEST PUSH2 0x1A0 DUP4 ADD MLOAD SWAP1 DUP3 DUP2 SUB PUSH2 0x1A0 DUP5 ADD MSTORE PUSH2 0x3455 SWAP2 PUSH2 0x32B1 JUMP JUMPDEST SWAP2 PUSH2 0x1C0 DUP2 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND PUSH2 0x1C0 DUP4 ADD MSTORE PUSH2 0x1E0 DUP2 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND PUSH2 0x1E0 DUP4 ADD MSTORE PUSH2 0x200 DUP2 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND PUSH2 0x200 DUP4 ADD MSTORE PUSH2 0x220 DUP2 ADD MLOAD PUSH2 0x220 DUP4 ADD PUSH2 0x34A9 SWAP2 PUSH2 0x32D6 JUMP JUMPDEST PUSH2 0x240 DUP2 DUP2 ADD MLOAD ISZERO ISZERO SWAP1 DUP4 ADD MSTORE PUSH2 0x260 DUP1 DUP3 ADD MLOAD ISZERO ISZERO SWAP1 DUP4 ADD MSTORE PUSH2 0x280 SWAP1 DUP2 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 ADD MSTORE SWAP5 PUSH1 0x20 SWAP1 DUP2 ADD SWAP5 SWAP4 PUSH1 0x1 ADD SWAP3 ADD SWAP1 PUSH2 0x3300 JUMP JUMPDEST SWAP2 DUP2 PUSH1 0x1F DUP5 ADD SLT ISZERO PUSH2 0x14A JUMPI DUP3 CALLDATALOAD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 GT PUSH2 0x14A JUMPI PUSH1 0x20 DUP4 DUP2 DUP7 ADD SWAP6 ADD ADD GT PUSH2 0x14A JUMPI JUMP JUMPDEST SWAP1 PUSH1 0x1 DUP3 DUP2 SHR SWAP3 AND DUP1 ISZERO PUSH2 0x3546 JUMPI JUMPDEST PUSH1 0x20 DUP4 LT EQ PUSH2 0x3530 JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0x3525 JUMP JUMPDEST PUSH2 0x2A0 DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x18E3 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x18E3 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x40 MLOAD SWAP2 DUP3 PUSH1 0x0 DUP3 SLOAD SWAP3 PUSH2 0x35A1 DUP5 PUSH2 0x3516 JUMP JUMPDEST DUP1 DUP5 MSTORE SWAP4 PUSH1 0x1 DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0x360F JUMPI POP PUSH1 0x1 EQ PUSH2 0x35C8 JUMPI JUMPDEST POP PUSH2 0x35C6 SWAP3 POP SUB DUP4 PUSH2 0x356C JUMP JUMPDEST JUMP JUMPDEST SWAP1 POP PUSH1 0x0 SWAP3 SWAP2 SWAP3 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x0 SWAP2 JUMPDEST DUP2 DUP4 LT PUSH2 0x35F3 JUMPI POP POP SWAP1 PUSH1 0x20 PUSH2 0x35C6 SWAP3 DUP3 ADD ADD CODESIZE PUSH2 0x35B9 JUMP JUMPDEST PUSH1 0x20 SWAP2 SWAP4 POP DUP1 PUSH1 0x1 SWAP2 SLOAD DUP4 DUP6 DUP10 ADD ADD MSTORE ADD SWAP2 ADD SWAP1 SWAP2 DUP5 SWAP3 PUSH2 0x35DA JUMP JUMPDEST SWAP1 POP PUSH1 0x20 SWAP3 POP PUSH2 0x35C6 SWAP5 SWAP2 POP PUSH1 0xFF NOT AND DUP3 DUP5 ADD MSTORE ISZERO ISZERO PUSH1 0x5 SHL DUP3 ADD ADD CODESIZE PUSH2 0x35B9 JUMP JUMPDEST ISZERO PUSH2 0x3638 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x9 PUSH1 0x24 DUP3 ADD MSTORE PUSH9 0x2737BA1030B236B4B7 PUSH1 0xB9 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP1 DUP2 PUSH1 0x20 SWAP2 SUB SLT PUSH2 0x14A JUMPI MLOAD DUP1 ISZERO ISZERO DUP2 SUB PUSH2 0x14A JUMPI SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x3688 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x14195D08191BD95CC81B9BDD08195E1A5CDD PUSH1 0x72 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x36C9 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x3715 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x18D554D1081D1C985B9CD9995C8819985A5B1959 PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x3758 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x11C9081D1C985B9CD9995C8819985A5B1959 PUSH1 0x72 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x0 NOT DUP2 EQ PUSH2 0x25D3 JUMPI PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x18E3 JUMPI PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x37C2 DUP3 PUSH2 0x37A1 JUMP JUMPDEST PUSH2 0x37CF PUSH1 0x40 MLOAD SWAP2 DUP3 PUSH2 0x356C JUMP JUMPDEST DUP3 DUP2 MSTORE DUP1 SWAP3 PUSH2 0x37E0 PUSH1 0x1F NOT SWAP2 PUSH2 0x37A1 JUMP JUMPDEST ADD SWAP1 PUSH1 0x20 CALLDATASIZE SWAP2 ADD CALLDATACOPY JUMP JUMPDEST SWAP1 PUSH2 0x37F4 DUP3 PUSH2 0x37A1 JUMP JUMPDEST PUSH2 0x3801 PUSH1 0x40 MLOAD SWAP2 DUP3 PUSH2 0x356C JUMP JUMPDEST DUP3 DUP2 MSTORE DUP1 SWAP3 PUSH2 0x3812 PUSH1 0x1F NOT SWAP2 PUSH2 0x37A1 JUMP JUMPDEST ADD SWAP1 PUSH1 0x0 JUMPDEST DUP3 DUP2 LT PUSH2 0x3823 JUMPI POP POP POP JUMP JUMPDEST PUSH1 0x20 SWAP1 PUSH1 0x40 MLOAD PUSH2 0x3832 DUP2 PUSH2 0x3550 JUMP JUMPDEST PUSH1 0x0 DUP2 MSTORE PUSH1 0x0 DUP4 DUP3 ADD MSTORE PUSH1 0x60 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 DUP1 DUP3 ADD MSTORE PUSH1 0x60 PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0x0 PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0x0 PUSH1 0xC0 DUP3 ADD MSTORE PUSH1 0x60 PUSH1 0xE0 DUP3 ADD MSTORE PUSH1 0x60 PUSH2 0x100 DUP3 ADD MSTORE PUSH1 0x60 PUSH2 0x120 DUP3 ADD MSTORE PUSH1 0x60 PUSH2 0x140 DUP3 ADD MSTORE PUSH1 0x60 PUSH2 0x160 DUP3 ADD MSTORE PUSH1 0x60 PUSH2 0x180 DUP3 ADD MSTORE PUSH1 0x60 PUSH2 0x1A0 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x1C0 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x1E0 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x200 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x220 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x240 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x260 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x280 DUP3 ADD MSTORE DUP3 DUP3 DUP6 ADD ADD MSTORE ADD PUSH2 0x3817 JUMP JUMPDEST DUP1 MLOAD DUP3 LT ISZERO PUSH2 0x38ED JUMPI PUSH1 0x20 SWAP2 PUSH1 0x5 SHL ADD ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x3 DUP3 LT ISZERO PUSH2 0x75A JUMPI MSTORE JUMP JUMPDEST ISZERO PUSH2 0x3916 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH13 0x2737BA103832BA1037BBB732B9 PUSH1 0x99 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x3952 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x506574206E6F7420616374697665 PUSH1 0x90 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP3 SWAP2 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x18E3 JUMPI PUSH1 0x40 MLOAD SWAP2 PUSH2 0x39B1 PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP5 PUSH2 0x356C JUMP JUMPDEST DUP3 SWAP5 DUP2 DUP5 MSTORE DUP2 DUP4 ADD GT PUSH2 0x14A JUMPI DUP3 DUP2 PUSH1 0x20 SWAP4 DUP5 PUSH1 0x0 SWAP7 ADD CALLDATACOPY ADD ADD MSTORE JUMP JUMPDEST ISZERO PUSH2 0x39D6 JUMPI POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE SWAP1 DUP2 SWAP1 PUSH2 0x39FA SWAP1 PUSH1 0x24 DUP4 ADD SWAP1 PUSH2 0x32B1 JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST PUSH2 0x3A09 SWAP2 CALLDATASIZE SWAP2 PUSH2 0x3988 JUMP JUMPDEST DUP1 MLOAD SWAP1 PUSH1 0x2 DUP3 LT ISZERO SWAP2 DUP3 PUSH2 0x3AD0 JUMPI JUMPDEST POP PUSH1 0x40 MLOAD SWAP2 DUP4 MLOAD SWAP3 DUP1 PUSH1 0x20 DUP7 ADD SWAP5 DUP1 PUSH1 0x20 DUP4 ADD SWAP1 PUSH2 0x3A36 SWAP2 DUP9 PUSH2 0x328E JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP2 ADD PUSH15 0x81B195B99DD1A081A5B9D985B1A59 PUSH1 0x8A SHL SWAP1 MSTORE SUB PUSH1 0x20 ADD PUSH1 0x10 NOT DUP2 ADD DUP3 MSTORE PUSH1 0xF ADD PUSH2 0x3A69 SWAP1 DUP3 PUSH2 0x356C JUMP JUMPDEST PUSH2 0x3A72 SWAP2 PUSH2 0x39CE JUMP JUMPDEST PUSH2 0x3A7B SWAP1 PUSH2 0x3B93 JUMP JUMPDEST ISZERO SWAP2 PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 MLOAD SWAP1 DUP2 PUSH1 0x20 DUP5 ADD PUSH2 0x3A93 SWAP3 PUSH2 0x328E JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP2 ADD PUSH16 0x2063616E6E6F7420626520626C616E6B PUSH1 0x80 SHL SWAP1 MSTORE SUB PUSH1 0x20 ADD PUSH1 0xF NOT DUP2 ADD DUP3 MSTORE PUSH1 0x10 ADD PUSH2 0x3AC7 SWAP1 DUP3 PUSH2 0x356C JUMP JUMPDEST PUSH2 0x35C6 SWAP2 PUSH2 0x39CE JUMP JUMPDEST PUSH1 0x32 LT ISZERO SWAP2 POP CODESIZE PUSH2 0x3A18 JUMP JUMPDEST SWAP1 DUP2 MLOAD DUP2 LT ISZERO PUSH2 0x38ED JUMPI ADD PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x5 DUP2 MLOAD LT PUSH2 0x3B8D JUMPI PUSH1 0x0 DUP1 SWAP2 DUP2 JUMPDEST DUP2 MLOAD DUP4 LT ISZERO PUSH2 0x3B7B JUMPI PUSH1 0x1 PUSH1 0xFE SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT PUSH2 0x3B1D DUP6 DUP6 PUSH2 0x3ADC JUMP JUMPDEST MLOAD AND SUB PUSH2 0x3B3C JUMPI PUSH2 0x3B34 JUMPI PUSH1 0x1 DUP1 SWAP3 JUMPDEST ADD SWAP2 PUSH2 0x3AFC JUMP JUMPDEST POP POP POP PUSH1 0x0 SWAP1 JUMP JUMPDEST SWAP2 DUP3 DUP1 PUSH2 0x3B5A JUMPI JUMPDEST PUSH2 0x3B51 JUMPI JUMPDEST PUSH1 0x1 SWAP1 PUSH2 0x3B2D JUMP JUMPDEST PUSH1 0x1 SWAP4 POP PUSH2 0x3B49 JUMP JUMPDEST POP PUSH1 0x17 PUSH1 0xF9 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT PUSH2 0x3B73 DUP4 DUP6 PUSH2 0x3ADC JUMP JUMPDEST MLOAD AND EQ PUSH2 0x3B44 JUMP JUMPDEST SWAP3 SWAP2 POP POP DUP2 PUSH2 0x3B88 JUMPI POP SWAP1 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST POP PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP2 MLOAD DUP2 LT ISZERO PUSH2 0x3BCD JUMPI PUSH1 0x1 PUSH1 0xFD SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT PUSH2 0x3BB7 DUP4 DUP6 PUSH2 0x3ADC JUMP JUMPDEST MLOAD AND SUB PUSH2 0x3BC6 JUMPI PUSH1 0x1 ADD PUSH2 0x3B96 JUMP JUMPDEST POP POP PUSH1 0x0 SWAP1 JUMP JUMPDEST POP POP PUSH1 0x1 SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CHAINID 0x4C EQ SWAP10 0xD0 SLOAD PUSH4 0x235CEE4C PUSH13 0x8C76A6B2EB19C4576859BE90B4 PUSH15 0x684F86D7D3F64736F6C634300081C STOP CALLER ",
              "sourceMap": "994:17230:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;994:17230:6;;;;;;;;;;;;;-1:-1:-1;;;;;994:17230:6;;;;;;;;;;;;;;;;-1:-1:-1;;994:17230:6;;;;;;;1274:42;994:17230;;;;;;;;;-1:-1:-1;;994:17230:6;;;;;;;;2934:17;;2926:48;;;:::i;:::-;994:17230;;14749:4;994:17230;;;;;;;;;;;;;;14814:9;;994:17230;;14910:10;;;994:17230;15178:14;;;;994:17230;15236:17;;;;994:17230;;;;;;;;15360:10;;;994:17230;;14838:8;14749:4;14838:8;;994:17230;;;:::i;:::-;14861:9;994:17230;14861:9;;;994:17230;:::i;:::-;14885:10;994:17230;;14885:10;;994:17230;:::i;:::-;14963:16;994:17230;14963:16;;;994:17230;:::i;:::-;14994:15;994:17230;14994:15;;;994:17230;:::i;:::-;15024:12;994:17230;15024:12;;;994:17230;:::i;:::-;15051:20;994:17230;15051:20;;;994:17230;:::i;:::-;15086:15;994:17230;15086:15;;;994:17230;:::i;:::-;15116:16;994:17230;15116:16;;;994:17230;:::i;:::-;15147:16;;;994:17230;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;-1:-1:-1;;;;;994:17230:6;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;-1:-1:-1;;;;;994:17230:6;;;;;;;;;;;;;;-1:-1:-1;;;;;994:17230:6;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;994:17230:6;;;;;;;;1709:43;994:17230;;;;;;;;;;;;;;;;;;;-1:-1:-1;;994:17230:6;;;;;;;;;2818:4;994:17230;;2796:57;994:17230;;;;;;;;;2818:17;994:17230;;2804:10;:31;2796:57;:::i;:::-;994:17230;;;2617:52;994:17230;;;2625:8;2617:52;:::i;:::-;994:17230;;;;;;;;;2818:4;994:17230;;;;;10716:10;;;;994:17230;;;;;;;;;;;;;;10708:57;10716:30;;10708:57;:::i;:::-;10784:10;;;994:17230;-1:-1:-1;;;;;994:17230:6;;;10870:14;;994:17230;;-1:-1:-1;994:17230:6;;;;;;-1:-1:-1;;;;;;994:17230:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;994:17230:6;;;;;;;;;11237:14;;;;11233:87;;994:17230;11334:14;;;11330:180;;994:17230;11524:17;11520:187;;994:17230;;;-1:-1:-1;;;;994:17230:6;-1:-1:-1;;;994:17230:6;;;;;;;;;;;;;;;;;;;;;2804:10;;11769:148;;994:17230;;;;11769:148;;;;994:17230;;;-1:-1:-1;;994:17230:6;;;;11520:187;994:17230;;-1:-1:-1;;;11584:59:6;;2804:10;994:17230;11584:59;;994:17230;;;;;;;;;;;-1:-1:-1;1274:42:6;11584:59;;;;;;;994:17230;11584:59;;;11520:187;994:17230;11520:187;994:17230;;;-1:-1:-1;;;994:17230:6;;;;;;;;;;;;-1:-1:-1;;;994:17230:6;;;;;;;11584:59;;;;994:17230;11584:59;994:17230;11584:59;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;994:17230;;;;;;;;;11330:180;994:17230;;-1:-1:-1;;;11391:53:6;;2804:10;994:17230;11391:53;;994:17230;;;;;;;;;;;-1:-1:-1;1174:42:6;11391:53;;;;;;;994:17230;11391:53;;;11330:180;994:17230;11330:180;994:17230;;;-1:-1:-1;;;994:17230:6;;;;;;;;;;;;-1:-1:-1;;;994:17230:6;;;;;;;11391:53;;;;994:17230;11391:53;994:17230;11391:53;;;;;;;:::i;:::-;;;;11233:87;994:17230;11268:40;;;11233:87;994:17230;2804:10;;;;;;11268:40;;;;;11233:87;;;;11268:40;-1:-1:-1;11268:40:6;;;994:17230;;;-1:-1:-1;;;994:17230:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;994:17230:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;994:17230:6;;;;;;;;1556:35;994:17230;;;;;;;;;;;;;;1556:35;;994:17230;;1556:35;;;;;;;:::i;:::-;;;;;;:::i;:::-;;994:17230;1556:35;;;:::i;:::-;;;;994:17230;1556:35;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;994:17230;1556:35;;;;994:17230;;;;;;;;1556:35;;;994:17230;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;-1:-1:-1;;;;;994:17230:6;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;-1:-1:-1;;;;;994:17230:6;;;;;;;;;;;;;;-1:-1:-1;;;;;994:17230:6;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;994:17230:6;;;;;;-1:-1:-1;;;;;994:17230:6;;;;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;994:17230:6;;;;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;994:17230:6;;;;;;;;;;;:::i;:::-;;;;;;;;;;;-1:-1:-1;;;;;994:17230:6;;;;;;;;;;;;-1:-1:-1;;;;;994:17230:6;;;;;;;;-1:-1:-1;;;;;994:17230:6;;;;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;994:17230:6;;;;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;994:17230:6;;;;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;994:17230:6;;;;;;;;;;;:::i;:::-;;;;;-1:-1:-1;;;;;994:17230:6;;;;;;;;;;;;:::i;:::-;;;;;-1:-1:-1;;;;;994:17230:6;;;;;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;994:17230:6;;;;;;;;;;;:::i;:::-;;;;;;;;;;;-1:-1:-1;;;;;994:17230:6;;;;;;;;;;;;-1:-1:-1;;;;;994:17230:6;;;;;;2690:4;994:17230;;2617:52;994:17230;;;2625:8;2617:52;:::i;:::-;-1:-1:-1;;994:17230:6;;;;1367:8;4650:9;:28;994:17230;;1424:12;-1:-1:-1;;;;;994:17230:6;;;4723:29;994:17230;;1424:12;-1:-1:-1;;;;;994:17230:6;;;4797:32;994:17230;;4650:9;4886:13;;;:31;;;994:17230;4886:52;;;;994:17230;;;;;;;;;;;4994:36;;994:17230;;;;:::i;:::-;;;;-1:-1:-1;;;994:17230:6;;;;4994:36;;;;;:::i;:::-;994:17230;;;;5041:38;;994:17230;;;;:::i;:::-;;;;-1:-1:-1;;;994:17230:6;;;;5041:38;;;;;:::i;:::-;994:17230;;;;17356:111;;994:17230;;;;:::i;:::-;;;;-1:-1:-1;;;994:17230:6;;;;17379:11;994:17230;;17175:27;;;;994:17230;:::i;:::-;17213:132;994:17230;;2690:4;17235:15;;;:34;;;;994:17230;;;;;;17291:42;994:17230;;;;;;17291:42;;;;;;994:17230;;;:::i;:::-;;;-1:-1:-1;;;994:17230:6;;;;17291:42;;;;;;;;;;;:::i;:::-;17213:132;:::i;:::-;17379:11;:::i;:::-;17378:12;17412:43;994:17230;;;;;;;;;;17412:43;;;;;;994:17230;;;:::i;:::-;;;-1:-1:-1;;;994:17230:6;;;;17412:43;;;;;;;;;;;:::i;17356:111::-;994:17230;;;17356:111;994:17230;;;;;;;;;:::i;:::-;;;;17412:43;994:17230;;;;;;-1:-1:-1;;;994:17230:6;;17379:11;994:17230;;17175:27;;;;994:17230;:::i;:::-;17213:132;994:17230;;5117:2;17235:15;;;:34;;;;994:17230;;;;;;17291:42;994:17230;;;;;;;17291:42;;;;;994:17230;;:::i;:::-;;;-1:-1:-1;;;994:17230:6;;;;17291:42;;;;;;;;;;;:::i;17379:11::-;17378:12;994:17230;;;;;;;;17412:43;;;;;994:17230;;:::i;17356:111::-;994:17230;;;17356:111;994:17230;;;;;;;;;:::i;:::-;;;;17412:43;994:17230;;;;;;-1:-1:-1;;;994:17230:6;;17379:11;994:17230;;17175:27;;;;994:17230;:::i;:::-;17213:132;994:17230;;5117:2;17235:15;;;:34;;;;994:17230;;;;;17291:42;994:17230;;;;;;;17291:42;;;;;994:17230;;:::i;17356:111::-;994:17230;;;17356:111;994:17230;;;;;;;;;:::i;:::-;;;;17412:43;994:17230;;;;;;-1:-1:-1;;;994:17230:6;;17379:11;994:17230;;17175:27;;;;994:17230;:::i;:::-;17213:132;994:17230;;;17235:15;;;:34;;;;994:17230;;;;;17291:42;994:17230;;;;;;;17291:42;;;;;994:17230;;:::i;17356:111::-;994:17230;;;17356:111;994:17230;;;;;;;;;:::i;:::-;;;;17412:43;994:17230;;;;;;-1:-1:-1;;;994:17230:6;;17379:11;994:17230;;17175:27;;;;994:17230;:::i;:::-;17213:132;994:17230;;5016:1;17235:15;;;:34;;;;994:17230;;;;;17291:42;994:17230;;;;;;;17291:42;;;;;994:17230;;:::i;17356:111::-;994:17230;;;17356:111;994:17230;;;;;;;;;:::i;:::-;;;;17412:43;994:17230;;;;;;-1:-1:-1;;;994:17230:6;;17379:11;994:17230;;17175:27;;;;994:17230;:::i;:::-;17213:132;994:17230;;;17235:15;;;:34;;;;994:17230;;;;;17291:42;994:17230;;;;;;;17291:42;;;;;994:17230;;:::i;17356:111::-;5117:2;-1:-1:-1;;;;;994:17230:6;;;5463:12;;:29;;;994:17230;;;;2690:4;-1:-1:-1;;;;;994:17230:6;;;5528:14;;:34;;;994:17230;;;;5597:27;994:17230;;5597:27;;;;994:17230;:::i;:::-;5597:27;:::i;:::-;994:17230;;;-1:-1:-1;;;;;994:17230:6;;;5655:347;;994:17230;-1:-1:-1;;;;;994:17230:6;;;6045:334;;994:17230;2690:4;994:17230;;;;;;;;;;;;:::i;:::-;;;;;;6501:10;994:17230;6439:783;;;994:17230;;;6439:783;;;;994:17230;:::i;:::-;;;6439:783;;;994:17230;;;6439:783;;;;994:17230;:::i;:::-;;6439:783;;;994:17230;;;6439:783;;;;994:17230;:::i;:::-;;6439:783;;;994:17230;-1:-1:-1;;;;;994:17230:6;;;;6439:783;;;994:17230;-1:-1:-1;;;;;994:17230:6;;;;6439:783;;;994:17230;;;6439:783;;;;994:17230;:::i;:::-;;6439:783;;;994:17230;;;6439:783;;;;994:17230;:::i;:::-;;6439:783;;;994:17230;;;6439:783;;;;994:17230;:::i;:::-;;6439:783;;;994:17230;;;6439:783;;;;994:17230;:::i;:::-;;6439:783;;;994:17230;;;6439:783;;;;994:17230;:::i;:::-;;6439:783;;;994:17230;;;6439:783;;;;994:17230;:::i;:::-;;6439:783;;;994:17230;;;6439:783;;;;994:17230;:::i;:::-;;6439:783;;;994:17230;-1:-1:-1;;;;;4650:9:6;994:17230;;6439:783;;;994:17230;-1:-1:-1;;;;;994:17230:6;;;6439:783;;;;994:17230;-1:-1:-1;;;;;994:17230:6;;;6439:783;;;;994:17230;;6439:783;;;;994:17230;;6439:783;;;;994:17230;;6439:783;;;;994:17230;;6439:783;;;;994:17230;;;;;5016:1;994:17230;;;;;;;;;;;;;;;;;6439:783;;;994:17230;;2690:4;994:17230;;;;;;;;;;;;;;;;;;;;6439:783;;;994:17230;;;;-1:-1:-1;;;;;994:17230:6;;;;;;;5016:1;994:17230;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;2690:4;994:17230;;;;;;;;;;;5016:1;994:17230;;;;;6439:783;;;994:17230;;;;-1:-1:-1;;;;;994:17230:6;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;2690:4;994:17230;;;;;;;;;;;;;;;;;6439:783;;;994:17230;;;;-1:-1:-1;;;;;994:17230:6;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;2690:4;994:17230;;;;;;;;;;;;;;;;6439:783;;;994:17230;6439:783;;994:17230;6439:783;;994:17230;;;-1:-1:-1;;;;;;994:17230:6;-1:-1:-1;;;;;994:17230:6;;;;;;;;;;;;6439:783;994:17230;6439:783;;;994:17230;;;;-1:-1:-1;;;;;994:17230:6;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;2690:4;994:17230;;;;;;;;;;;;;;;;;6439:783;994:17230;6439:783;;;994:17230;;;;-1:-1:-1;;;;;994:17230:6;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;2690:4;994:17230;;;;;;;;;;;;;;;;;6439:783;994:17230;6439:783;;;994:17230;;;;-1:-1:-1;;;;;994:17230:6;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;2690:4;994:17230;;;;;;;;;;;;;;;;;6439:783;994:17230;6439:783;;;994:17230;;;;-1:-1:-1;;;;;994:17230:6;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;2690:4;994:17230;;;;;;;;;;;;;;5117:2;994:17230;;6439:783;994:17230;6439:783;;;994:17230;;;;-1:-1:-1;;;;;994:17230:6;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;2690:4;994:17230;;;;;;;;;;;;;;;;;6439:783;994:17230;6439:783;;;994:17230;;;;-1:-1:-1;;;;;994:17230:6;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;2690:4;994:17230;;;;;;;;;;;;;;;;;6439:783;994:17230;6439:783;;;994:17230;;;;-1:-1:-1;;;;;994:17230:6;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;2690:4;994:17230;;;;;;;;;;;;;;6439:783;;994:17230;6439:783;;994:17230;6439:783;;;;994:17230;;;-1:-1:-1;;;;;;994:17230:6;-1:-1:-1;;;;;994:17230:6;;;;;;;;;;;;6439:783;-1:-1:-1;;;;;6439:783:6;;;;;994:17230;;;-1:-1:-1;;;;;994:17230:6;;;;;;;6439:783;;;;994:17230;;;;;;;;;;6439:783;;;;;994:17230;6439:783;;;994:17230;-1:-1:-1;;;;994:17230:6;;;;;;;;-1:-1:-1;;;994:17230:6;;;;;;;;;;-1:-1:-1;;;994:17230:6;;;;;;;;;;-1:-1:-1;;;994:17230:6;;;;6439:783;;;;994:17230;;;;;;;;-1:-1:-1;;;;;;994:17230:6;-1:-1:-1;;;;;994:17230:6;;;;;;;;;;-1:-1:-1;994:17230:6;;;;;;;;;;;;;7257:15;994:17230;;;;7331:11;;6501:10;994:17230;7288:32;994:17230;;7288:32;7331:11;:::i;:::-;2690:4;994:17230;;;-1:-1:-1;;994:17230:6;;;;;;;;;-1:-1:-1;994:17230:6;;;;;;;;;;;;;;;;;;;;;;;;;;;2690:4;994:17230;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2690:4;994:17230;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2690:4;994:17230;;;;;;-1:-1:-1;994:17230:6;;;;;;;;;;;;;;;;;;;;-1:-1:-1;994:17230:6;;;;;;;;;;;;;;;;;;;;;;;;;;;2690:4;994:17230;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2690:4;994:17230;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2690:4;994:17230;;;;;;-1:-1:-1;994:17230:6;;;;;;;;-1:-1:-1;994:17230:6;;;;;;;;;;;;;;;;;;;;;;;;;;;2690:4;994:17230;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2690:4;994:17230;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2690:4;994:17230;;;;;;-1:-1:-1;994:17230:6;;;;;;;;-1:-1:-1;994:17230:6;;;;;;;;;;;;;;;;;;;;;;;;;;;2690:4;994:17230;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2690:4;994:17230;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2690:4;994:17230;;;;;;-1:-1:-1;994:17230:6;;;;;;;;-1:-1:-1;994:17230:6;;;;;;;;;;;;;;;;;;;;;;;;;;;2690:4;994:17230;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2690:4;994:17230;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2690:4;994:17230;;;;;;-1:-1:-1;994:17230:6;;;;;;;;-1:-1:-1;994:17230:6;;;;;;;;;;;;;;;;;;;;;;;;;;;2690:4;994:17230;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2690:4;994:17230;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2690:4;994:17230;;;;;;-1:-1:-1;994:17230:6;;;;;;;;-1:-1:-1;994:17230:6;;;;;;;;;;;;;;;;;;;;;;;;;;;2690:4;994:17230;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2690:4;994:17230;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2690:4;994:17230;;;;;;-1:-1:-1;994:17230:6;;;;;;;;-1:-1:-1;994:17230:6;;;;;;;;;;;;;;;;;;;-1:-1:-1;;994:17230:6;;;;;;2690:4;994:17230;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2690:4;994:17230;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2690:4:6;994:17230;;;;-1:-1:-1;994:17230:6;;;;;;;-1:-1:-1;994:17230:6;;;;;;;;;;;;;;;;;;;-1:-1:-1;;994:17230:6;;;;;;2690:4;994:17230;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2690:4;994:17230;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2690:4:6;994:17230;;;;-1:-1:-1;994:17230:6;;;;;;;-1:-1:-1;994:17230:6;;;;;;;5016:1;994:17230;;;;;;;;;;;-1:-1:-1;;994:17230:6;;;;;;2690:4;994:17230;;;;;;;;;;;;;;;;;5016:1;994:17230;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2690:4;994:17230;;;;;;;;;;;;;;5016:1;994:17230;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2690:4:6;994:17230;;;;-1:-1:-1;994:17230:6;;;6045:334;994:17230;;;6106:154;;;;-1:-1:-1;;;6106:154:6;;;;;;;6162:10;994:17230;6106:154;;994:17230;6203:4;994:17230;;;;-1:-1:-1;;;;;994:17230:6;;;;;6106:154;;994:17230;;6106:154;994:17230;;-1:-1:-1;1174:42:6;6106:154;;;;;;;;;994:17230;6106:154;;;;6045:334;6080:236;;;:::i;:::-;2690:4;994:17230;;;6331:12;994:17230;;-1:-1:-1;;;;;994:17230:6;;;;;;;;6045:334;;6106:154;;994:17230;6106:154;994:17230;6106:154;;;;;;;6080:236;6106:154;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;-1:-1:-1;6106:154:6;;;;994:17230;;;;;;;;;;5655:347;994:17230;;;-1:-1:-1;;;5719:160:6;;;;5778:10;994:17230;5719:160;;994:17230;5819:4;994:17230;;;;-1:-1:-1;;;;;994:17230:6;;;;;;;;;-1:-1:-1;1274:42:6;5719:160;;;;;;5693:240;5719:160;994:17230;5719:160;;;5655:347;5693:240;;:::i;:::-;2690:4;994:17230;;;;;;-1:-1:-1;;;;;994:17230:6;;;;;;;;5655:347;;5719:160;;;;994:17230;5719:160;994:17230;5719:160;;;;;;;:::i;:::-;;;;994:17230;;;;-1:-1:-1;;;994:17230:6;;;;;;;;;;;;-1:-1:-1;;;994:17230:6;;;;;;;;;;;-1:-1:-1;;;994:17230:6;;;;;;;;;;;;-1:-1:-1;;;994:17230:6;;;;;;;5528:34;994:17230;5559:3;-1:-1:-1;;;;;994:17230:6;;;5546:16;;5528:34;;994:17230;;;;-1:-1:-1;;;994:17230:6;;;;;;;;;;;;-1:-1:-1;;;994:17230:6;;;;;;;5463:29;994:17230;5234:3;-1:-1:-1;;;;;994:17230:6;;;5479:13;;5463:29;;17235:34;5422:2;17254:15;;;;17235:34;;;;994:17230;17254:15;;;;17235:34;;;;5234:3;17254:15;;;;17235:34;;;;5174:3;17254:15;;;;17235:34;;;;5117:2;17254:15;;;;17235:34;;;994:17230;;;-1:-1:-1;;;994:17230:6;;;;;;;;;;;;-1:-1:-1;;;994:17230:6;;;;;;;4886:52;994:17230;-1:-1:-1;;;;;994:17230:6;;;4921:17;;4886:52;;:31;994:17230;-1:-1:-1;;;;;994:17230:6;;;4903:14;;4886:31;;994:17230;;;-1:-1:-1;;;994:17230:6;;;;;;;;;;;;-1:-1:-1;;;994:17230:6;;;;;;;;;;-1:-1:-1;;;994:17230:6;;;;;;;;;;;;-1:-1:-1;;;994:17230:6;;;;;;;;;;-1:-1:-1;;;994:17230:6;;;;;;;;;;;;-1:-1:-1;;;994:17230:6;;;;;;;;;;;;;-1:-1:-1;;994:17230:6;;;;;;2926:48;994:17230;;2934:17;;2926:48;:::i;:::-;994:17230;;;2617:52;994:17230;;;2625:8;2617:52;:::i;:::-;994:17230;;;;;;;;;7564:4;994:17230;;;;;7594:10;;;994:17230;;;;;;;;;;;;;7586:57;7594:30;;7586:57;:::i;:::-;994:17230;7678:9;;994:17230;-1:-1:-1;;;;;994:17230:6;7664:10;:23;994:17230;;7727:10;;994:17230;;-1:-1:-1;;;;;;994:17230:6;7664:10;994:17230;;;;;-1:-1:-1;;;;994:17230:6;-1:-1:-1;;;994:17230:6;;;;;;;;7800:126;;994:17230;;;;;;;;7943:43;994:17230;7664:10;7943:43;;994:17230;;;-1:-1:-1;;994:17230:6;;;;7800:126;994:17230;;-1:-1:-1;;;;994:17230:6;-1:-1:-1;;;994:17230:6;;;7664:10;7887:27;;-1:-1:-1;;7887:27:6;7800:126;;;994:17230;;;-1:-1:-1;;;994:17230:6;;;;;;;;;;;;-1:-1:-1;;;994:17230:6;;;;;;;;;;;;;-1:-1:-1;;994:17230:6;;;;;;;;;;;;;;;;13168:40;994:17230;;;13223:20;;;13219:46;;994:17230;13320:22;13344:12;;;;;;13552:24;;;;:::i;:::-;13587;994:17230;13629:22;13653:12;;;;;;994:17230;;;;;;;;;;;;;;;;;:::i;:::-;13849:20;;994:17230;;;;;;;13667:3;994:17230;;;13433:4;994:17230;;;13433:14;994:17230;;;13691:14;994:17230;;;;;;;;;;13691:34;13687:129;;13667:3;994:17230;;13629:22;;13687:129;13746:21;13786:14;13746:21;;;994:17230;13746:21;;;:::i;:::-;994:17230;13786:14;:::i;:::-;13687:129;;;;;13358:3;994:17230;;;13433:4;994:17230;;;13433:14;994:17230;;;13433:14;994:17230;;;;;;;;;;13433:34;13429:51;;13358:3;994:17230;;13320:22;;13429:51;13469:11;;994:17230;13469:11;;:::i;:::-;13429:51;;;;;13219:46;13245:20;;-1:-1:-1;13219:46:6;;994:17230;;;;;;;;;;;;;;;;;;-1:-1:-1;;994:17230:6;;;;;;;1424:12;994:17230;;;;;;;;;-1:-1:-1;;994:17230:6;;;;;;16819:9;994:17230;16795:116;16815:13;;;;;;994:17230;;;;;;;;16830:3;994:17230;;;16854:4;994:17230;;;16854:14;994:17230;;;16854:14;994:17230;;;;;;;;;;16854:34;16850:49;;16830:3;16819:9;994:17230;16800:13;;16850:49;16890:9;;16819;16890;;:::i;:::-;16850:49;;;;;994:17230;;;;;;-1:-1:-1;;994:17230:6;;;;;;-1:-1:-1;;;;;994:17230:6;;;;;;;;;;;3034:41;3042:10;994:17230;;;;-1:-1:-1;;;;;994:17230:6;3042:19;3034:41;:::i;:::-;12181:22;;994:17230;;-1:-1:-1;;;;;;994:17230:6;;;;;;;;-1:-1:-1;;;;;994:17230:6;;;;;;12266:22;;994:17230;12266:22;994:17230;;;;-1:-1:-1;;;994:17230:6;;;;;;;;;;;;-1:-1:-1;;;994:17230:6;;;;;;;;;;;;;-1:-1:-1;;994:17230:6;;;;;;;;;2818:4;994:17230;;2796:57;994:17230;;;;;;;;;2818:17;994:17230;;2804:10;:31;2796:57;:::i;:::-;994:17230;;;2617:52;994:17230;;;2625:8;2617:52;:::i;:::-;994:17230;;;;;;;;;2818:4;994:17230;;;;;8288:10;;;994:17230;;;;;;;;;;;;;;;8280:57;8356:10;8288:30;;8280:57;:::i;:::-;8356:10;994:17230;;8356:10;;994:17230;-1:-1:-1;;;;;994:17230:6;8356:24;994:17230;;-1:-1:-1;;;;994:17230:6;-1:-1:-1;;;994:17230:6;;;;;;;;8454:129;;994:17230;;;;;;;;8600:42;994:17230;2804:10;8600:42;;994:17230;;;-1:-1:-1;;994:17230:6;;;;8454:129;994:17230;;-1:-1:-1;;;;994:17230:6;-1:-1:-1;;;994:17230:6;;;;-1:-1:-1;;;;;994:17230:6;8544:27;;-1:-1:-1;;8544:27:6;8454:129;;;;994:17230;;;-1:-1:-1;;;994:17230:6;;;;;;;;;;;;-1:-1:-1;;;994:17230:6;;;;;;;;;;;;;-1:-1:-1;;994:17230:6;;;;16452:9;994:17230;16442:20;;;:::i;:::-;16478:13;994:17230;16493:13;;;;;;994:17230;;;;;;;;;;;;;;:::i;:::-;;;;16508:3;994:17230;16452:9;994:17230;;;16540:4;994:17230;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;16540:4;994:17230;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;-1:-1:-1;;;;;994:17230:6;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;-1:-1:-1;;;;;994:17230:6;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;994:17230:6;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;16528:19;;;;:::i;:::-;;;;;;:::i;:::-;;994:17230;16478:13;;994:17230;;;;;;-1:-1:-1;;994:17230:6;;;;15735:9;994:17230;;;15731:13;;;;;;15937:20;15992:16;15937:20;;;:::i;:::-;15992:16;;:::i;:::-;994:17230;16082:13;;16097;;;;;;994:17230;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;16112:3::-;994:17230;;;15817:4;994:17230;;;15817:14;994:17230;;;16136:14;994:17230;;;;;;;;;;16136:34;16132:159;;16112:3;15735:9;994:17230;16082:13;;16132:159;16191:14;16268:7;16191:14;;;15735:9;16191:14;;;:::i;:::-;994:17230;;;;15817:4;994:17230;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;15817:4;994:17230;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;-1:-1:-1;;;;;994:17230:6;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;-1:-1:-1;;;;;994:17230:6;;;;;;;;;;;;;15817:14;994:17230;;;-1:-1:-1;;;;;994:17230:6;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;16224:25;;;;:::i;:::-;;;;;;:::i;:::-;;16268:7;:::i;:::-;16132:159;;;;;15746:3;994:17230;;;15817:4;994:17230;;;15817:14;994:17230;;;15817:14;994:17230;;;;;;;;;;15817:34;15813:47;;15746:3;15735:9;994:17230;15716:13;;15813:47;15853:7;;15735:9;15853:7;;:::i;:::-;15813:47;;;;;994:17230;;;;;;-1:-1:-1;;994:17230:6;;;;;;;1174:42;994:17230;;;;;;;;;-1:-1:-1;;994:17230:6;;;;;;2926:48;994:17230;;2934:17;;2926:48;:::i;:::-;994:17230;;;2617:52;994:17230;;;2625:8;2617:52;:::i;:::-;994:17230;;;;;;;;;8886:4;994:17230;;;;;8916:10;;;;994:17230;;;;;;;;;;;;;;;;8916:29;994:17230;;9000:10;;;994:17230;-1:-1:-1;;;;;994:17230:6;8986:10;:24;994:17230;;9060:14;;994:17230;;-1:-1:-1;;;;;994:17230:6;;9060:18;;;;;;;;:40;;;994:17230;9060:65;;;;994:17230;;;;-1:-1:-1;994:17230:6;;;;;;-1:-1:-1;;;;;;994:17230:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;994:17230:6;;;;-1:-1:-1;9552:87:6;;994:17230;9653:14;;;9649:182;;994:17230;9890:17;9886:352;;994:17230;;;;;;;;;;;;;;;;;;8986:10;;10255:147;;994:17230;;;;10255:147;994:17230;9886:352;994:17230;;;;;;9950:222;;8986:10;994:17230;9950:222;;994:17230;;;;;;;;;;;;;;;;;9950:222;;;994:17230;1274:42;9950:222;;;;;;;10255:147;9950:222;9924:302;9950:222;994:17230;9950:222;;;9924:302;;:::i;:::-;9886:352;;;;9950:222;;;;994:17230;9950:222;994:17230;9950:222;;;;;;;:::i;:::-;;;;9649:182;994:17230;;-1:-1:-1;;;9710:53:6;;8986:10;994:17230;9710:53;;994:17230;;;;;;;;;;;-1:-1:-1;1174:42:6;9710:53;;;;;;9684:135;9710:53;994:17230;9710:53;;;9649:182;9684:135;;:::i;:::-;9649:182;;9710:53;;;;994:17230;9710:53;994:17230;9710:53;;;;;;;:::i;:::-;;;;9552:87;994:17230;9587:40;;;9552:87;994:17230;8986:10;;;;;;9587:40;;;;;9552:87;;;;9587:40;-1:-1:-1;9587:40:6;;;994:17230;;;-1:-1:-1;;;994:17230:6;;;;;;;;;;;;-1:-1:-1;;;994:17230:6;;;;;;;9060:65;994:17230;-1:-1:-1;;;;;994:17230:6;;9104:21;;9060:65;;:40;994:17230;;;;9082:18;;9060:40;;994:17230;;;-1:-1:-1;;;994:17230:6;;;;;;;;;;;;-1:-1:-1;;;994:17230:6;;;;;;;;;;-1:-1:-1;;;994:17230:6;;;;;;;;;;;;-1:-1:-1;;;994:17230:6;;;;;;;;;;;;;-1:-1:-1;;994:17230:6;;;;;1525:24;994:17230;;;;;;;;;;;;;-1:-1:-1;;994:17230:6;;;;;;;1367:8;994:17230;;;;;;;;;-1:-1:-1;;994:17230:6;;;;;;-1:-1:-1;;;;;994:17230:6;;;;;;3034:41;994:17230;;;;;;;;;;3042:10;:19;3034:41;:::i;:::-;994:17230;;-1:-1:-1;;;12509:45:6;;12548:4;994:17230;12509:45;;994:17230;;;12509:45;994:17230;1174:42;12509:45;;;;;;;994:17230;12509:45;;;994:17230;-1:-1:-1;994:17230:6;;-1:-1:-1;;;12573:42:6;;-1:-1:-1;;;;;994:17230:6;;;;12573:42;;994:17230;;;;;;;;;;;12573:42;;;994:17230;1174:42;12573;;;;;;;994:17230;12573:42;;;994:17230;;;;;;;;;-1:-1:-1;;;994:17230:6;;;;;;;;12509:45;994:17230;;;-1:-1:-1;;;994:17230:6;;;;;;;12573:42;;;;994:17230;12573:42;994:17230;12573:42;;;;;;;:::i;:::-;;;;12509:45;;;994:17230;12509:45;;994:17230;12509:45;;;;;;994:17230;12509:45;;;:::i;:::-;;;994:17230;;;;;12573:42;12509:45;;;;;-1:-1:-1;12509:45:6;;994:17230;;;;;;-1:-1:-1;;994:17230:6;;;;;;;;1598:47;994:17230;;;;;;;;;;;;;;;;;;;-1:-1:-1;;994:17230:6;;;;;1484:7;994:17230;;;;;;;;;;;;;;;;;;-1:-1:-1;994:17230:6;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;994:17230:6;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;;994:17230:6;;;;:::o;:::-;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;994:17230:6;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;:::i;:::-;;;;;-1:-1:-1;;;;;994:17230:6;;;;;;;;;-1:-1:-1;;;;;994:17230:6;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;:::i;:::-;;;;;;-1:-1:-1;;;;;994:17230:6;;;;;;;;;-1:-1:-1;;;;;994:17230:6;;;;;;;;;-1:-1:-1;;;;;994:17230:6;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;994:17230:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;994:17230:6;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;994:17230:6;;;;;;;:::o;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;994:17230:6;;;;;;;:::o;:::-;;;;;;-1:-1:-1;994:17230:6;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:::o;:::-;;;-1:-1:-1;994:17230:6;;;;;-1:-1:-1;994:17230:6;;-1:-1:-1;994:17230:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;994:17230:6;;;;;;;;;;;;-1:-1:-1;;;994:17230:6;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;:::o;:::-;;;-1:-1:-1;;;994:17230:6;;;;;;;;;;;;-1:-1:-1;;;994:17230:6;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;994:17230:6;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;994:17230:6;;;;;;;;;;;;-1:-1:-1;;;994:17230:6;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;994:17230:6;;;;;;;;;;;;-1:-1:-1;;;994:17230:6;;;;;;;;-1:-1:-1;;994:17230:6;;;;;;;:::o;:::-;-1:-1:-1;;;;;994:17230:6;;;;;;;;;:::o;:::-;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;:::o;:::-;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;994:17230:6;;;;;;;;;:::o;:::-;;;;;;;;:::i;:::-;-1:-1:-1;994:17230:6;;-1:-1:-1;994:17230:6;;;;;;;;;;;;;;;;;;;-1:-1:-1;994:17230:6;;;;-1:-1:-1;994:17230:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;994:17230:6;;;;-1:-1:-1;994:17230:6;;;;-1:-1:-1;994:17230:6;;;;-1:-1:-1;994:17230:6;;;;-1:-1:-1;994:17230:6;;;;-1:-1:-1;994:17230:6;;;;-1:-1:-1;994:17230:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;:::o;:::-;;;-1:-1:-1;;;994:17230:6;;;;;;;;;;;;-1:-1:-1;;;994:17230:6;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;994:17230:6;;;;;;;;;;;;-1:-1:-1;;;994:17230:6;;;;;;;;;;;-1:-1:-1;;;;;994:17230:6;;;;;;;;;;;-1:-1:-1;;994:17230:6;;;;;:::i;:::-;;;;;;;;;;;;;;;;;-1:-1:-1;994:17230:6;;;;;;:::o;:::-;;;;;:::o;:::-;;;-1:-1:-1;;;994:17230:6;;;;;;;;;;;;;;;;;:::i;:::-;;;;17020:455;994:17230;17020:455;994:17230;;;:::i;:::-;;;17235:15;5016:1;17235:15;;;:34;;;;17020:455;994:17230;;;;;;;;17291:42;994:17230;;17291:42;;;;;994:17230;;;;;:::i;:::-;;;17291:42;994:17230;;-1:-1:-1;;;994:17230:6;;17291:42;;;;;;;;;994:17230;17291:42;;;;;:::i;:::-;17213:132;;;:::i;:::-;17379:11;;;:::i;:::-;17378:12;994:17230;;;;;;;17412:43;;17291:42;17412:43;;994:17230;;;:::i;:::-;;;17291:42;994:17230;;-1:-1:-1;;;994:17230:6;;17412:43;17291:42;17412:43;;;;;;;994:17230;17412:43;;;;;:::i;:::-;17356:111;;;:::i;17235:34::-;5019:2;-1:-1:-1;17254:15:6;;-1:-1:-1;17235:34:6;;;994:17230;;;;;;;;;;;;;:::o;17686:535::-;17825:1;994:17230;;17814:12;17810:30;;994:17230;17882:26;17924:10;;17950:3;994:17230;;17936:12;;;;;-1:-1:-1;;;;;;;;;17974:4:6;;;;:::i;:::-;994:17230;;17974:11;994:17230;;18006:23;;994:17230;18048:12;17970:193;;994:17230;17924:10;;;18006:23;18017:12;;;994:17230;18017:12;:::o;17970:193::-;18086:20;;;;;17970:193;18082:81;;17970:193;994:17230;17970:193;;;18082:81;994:17230;;-1:-1:-1;18082:81:6;;18086:20;-1:-1:-1;;;;;;;;;;18095:4:6;;;;:::i;:::-;994:17230;;18095:11;18086:20;;17936:12;;;;;18191:22;;;18184:29;17686:535;:::o;18191:22::-;;;17686:535;:::o;17810:30::-;17828:12;994:17230;17828:12;:::o;17483:195::-;994:17230;17588:3;994:17230;;17574:12;;;;;-1:-1:-1;;;;;;;;;17612:4:6;;;;:::i;:::-;994:17230;;17612:11;17608:29;;994:17230;;17562:10;;17608:29;17625:12;;994:17230;17625:12;:::o;17574:::-;;;994:17230;17483:195;:::o"
            },
            "methodIdentifiers": {
              "BOUNTY_TIMEOUT()": "0b5d39fa",
              "CUSD_ADDRESS()": "465c66e9",
              "GDOLLAR_ADDRESS()": "ee7afb1c",
              "MAX_CELO_BOUNTY()": "3fa8be32",
              "MAX_CUSD_BOUNTY()": "9dc5ac72",
              "admin()": "f851a440",
              "cancelAndRefund(uint256)": "d32bfb6c",
              "claimBounty(uint256)": "44021ad7",
              "confirmFoundByOwner(uint256)": "5e23985b",
              "emergencyWithdrawCUSD(address)": "3f26decd",
              "escrowedCUSD(uint256)": "1850e3a7",
              "escrowedGDOLLAR(uint256)": "d25a6f05",
              "getAllLostPets()": "543df5a3",
              "getAllPets()": "5b236d97",
              "getLostPetIds(uint256,uint256)": "a06e0061",
              "getLostPetsCount()": "8b504c17",
              "getPetDetails(uint256)": "d89fd4b4",
              "markAsFound(uint256)": "b3035b64",
              "nextPetId()": "403f8cc7",
              "pets(uint256)": "cfb869bf",
              "postLostPet(string,string,string,uint128,uint128,string,string,string,string,string,string,string,uint128,uint128)": "ce2ed0e2",
              "postTime(uint256)": "d74a48a4",
              "transferAdmin(address)": "75829def"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"petId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"finder\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"celoAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"cUSDAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"gDollarAmount\",\"type\":\"uint256\"}],\"name\":\"BountyClaimed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"petId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"celoAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"cUSDAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"gDollarAmount\",\"type\":\"uint256\"}],\"name\":\"BountyRefunded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"petId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"confirmer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"isOwner\",\"type\":\"bool\"}],\"name\":\"ConfirmationAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"petId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"finder\",\"type\":\"address\"}],\"name\":\"PetFound\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"petId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"PetPosted\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"BOUNTY_TIMEOUT\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"CUSD_ADDRESS\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"GDOLLAR_ADDRESS\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MAX_CELO_BOUNTY\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MAX_CUSD_BOUNTY\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"admin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"petId\",\"type\":\"uint256\"}],\"name\":\"cancelAndRefund\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"petId\",\"type\":\"uint256\"}],\"name\":\"claimBounty\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"petId\",\"type\":\"uint256\"}],\"name\":\"confirmFoundByOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"emergencyWithdrawCUSD\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"escrowedCUSD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"escrowedGDOLLAR\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAllLostPets\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"address payable\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"breed\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"gender\",\"type\":\"string\"},{\"internalType\":\"uint128\",\"name\":\"sizeCm\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"ageMonths\",\"type\":\"uint128\"},{\"internalType\":\"string\",\"name\":\"dateTimeLost\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"imageUrl\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"lastSeenLocation\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"contactName\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"contactPhone\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"contactEmail\",\"type\":\"string\"},{\"internalType\":\"uint128\",\"name\":\"celoBounty\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"cUSDBounty\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"gDollarBounty\",\"type\":\"uint128\"},{\"internalType\":\"enum PetTrace.PetStatus\",\"name\":\"status\",\"type\":\"uint8\"},{\"internalType\":\"bool\",\"name\":\"ownerConfirmed\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"finderConfirmed\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"finder\",\"type\":\"address\"}],\"internalType\":\"struct PetTrace.Pet[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAllPets\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"address payable\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"breed\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"gender\",\"type\":\"string\"},{\"internalType\":\"uint128\",\"name\":\"sizeCm\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"ageMonths\",\"type\":\"uint128\"},{\"internalType\":\"string\",\"name\":\"dateTimeLost\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"imageUrl\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"lastSeenLocation\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"contactName\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"contactPhone\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"contactEmail\",\"type\":\"string\"},{\"internalType\":\"uint128\",\"name\":\"celoBounty\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"cUSDBounty\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"gDollarBounty\",\"type\":\"uint128\"},{\"internalType\":\"enum PetTrace.PetStatus\",\"name\":\"status\",\"type\":\"uint8\"},{\"internalType\":\"bool\",\"name\":\"ownerConfirmed\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"finderConfirmed\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"finder\",\"type\":\"address\"}],\"internalType\":\"struct PetTrace.Pet[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"startIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxCount\",\"type\":\"uint256\"}],\"name\":\"getLostPetIds\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"bool\",\"name\":\"hasMore\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getLostPetsCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"petId\",\"type\":\"uint256\"}],\"name\":\"getPetDetails\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"},{\"internalType\":\"uint128\",\"name\":\"\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"\",\"type\":\"uint128\"},{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"},{\"internalType\":\"uint128\",\"name\":\"\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"\",\"type\":\"uint128\"},{\"internalType\":\"enum PetTrace.PetStatus\",\"name\":\"\",\"type\":\"uint8\"},{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"petId\",\"type\":\"uint256\"}],\"name\":\"markAsFound\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nextPetId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"pets\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"address payable\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"breed\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"gender\",\"type\":\"string\"},{\"internalType\":\"uint128\",\"name\":\"sizeCm\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"ageMonths\",\"type\":\"uint128\"},{\"internalType\":\"string\",\"name\":\"dateTimeLost\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"imageUrl\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"lastSeenLocation\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"contactName\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"contactPhone\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"contactEmail\",\"type\":\"string\"},{\"internalType\":\"uint128\",\"name\":\"celoBounty\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"cUSDBounty\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"gDollarBounty\",\"type\":\"uint128\"},{\"internalType\":\"enum PetTrace.PetStatus\",\"name\":\"status\",\"type\":\"uint8\"},{\"internalType\":\"bool\",\"name\":\"ownerConfirmed\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"finderConfirmed\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"finder\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"breed\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"gender\",\"type\":\"string\"},{\"internalType\":\"uint128\",\"name\":\"sizeCm\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"ageMonths\",\"type\":\"uint128\"},{\"internalType\":\"string\",\"name\":\"dateTimeLost\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"imageUrl\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"lastSeenLocation\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"contactName\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"contactPhone\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"contactEmail\",\"type\":\"string\"},{\"internalType\":\"uint128\",\"name\":\"cUSDBounty\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"gDollarBounty\",\"type\":\"uint128\"}],\"name\":\"postLostPet\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"postTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"transferAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"A decentralized application for tracking lost pets and managing bounties on Celo network\",\"kind\":\"dev\",\"methods\":{\"cancelAndRefund(uint256)\":{\"details\":\"Can only be called by owner before finder assigned\"},\"claimBounty(uint256)\":{\"details\":\"Can only be called by finder after confirmation\"},\"confirmFoundByOwner(uint256)\":{\"details\":\"Completes finding process if finder also confirmed\"},\"emergencyWithdrawCUSD(address)\":{\"params\":{\"to\":\"Address to send funds to\"}},\"getAllLostPets()\":{\"returns\":{\"_0\":\"Two arrays: pet IDs and Pet structs\"}},\"getLostPetIds(uint256,uint256)\":{\"params\":{\"maxCount\":\"Maximum number of IDs to return\",\"startIndex\":\"Starting index (0-based)\"},\"returns\":{\"hasMore\":\"Whether more results exist\",\"ids\":\"Array of pet IDs\"}},\"getLostPetsCount()\":{\"returns\":{\"_0\":\"Number of pets not found\"}},\"getPetDetails(uint256)\":{\"params\":{\"petId\":\"ID of pet to retrieve\"},\"returns\":{\"_0\":\"All pet details in a tuple\"}},\"markAsFound(uint256)\":{\"details\":\"Can be called by anyone except owner\"},\"postLostPet(string,string,string,uint128,uint128,string,string,string,string,string,string,string,uint128,uint128)\":{\"details\":\"Creates new pet record and escrows bounty\"},\"transferAdmin(address)\":{\"params\":{\"newAdmin\":\"Address of new admin\"}}},\"title\":\"PetTrace\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"cancelAndRefund(uint256)\":{\"notice\":\"Cancel lost pet report and refund bounties\"},\"claimBounty(uint256)\":{\"notice\":\"Claim bounty for found pet\"},\"confirmFoundByOwner(uint256)\":{\"notice\":\"Confirm found pet by owner\"},\"emergencyWithdrawCUSD(address)\":{\"notice\":\"Emergency withdraw cUSD (admin only)\"},\"getAllLostPets()\":{\"notice\":\"Get all lost pets (caution: may hit gas limits)\"},\"getLostPetIds(uint256,uint256)\":{\"notice\":\"Get paginated list of lost pet IDs\"},\"getLostPetsCount()\":{\"notice\":\"Get count of lost pets\"},\"getPetDetails(uint256)\":{\"notice\":\"Get full pet details\"},\"markAsFound(uint256)\":{\"notice\":\"Mark pet as found\"},\"postLostPet(string,string,string,uint128,uint128,string,string,string,string,string,string,string,uint128,uint128)\":{\"notice\":\"Post a lost pet with optional bounty\"},\"transferAdmin(address)\":{\"notice\":\"Transfer admin rights\"}},\"notice\":\"Allows owners to post lost pets with bounties (CELO/cUSD) and finders to claim rewards\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/PetTrace.sol\":\"PetTrace\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/PetTrace.sol\":{\"keccak256\":\"0x35acb61ee1cd5c13ab7b01b236cdb0ea0b42aedc11f5b8f3e74a0532d60579f6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ae71cb763c19c38dae2c07a9f25dc365ee552cec7531c02f6aafd7dcdbbacd6b\",\"dweb:/ipfs/QmRCZGZPsnrFGF9yK63KsDnWxbmTcTnXbvx3tWtyMEepTr\"]}},\"version\":1}"
        }
      }
    }
  }
}